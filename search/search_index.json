{"config":{"lang":["en","it","de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#wis2-in-a-box-training","title":"WIS2 in a box training","text":"<p>WIS2 in a box (wis2box) is a Free and Open Source (FOSS) Reference Implementation of a WMO WIS2 Node. The project provides a plug and play toolset to ingest, process, and publish weather/climate/water data using standards-based approaches in alignment with the WIS2 principles. wis2box also provides access to all data in the WIS2 network. wis2box is designed to have a low barrier to entry for data providers, providing enabling infrastructure and services for data discovery, access, and visualization.</p> <p>This training provides step-by-step explanations of various aspects of the wis2box project as well as a number of exercises to help you publish and download data from WIS2.  The training is provided in the form of overview presentations as well as hands-on practical exercises.</p> <p>Participants will be able to work with sample test data and metadata, as well as integrate their own data and metadata.</p> <p>This training covers a wide range of topics (install/setup/configuration, publishing/downloading data, etc.). </p>"},{"location":"#goals-and-learning-outcomes","title":"Goals and learning outcomes","text":"<p>The goals of this training are to become familiar with the following:</p> <ul> <li>WIS2 architecture core concepts and components</li> <li>data and metadata formats used in WIS2 for discovery and access</li> <li>wis2box architecture and environment</li> <li>wis2box core functions:<ul> <li>metadata management</li> <li>data ingest and transformation to BUFR format</li> <li>MQTT broker for WIS2 message publishing</li> <li>HTTP endpoint for data download</li> <li>API endpoint for programmatic access to data</li> </ul> </li> </ul>"},{"location":"#navigation","title":"Navigation","text":"<p>The left hand navigation provides a table of contents for the entire training.</p> <p>The right hand navigation provides a table of contents for a specific page.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":""},{"location":"#knowledge","title":"Knowledge","text":"<ul> <li>Basic Linux commands (see the cheatsheet)</li> <li>Basic knowledge of networking and Internet protocols</li> </ul>"},{"location":"#software","title":"Software","text":"<p>This training requires the following tools:</p> <ul> <li>An instance running Ubuntu OS (provided by WMO trainers during local training sessions) see Accessing your student VM</li> <li>SSH client to access your instance</li> <li>MQTT Explorer on your local machine</li> <li>SCP and FTP client to copy files from your local machine</li> </ul>"},{"location":"#conventions","title":"Conventions","text":"<p>Question</p> <p>A section marked like this invites you to answer a question.</p> <p>Also you will notice tips and notes sections within the text:</p> <p>Tip</p> <p>Tips share help on how to best achieve tasks.</p> <p>Note</p> <p>Notes provide additional information on the topic covered by the practical session, as well as how to best achieve tasks.</p> <p>Examples are indicated as follows:</p> <p>Configuration <pre><code>my-collection-defined-in-yaml:\n    type: collection\n    title: my title defined as a yaml attribute named title\n    description: my description as a yaml attribute named description\n</code></pre></p> <p>Snippets which need to be typed in a on a terminal/console are indicated as:</p> <pre><code>echo 'Hello world'\n</code></pre> <p>Container names (running images) are denoted in bold.</p>"},{"location":"#training-location-and-materials","title":"Training location and materials","text":"<p>The training contents, wiki and issue tracker are managed on GitHub at https://github.com/wmo-im/wis2box-training.</p>"},{"location":"#printing-the-material","title":"Printing the material","text":"<p>This training can be exported to PDF.  To save or print this training material, go to the print page, and select File &gt; Print &gt; Save as PDF.</p>"},{"location":"#exercise-materials","title":"Exercise materials","text":"<p>Exercise materials can be downloaded from the exercise-materials.zip zipfile.</p>"},{"location":"#support","title":"Support","text":"<p>For issues/bugs/suggestions or improvements/contributions to this training, please use the GitHub issue tracker.</p> <p>All wis2box bugs, enhancements and issues can be reported on GitHub.</p> <p>For additional support of questions, please contact wis2-support@wmo.int.</p> <p>As always, wis2box core documentation can always be found at https://docs.wis2box.wis.wmo.int.</p> <p>Contributions are always encouraged and welcome!</p>"},{"location":"cheatsheets/docker/","title":"Docker cheatsheet","text":""},{"location":"cheatsheets/docker/#overview","title":"Overview","text":"<p>Docker allows for creating virtual environments in an isolated manner in support of virtualization of computing resources.  The basic concept behind Docker is containerization, where software can run as services, interacting with other software containers, for example.</p> <p>The typical Docker workflow involves creating and building images, which are then run as live containers.</p> <p>Docker is used to run the suite of services that make up wis2box using pre-built images.</p>"},{"location":"cheatsheets/docker/#image-management","title":"Image management","text":"<ul> <li>List available images</li> </ul> <pre><code>docker image ls\n</code></pre> <ul> <li>Update an image:</li> </ul> <pre><code>docker pull my-image:latest\n</code></pre> <ul> <li>Removing an image:</li> </ul> <pre><code>docker rmi my-image:local\n</code></pre>"},{"location":"cheatsheets/docker/#volume-management","title":"Volume Management","text":"<ul> <li>List all created volumes:</li> </ul> <pre><code>docker volume ls\n</code></pre> <ul> <li>Display detailed information on a volume:</li> </ul> <pre><code>docker volume inspect my-volume\n</code></pre> <ul> <li>Remove a volume:</li> </ul> <pre><code>docker volume rm my-volume\n</code></pre> <ul> <li>Remove all unused volumes:</li> </ul> <pre><code>docker volume prune\n</code></pre>"},{"location":"cheatsheets/docker/#container-management","title":"Container Management","text":"<ul> <li>Display a list of currently running containers:</li> </ul> <pre><code>docker ps\n</code></pre> <ul> <li>List of all containers:</li> </ul> <pre><code>docker ps -a\n</code></pre> <ul> <li>Enter the interactive terminal of a running container:</li> </ul> <p>Tip</p> <p>use <code>docker ps</code> to use the container id in the command below</p> <pre><code>docker exec -it my-container /bin/bash\n</code></pre> <ul> <li>Remove a container</li> </ul> <pre><code>docker rm my-container\n</code></pre> <ul> <li>Remove a running container:</li> </ul> <pre><code>docker rm -f my-container\n</code></pre>"},{"location":"cheatsheets/linux/","title":"Linux cheatsheet","text":""},{"location":"cheatsheets/linux/#overview","title":"Overview","text":"<p>The basic concepts of working in a Linux operating system are files and directories (folders) organized in a tree structure within an environment.</p> <p>Once you login to a Linux system, you are working in a shell in which you can work on files and directories, by executing commands which are installed on the system.  The Bash shell is a common and popular shell which is typically found on Linux systems.</p>"},{"location":"cheatsheets/linux/#bash","title":"Bash","text":""},{"location":"cheatsheets/linux/#directory-navigation","title":"Directory Navigation","text":"<ul> <li>Entering an absolute directory:</li> </ul> <pre><code>cd /dir1/dir2\n</code></pre> <ul> <li>Entering a relative directory:</li> </ul> <pre><code>cd ./somedir\n</code></pre> <ul> <li>Move one directory up:</li> </ul> <pre><code>cd ..\n</code></pre> <ul> <li>Move two directories up:</li> </ul> <pre><code>cd ../..\n</code></pre> <ul> <li>Move to your \"home\" directory:</li> </ul> <pre><code>cd -\n</code></pre>"},{"location":"cheatsheets/linux/#file-management","title":"File Management","text":"<ul> <li>Listing files in the current directory:</li> </ul> <pre><code>ls\n</code></pre> <ul> <li>Listing files in the current directory with more detail:</li> </ul> <pre><code>ls -l\n</code></pre> <ul> <li>List the root of the filessystem:</li> </ul> <pre><code>ls -l /\n</code></pre> <ul> <li>Create an empty file:</li> </ul> <pre><code>touch foo.txt\n</code></pre> <ul> <li>Create a file from an <code>echo</code> command:</li> </ul> <pre><code>echo \"hi there\" &gt; test-file.txt\n</code></pre> <ul> <li>View the contents of a file:</li> </ul> <pre><code>cat test-file.txt\n</code></pre> <ul> <li>Copy a file:</li> </ul> <pre><code>cp file1 file2\n</code></pre> <ul> <li>Wildcards: operate on file patterns:</li> </ul> <pre><code>ls -l fil*  # matches file1 and file2\n</code></pre> <ul> <li>Concatenate two files into a new file called <code>newfile</code>:</li> </ul> <pre><code>cat file1 file2 &gt; newfile\n</code></pre> <ul> <li>Append another file into <code>newfile</code></li> </ul> <pre><code>cat file3 &gt;&gt; newfile\n</code></pre> <ul> <li>Delete a file:</li> </ul> <pre><code>rm newfile\n</code></pre> <ul> <li>Delete all files with the same file extension:</li> </ul> <pre><code>rm *.dat\n</code></pre> <ul> <li>Create a directory</li> </ul> <pre><code>mkdir dir1\n</code></pre>"},{"location":"cheatsheets/linux/#chaining-commands-together-with-pipes","title":"Chaining commands together with pipes","text":"<p>Pipes allow a user to send the output of one command to another using the pipe <code>|</code> symbol:</p> <pre><code>echo \"hi\" | sed 's/hi/bye/'\n</code></pre> <ul> <li>Filtering command outputs using grep:</li> </ul> <pre><code>echo \"id,title\" &gt; test-file.txt\necho \"1,birds\" &gt;&gt; test-file.txt\necho \"2,fish\" &gt;&gt; test-file.txt\necho \"3,cats\" &gt;&gt; test-file.txt\n\ncat test-file.txt | grep fish\n</code></pre> <ul> <li>Ignoring case:</li> </ul> <pre><code>grep -i FISH test-file.txt\n</code></pre> <ul> <li>Count matching lines:</li> </ul> <pre><code>grep -c fish test-file.txt\n</code></pre> <ul> <li>Return outputs not containing keyword:</li> </ul> <pre><code>grep -v birds test-file.txt\n</code></pre> <ul> <li>Count the number of lines in <code>test-file.txt</code>:</li> </ul> <pre><code>wc -l test-file.txt\n</code></pre> <ul> <li>Display output one screen at a time:</li> </ul> <pre><code>more test-file.txt\n</code></pre> <p>...with controls:</p> <ul> <li>Scroll down line by line: enter</li> <li>Go to next page: space bar</li> <li> <p>Go back one page: b</p> </li> <li> <p>Display the first 3 lines of the file:</p> </li> </ul> <pre><code>head -3 test-file.txt\n</code></pre> <ul> <li>Display the last 2 lines of the file:</li> </ul> <pre><code>tail -2 test-file.txt\n</code></pre>"},{"location":"cheatsheets/wis2box/","title":"WIS2 in a box cheatsheet","text":""},{"location":"cheatsheets/wis2box/#overview","title":"Overview","text":"<p>wis2box runs as a suite of Docker Compose commands.  The <code>wis2box-ctl.py</code> command is a utility (written in Python) to run Docker Compose commands easily.</p>"},{"location":"cheatsheets/wis2box/#wis2box-command-essentials","title":"wis2box command essentials","text":""},{"location":"cheatsheets/wis2box/#starting-and-stopping","title":"Starting and stopping","text":"<ul> <li>Start wis2box:</li> </ul> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <ul> <li>Stop wis2box:</li> </ul> <pre><code>python3 wis2box-ctl.py stop\n</code></pre> <ul> <li>Verify all wis2box containers are running:</li> </ul> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <ul> <li>Login to a wis2box container (wis2box-management by default):</li> </ul> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <ul> <li>Login to a specific wis2box container:</li> </ul> <pre><code>python3 wis2box-ctl.py login wis2box-api\n</code></pre>"},{"location":"csv2bufr-templates/aws-template/","title":"csv2bufr template for Automated Weather Stations reporting hourly GBON data","text":"<p>The AWS Template uses a standardized CSV format to ingest data from Automatic Weather Stations in support of GBON reporting requirements. This mapping template converts CSV data to BUFR sequence 301150, 307096.</p> <p>The format is intended for use with automatic weather stations reporting a minimum number of parameters, including pressure, air temperature and humidity, wind speed and direction and precipitation on an hourly basis.</p>"},{"location":"csv2bufr-templates/aws-template/#csv-columns-and-description","title":"CSV columns and description","text":"Column Units Data type Description wsi_series Integer WIGOS identifier series wsi_issuer Integer WIGOS issuer of identifier wsi_issue_number Integer WIGOS issue number wsi_local Character WIGOS local identifier wmo_block_number Integer WMO block number wmo_station_number Integer WMO station number station_type Integer Type of observing station, encoding using code table 0 02 001 (set to 0, automatic) year Integer Year (UTC), the time of observation (based on the actual time the barometer is read) month Integer Month (UTC), the time of observation (based on the actual time the barometer is read) day Integer Day (UTC), the time of observation (based on the actual time the barometer is read) hour Integer Hour (UTC), the time of observation (based on the actual time the barometer is read) minute Integer Minute (UTC), the time of observation (based on the actual time the barometer is read) latitude degrees Decimal Latitude of the station (to 5 decimal places) longitude degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl meters Decimal Height of the station ground above mean sea level (to 1 decimal place) barometer_height_above_msl meters Decimal Height of the barometer above mean sea level (to 1 decimal place), typically height of station ground plus the height of the sensor above local ground station_pressure Pa Decimal Pressure observed at the station level to the nearest 10 pascals msl_pressure Pa Decimal Pressure reduced to mean sea level to the nearest 10 pascals geopotential_height gpm Integer Geoptential height expressed in geopotential meters (gpm) to 0 decimal places thermometer_height meters Decimal Height of thermometer or temperature sensor above the local ground to 2 decimal places air_temperature Kelvin Decimal Instantaneous air temperature to 2 decimal places dewpoint_temperature Kelvin Decimal Instantaneous dewpoint temperature to 2 decimal places relative_humidity % Integer Instantaneous relative humidity to zero decimal places method_of_ground_state_measurement code table Integer Method of observing the state of the ground, encoded using code table 0 02 176 ground_state code table Integer State of the ground encoded using code table 0 20 062 method_of_snow_depth_measurement code table Integer Method of observing the snow depth encoded using code table 0 02 177 snow_depth meters Decimal Snow depth at time of observation to 2 decimal places precipitation_intensity kg m-2 h-1 Decimal Intensity of precipitation at time of observation to 5 decimal places anemometer_height meters Decimal Height of the anemometer above local ground  to 2 decimal place time_period_of_wind minutes Integer Defines the time period over which the wind speed and direction have been averaged. Set to -10 to indicate a measurement period over the preceeding 10 minutes. wind_direction degrees Integer Wind direction (at anemometer height) averaged from the caterisan components over the indicated time period, 0 decimal places wind_speed ms-1 Decimal Wind speed (at anemometer height) averaged from the cartesian components over the indicated time period, 1 decimal place maximum_wind_gust_direction_10_minutes degrees Integer Highest 3 second average over the preceeding 10 minutes, 0 decimal places maximum_wind_gust_speed_10_minutes ms-1 Decimal Highest 3 second average over the preceeding 10 minutes, 1 decimal place maximum_wind_gust_direction_1_hour degrees Integer Highest 3 second average over the preceeding hour, 0 decimal places maximum_wind_gust_speed_1_hour ms-1 Decimal Highest 3 second average over the preceeding hour, 1 decimal place maximum_wind_gust_direction_3_hours degrees Integer Highest 3 second average over the preceeding 3 hours, 0 decimal places maximum_wind_gust_speed_3_hours ms-1 Decimal Highest 3 second average over the preceeding 3 hours, 1 decimal place rain_sensor_height meters Decimal Height of the rain gauge above local ground to 2 decimal place total_precipitation_1_hour kg m-2 Decimal Total precipitation over the past hour, 1 decimal place total_precipitation_3_hours kg m-2 Decimal Total precipitation over the past 3 hours, 1 decimal place total_precipitation_6_hours kg m-2 Decimal Total precipitation over the past 6 hours, 1 decimal place total_precipitation_12_hours kg m-2 Decimal Total precipitation over the past 12 hours, 1 decimal place total_precipitation_24_hours kg m-2 Decimal Total precipitation over the past 24 hours, 1 decimal place"},{"location":"csv2bufr-templates/aws-template/#example","title":"Example","text":"<p>Example CSV file that conforms to the AWS template: aws-example.csv.</p>"},{"location":"csv2bufr-templates/daycli-template/","title":"csv2bufr template for daily climate data (DAYCLI)","text":"<p>The DAYCLI template provides a standardized CSV format for converting daily climate data to BUFR sequence 307075.</p> <p>The format is intended for use with Climate Data Management Systems to publish data on WIS2, in support of reporting requirements for daily climate observations.</p> <p>This templates maps daily observations of:</p> <ul> <li>Minimum, maximum and average temperature over 24 hours period</li> <li>Total accumulated precipitation over 24 hours period</li> <li>Total snow depth at time of observation</li> <li>Depth of fresh snow over 24 hours period</li> </ul> <p>This template requires additional metadata with respect to the simplified AWS-template: method of calculating average temperature; sensor and station heights; exposure and measurement quality classification.</p> <p>About the DAYCLI template</p> <p>Please note that the DAYCLI BUFR sequence will be updated during 2025 to include additional information and revised QC flags. The DAYCLI template included the wis2box will be updated to reflect these changes. WMO will communicate when the wis2box-software is updated to include the new DAYCLI template, to allow users to update their systems accordingly.</p>"},{"location":"csv2bufr-templates/daycli-template/#csv-columns-and-description","title":"CSV columns and description","text":"Column Units Data Type Description wsi_series Integer WIGOS Identifier series, set to 0 for stations wsi_issuer Integer WIGOS Identifier issue, ISO 3 digit (number) country code or 20000 series wsi_issue_number Integer WIGOS Identifier issue number wsi_local Character WIGOS Identifier local identifier, alphanumeric, max 16 characters wmo_block_number Integer WMO block number for station 0 - 99 wmo_station_number Integer WMO station number 0 - 999 latitude Degrees Decimal Latitude of the station (to 5 decimal places) longitude Degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl Meters Decimal Height of the station ground above mean sea level (to 1 decimal place) temperature_siting_classification Integer Combined sensor siting and measurement quality classification (temperature). See references for siting classification precipitation_siting_classification Integer Combined sensor siting and measurement quality classification (precipitation). See references for siting classification averaging_method Integer Method used to calculate daily average temperature year Integer Year (UTC) of nominal reporting day month Integer Month (UTC) of nominal reporting day day Integer Day (UTC) of month for nominal reporting day precipitation_day_offset Integer Start of reporting period for precipitation, offset in days relative to nominal reporting day (-1 or 0) precipitation_hour Integer Beginning hour (UTC) over which the precipitation is measured precipitation_minute Integer Beginning minute (UTC) over which the precipitation is measured precipitation_second Integer Beginning second (UTC) over which the precipitation is measured precipitation kg m-2 Decimal Total accumulated precipitation over indicated 24 hour period (kg m-3, equivalent to mm) precipitation_flag Integer Quality control flag for total accumulated precipitation fresh_snow_day_offset Integer Start of reporting period for fresh snow depth, offset in days relative to nominal reporting day (-1 or 0) fresh_snow_hour Integer Beginning hour (UTC) over which the fresh snow depth is measured fresh_snow_minute Integer Beginning minute (UTC) over which the fresh snow depth is measured fresh_snow_second Integer Beginning second (UTC) over which the fresh snow depth is measured fresh_snow_depth Meters Decimal Fresh snow depth over indicated 24 hour period (m, 2 d.p.) fresh_snow_depth_flag Integer Quality control flag for the fresh snow depth total_snow_day_offset Integer Start of reporting period for total snow depth, offset in days relative to nominal reporting day (-1 or 0) total_snow_hour Integer Beginning hour (UTC) over which the total snow depth is measured total_snow_minute Integer Beginning minute (UTC) over which the total snow depth is measured total_snow_second Integer Beginning second (UTC) over which the total snow depth is measured total_snow_depth Meters Decimal Total snow depth over indicated 24 hour period (m, 2 d.p.) total_snow_depth_flag Integer Quality control flag for the total snow depth thermometer_height Meters Decimal Height of thermometer above local ground level (m) maximum_temperature_day_offset Integer Start of reporting period for maximum temperature, offset in days relative to nominal reporting day (-1 or 0) maximum_temperature_hour Integer Beginning hour (UTC) over which the maximum temmperature is measured maximum_temperature_minute Integer Beginning minute (UTC) over which the maximum temperature is measured maximum_temperature_second Integer Beginning second (UTC) over which the maximum temperature is measured maximum_temperature Kelvin Decimal Maximum temperature over indicated 24 hour period (K, 2 d.p.) maximum_temperature_flag Integer Quality control flag for the maximum temperature minimum_temperature_day_offset Integer Start of reporting period for minimum temperature, offset in days relative to nominal reporting day (-1 or 0) minimum_temperature_hour Integer Beginning hour (UTC) over which the minimum temmperature is measured minimum_temperature_minute Integer Beginning minute (UTC) over which the minimum temperature is measured minimum_temperature_second Integer Beginning second (UTC) over which the minimum temperature is measured minimum_temperature Kelvin Decimal Minimum temperature over indicated 24 hour period (K, 2 d.p.) minimum_temperature_flag Integer Quality control flag for the minimum temperature average_temperature_day_offset Integer Start of reporting period for average temperature, offset in days relative to nominal reporting day (-1 or 0) average_temperature_hour Integer Beginning hour (UTC) over which the average temmperature is measured average_temperature_minute Integer Beginning minute (UTC) over which the average temperature is measured average_temperature_second Integer Beginning second (UTC) over which the average temperature is measured average_temperature Kelvin Decimal Average temperature over indicated 24 hour period (K, 2 d.p.) average_temperature_flag Integer Quality control flag for the average temperature"},{"location":"csv2bufr-templates/daycli-template/#averaging-method","title":"Averaging method","text":"Integer Description 0 Average of minimum and maximum temperatures 1 Average of 8 tri-hourly observations 2 Average of 24 hourly observations 3 Weighted average of three observations 4 Weighted average of three observations, as well as the minimum and maximum values 5 AWS complete integration from minute data 6 Average of 4 six-hourly observations"},{"location":"csv2bufr-templates/daycli-template/#quality-flag","title":"Quality flag","text":"Integer Description 0 Data checked and declared good 1 Data checked and declared suspect 2 Data checked and declared aggregated 3 Data checked and declared out of instrument range 4 Data checked and declared aggregated and out of instrument range 5 Parameter is not measured at the station 6 Daily value not provided 7 Data unchecked"},{"location":"csv2bufr-templates/daycli-template/#references-for-siting-classification","title":"References for siting classification","text":"<p>Reference for \"temperature_siting_classification\".</p> <p>Reference for \"precipitation_siting_classification\".</p>"},{"location":"csv2bufr-templates/daycli-template/#example","title":"Example","text":"<p>Example CSV file that conforms to the DAYCLI template: daycli-example.csv.</p>"},{"location":"practical-sessions/accessing-your-student-vm/","title":"Accessing your student VM","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>access your student VM over SSH and WinSCP</li> <li>verify the required software for the practical exercises is installed</li> <li>verify you have access to exercise materials for this training on your local student VM</li> </ul>"},{"location":"practical-sessions/accessing-your-student-vm/#introduction","title":"Introduction","text":"<p>As part of locally run wis2box training sessions, you can access your personal student VM on the local training network named \"WIS2-training\".</p> <p>Your student VM has the following software pre-installed:</p> <ul> <li>Ubuntu 22.0.4.3 LTS ubuntu-22.04.3-live-server-amd64.iso</li> <li>Python 3.10.12</li> <li>Docker 24.0.6</li> <li>Docker Compose 2.21.0</li> <li>Text editors: vim, nano</li> </ul> <p>Note</p> <p>If you want to run this training outside of a local training session, you can provide your own instance using any cloud provider, for example:</p> <ul> <li>GCP (Google Cloud Platform) VM instance <code>e2-medium</code></li> <li>AWS (Amazon Web Services)\u00a0 ec2-instance <code>t3a.medium</code> </li> <li>Azure (Microsoft) Azure Virtual Machine <code>standard_b2s</code></li> </ul> <p>Select Ubuntu Server 22.0.4 LTS as OS.</p> <p>After creating your VM ensure you have installed python, docker and docker compose, as described at wis2box-software-dependencies.</p> <p>The release archive for wis2box used in this training can be downloaded as follows:</p> <pre><code>wget https://github.com/wmo-im/wis2box/releases/download/1.0.0rc1/wis2box-setup-1.0.0rc1.zip\nunzip wis2box-setup-1.0.0rc1.zip\n</code></pre> <p>You can always find the latest 'wis2box-setup' archive at https://github.com/wmo-im/wis2box/releases.</p> <p>The exercise material used in this training can be downloaded as follows:</p> <pre><code>wget https://training.wis2box.wis.wmo.int/exercise-materials.zip\nunzip exercise-materials.zip\n</code></pre> <p>The following additional Python packages are required to run the exercise materials:</p> <pre><code>pip3 install minio\n</code></pre> <p>If you are using the student VM provided during local WIS2 training sessions, the required software will already be installed.</p>"},{"location":"practical-sessions/accessing-your-student-vm/#connect-to-your-student-vm-on-the-local-training-network","title":"Connect to your student VM on the local training network","text":"<p>Connect your PC on the local Wi-Fi broadcasted in the room during WIS2 training as per the instructions provided by the trainer.</p> <p>Use an SSH client to connect to your student VM using the following:</p> <ul> <li>Host: (provided during in-person training)</li> <li>Port: 22</li> <li>Username: (provided during in-person training)</li> <li>Password: (provided during in-person training)</li> </ul> <p>Tip</p> <p>Contact a trainer if you are unsure about the hostname/username or have issues connecting.</p> <p>Once connected, please change your password to ensure others cannot access your VM:</p> <pre><code>limper@student-vm:~$ passwd\nChanging password for testuser.\nCurrent password:\nNew password:\nRetype new password:\npasswd: password updated successfully\n</code></pre>"},{"location":"practical-sessions/accessing-your-student-vm/#verify-software-versions","title":"Verify software versions","text":"<p>To be able to run wis2box, the student VM should have Python, Docker and Docker Compose pre-installed. </p> <p>Check Python version: <pre><code>python3 --version\n</code></pre> returns: <pre><code>Python 3.10.12\n</code></pre></p> <p>Check docker version: <pre><code>docker --version\n</code></pre> returns: <pre><code>Docker version 24.0.6, build ed223bc\n</code></pre></p> <p>Check Docker Compose version: <pre><code>docker compose version\n</code></pre> returns: <pre><code>Docker Compose version v2.21.0\n</code></pre></p> <p>To ensure your user can run Docker commands your user has been added to the <code>docker</code> group. </p> <p>To test that your user can run docker hello-world, run the following command: <pre><code>docker run hello-world\n</code></pre></p> <p>This should pull the hello-world image and run a container that prints a message. </p> <p>Check that you see the following in the output:</p> <pre><code>...\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n...\n</code></pre>"},{"location":"practical-sessions/accessing-your-student-vm/#inspect-the-exercise-materials","title":"Inspect the exercise materials","text":"<p>Inspect the contents of your home directory; these are the materials used as part of the training and practical sessions.</p> <p><pre><code>ls ~/\n</code></pre> returns: <pre><code>exercise-materials  wis2box-1.0.0rc1\n</code></pre></p> <p>If you have WinSCP installed on your local PC, you can use it to connect to your student VM and inspect the contents of your home directory and download or upload files between your VM and your local PC. </p> <p>WinSCP is not required for the training, but it can be useful if you want to edit files on your VM using a text editor on your local PC.</p> <p>Here is how you can connect to your student VM using WinSCP:</p> <p>Open WinSCP and click on the \"New Site\". You can create a new SCP connection to your VM as follows:</p> <p></p> <p>Click 'Save' and then 'Login' to connect to your VM.</p> <p>And you should be able to see the following content:</p> <p></p>"},{"location":"practical-sessions/accessing-your-student-vm/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>access your student VM over SSH and WinSCP</li> <li>verify the required software for the practical exercises is installed</li> <li>verify you have access to exercise materials for this training on your local student VM</li> </ul>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/","title":"Adding GTS headers to WIS2 notifications","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>configure a mapping between filename and GTS headers</li> <li>ingest data with a filename that matches the GTS headers</li> <li>view the GTS headers in the WIS2 notifications</li> </ul>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#introduction","title":"Introduction","text":"<p>WMO Members wishing to stop their data transmission on GTS during the transition phase to WIS2 will need to add GTS headers to their WIS2 notifications. These headers enable the WIS2 to GTS gateway to forward the data to the GTS network.</p> <p>This allows Members having migrated to using a WIS2 node for data publication to disable their MSS system and ensure that their data is still available to Members not yet migrated to WIS2.</p> <p>The GTS property in the WIS2 Notification Message needs to be added as an additional property to the WIS2 Notification Message. The GTS property is a JSON object that contains the GTS headers that are required for the data to be forwarded to the GTS network.</p> <pre><code>{\n  \"gts\": {\n    \"ttaaii\": \"FTAE31\",\n    \"cccc\": \"VTBB\"\n  }\n}\n</code></pre> <p>Within wis2box you can add this to WIS2 Notifications automatically by providing an additional file named <code>gts_headers_mapping.csv</code> that contains the required information to map the GTS headers to the incoming filenames.</p> <p>This file should be placed in the directory defined by <code>WIS2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code> and should have the following columns:</p> <ul> <li><code>string_in_filepath</code>: a string that is part of the filename that will be used to match the GTS headers</li> <li><code>TTAAii</code>: the TTAAii header to be added to the WIS2 notification</li> <li><code>CCCC</code>: the CCCC header to be added to the WIS2 notification</li> </ul>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#preparation","title":"Preparation","text":"<p>Ensure you have SSH access to your student VM and that your wis2box instance is up and running.</p> <p>Make sure that you are connected to the MQTT broker of your wis2box instance using MQTT Explorer. You can use the public credentials <code>everyone/everyone</code> to connect to the broker.</p> <p>Make sure you have a web browser open with the Grafana dashboard for your instance by going to <code>http://&lt;your-host&gt;:3000</code></p>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#creating-gts_headers_mappingcsv","title":"creating <code>gts_headers_mapping.csv</code>","text":"<p>To add GTS headers to your WIS2 notifications, a CSV file is required that maps GTS headers to incoming filenames.</p> <p>The CSV file should be named (exactly) <code>gts_headers_mapping.csv</code> and should be placed in the directory defined by <code>WIS2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code>. </p>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#exercise-1-providing-a-gts_headers_mappingcsv-file","title":"Exercise 1: providing a <code>gts_headers_mapping.csv</code> file","text":"<p>Copy the file <code>exercise-materials/gts-headers-exercises/gts_headers_mapping.csv</code> to your wis2box instance and place it in the directory defined by <code>WIS2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code>.</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/gts_headers_mapping.csv ~/wis2box-data\n</code></pre> <p>Then restart the wis2box-management container to apply the changes:</p> <pre><code>docker restart wis2box-management\n</code></pre>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#exercise-2-ingesting-data-with-gts-headers","title":"Exercise 2: Ingesting data with GTS headers","text":"<p>Copy the file <code>exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> to the directory defined by <code>WIS2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code>:</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt ~/wis2box-data\n</code></pre> <p>Then login to the wis2box-management container:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>From the wis2box command line we can ingest the sample data file <code>A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> into a specific dataset as follows:</p> <pre><code>wis2box data ingest -p /data/wis2box/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>Make sure to replace the <code>metadata-id</code> option with the correct identifier for your dataset.</p> <p>Check the Grafana dashboard to see if the data was ingested correctly. If you see any WARNINGS or ERRORS, try to fix them and repeat the exercise the <code>wis2box data ingest</code> command.</p>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#exercise-3-viewing-the-gts-headers-in-the-wis2-notification","title":"Exercise 3: Viewing the GTS headers in the WIS2 Notification","text":"<p>Go to the MQTT Explorer and check for the WIS2 Notification Message for the data you just ingested.</p> <p>The WIS2 Notification Message should contain the GTS headers you provided in the <code>gts_headers_mapping.csv</code> file.</p>"},{"location":"practical-sessions/adding-gts-headers-to-wis2-notifications/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:   - add GTS headers to your WIS2 notifications   - verify GTS headers are made available via your wis2box installation</p>"},{"location":"practical-sessions/automating-data-ingestion/","title":"Automating data ingestion","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>understand how the data plugins of your dataset determine the data ingest workflow</li> <li>ingest data into wis2box using a script using the MinIO Python client</li> <li>ingest data into wis2box by accessing MinIO over SFTP</li> </ul>"},{"location":"practical-sessions/automating-data-ingestion/#introduction","title":"Introduction","text":"<p>The wis2box-management container listens to events from the MinIO storage service to trigger data ingestion based on the data-plugins configured for your dataset. This allows you to upload data into the MinIO bucket and trigger the wis2box workflow to publish data on the WIS2 broker. </p> <p>The data-plugins define the Python modules that are loaded by the wis2box-management container and determine how the data is transformed and published.</p> <p>In the previous exercise you should have created a dataset using the template <code>surface-based-observations/synop</code> which included the following data-plugins:</p> <p></p> <p>When a file is uploaded to MinIO, wis2box will match the file to a dataset when the filepath contains the dataset id (<code>metadata_id</code>) and it will determine the data plugins to use based on the file extension and file pattern defined in the dataset mappings.</p> <p>In the previous sessions, we triggered the data ingest workflow by using the wis2box command line functionality, which uploads data to the MinIO storage in the correct path.</p> <p>The same steps can be done programmatically by using any MinIO or S3 client software, allowing you to automate your data ingestion as part of your operational workflows. </p> <p>Alternatively, you can also access MinIO using the SFTP protocol to upload data and trigger the data ingest workflow.</p>"},{"location":"practical-sessions/automating-data-ingestion/#preparation","title":"Preparation","text":"<p>Login to you student VM using your SSH client (PuTTY or other).</p> <p>Make sure wis2box is up and running:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Make sure MQTT Explorer is running and connected to your instance. If you are still connected from the previous session, clear any previous messages you may have received from the queue. This can be done by either by disconnecting and reconnecting or by clicking the trash can icon for the given topic.</p> <p>Make sure you have a web browser open with the Grafana dashboard for your instance by going to <code>http://&lt;your-host&gt;:3000</code></p> <p>And make sure you have a second tab open with the MinIO user interface at <code>http://&lt;your-host&gt;:9001</code>. Remember you need to login with the <code>WIS2BOX_STORAGE_USER</code> and <code>WIS2BOX_STORAGE_PASSWORD</code> defined in your <code>wis2box.env</code> file.</p>"},{"location":"practical-sessions/automating-data-ingestion/#exercise-1-setup-a-python-script-to-ingest-data-into-minio","title":"Exercise 1: setup a Python script to ingest data into MinIO","text":"<p>In this exercise we will use the MinIO Python client to copy data into MinIO.</p> <p>MinIO provides a Python client which can be installed as follows:</p> <pre><code>pip3 install minio\n</code></pre> <p>On your student VM the 'minio' package for Python will already be installed.</p> <p>Go to the directory <code>exercise-materials/data-ingest-exercises</code>; this directory contains a sample script <code>copy_file_to_incoming.py</code> that uses the MinIO Python client to copy a file into MinIO.</p> <p>Try to run the script to copy the sample data file <code>csv-aws-example.csv</code> into the <code>wis2box-incoming</code> bucket in MinIO\" as follows:</p> <pre><code>cd ~/exercise-materials/data-ingest-exercises\npython3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>Note</p> <p>You will get an error as the script is not configured to access the MinIO endpoint on your wis2box yet.</p> <p>The script needs to know the correct endpoint for accessing MinIO on your wis2box. If wis2box is running on your host, the MinIO endpoint is available at <code>http://&lt;your-host&gt;:9000</code>. The script also needs to be updated with your storage password and the path in the MinIO bucket to store the data.</p> <p>Update the script and ingest the CSV data</p> <p>Edit the script <code>copy_file_to_incoming.py</code> to address the errors, using one of the following methods: - From the command line: use the <code>nano</code> or <code>vim</code> text editor to edit the script - Using WinSCP: start a new connection using File Protocol <code>SCP</code> and the same credentials as your SSH client. Navigate to the directory <code>exercise-materials/data-ingest-exercises</code> and edit <code>copy_file_to_incoming.py</code> using the built-in text editor</p> <p>Ensure that you:</p> <ul> <li>define the correct MinIO endpoint for your host</li> <li>provide the correct storage password for your MinIO instance</li> <li>provide the correct path in the MinIO bucket to store the data</li> </ul> <p>Re-run the script to ingest the sample data file <code>csv-aws-example.csv</code> into MinIO:</p> <pre><code>python3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>And make sure the errors are resolved.</p> <p>You can verify that the data was uploaded correctly by checking the MinIO user interface and seeing if the sample data is available in the correct directory in the <code>wis2box-incoming</code> bucket.</p> <p>You can use the Grafana dashboard to check the status of the data ingest workflow.</p> <p>Finally you can use MQTT Explorer to check if notifications were published for the data you ingested. You should see that the CSV data was transformed into BUFR format and that a WIS2 data notification was published with a \"canonical\" url to enable downloading the BUFR data.</p>"},{"location":"practical-sessions/automating-data-ingestion/#exercise-2-ingesting-binary-data","title":"Exercise 2: Ingesting binary data","text":"<p>Next, we try to ingest binary data in BUFR format using the MinIO Python client.</p> <p>wis2box can ingest binary data in BUFR format using the <code>wis2box.data.bufr4.ObservationDataBUFR</code> plugin included in wis2box.</p> <p>This plugin will split the BUFR file into individual BUFR messages and publish each message to the MQTT broker. If the station for the corresponding BUFR message is not defined in the wis2box station metadata, the message will not be published.</p> <p>Since you used the <code>surface-based-observations/synop</code> template in the previous session you data mappings include the plugin <code>FM-12 data converted to BUFR</code> for the dataset mappings. This plugin loads the module <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code> to ingest the data.</p> <p>Ingesting binary data in BUFR format</p> <p>Run the following command to copy the binary data file <code>bufr-example.bin</code> into the <code>wis2box-incoming</code> bucket in MinIO:</p> <pre><code>python3 copy_file_to_incoming.py bufr-example.bin\n</code></pre> <p>Check the Grafana dashboard and MQTT Explorer to see if the test-data was successfully ingested and published and if you see any errors, try to resolve them.</p> <p>Verify the data ingest</p> <p>How many messages were published to the MQTT broker for this data sample?</p> Click to reveal answer <p>If you successfully ingested and published the last data sample, you should have received 10 new notifications on the wis2box MQTT broker. Each notification correspond to data for one station for one observation timestamp.</p> <p>The plugin <code>wis2box.data.bufr4.ObservationDataBUFR</code> splits the BUFR file into individual BUFR messages and publishes one message for each station and observation timestamp.</p>"},{"location":"practical-sessions/automating-data-ingestion/#exercise-3-ingesting-synop-data-in-ascii-format","title":"Exercise 3: Ingesting SYNOP data in ASCII format","text":"<p>In the previous session we used the SYNOP form in the wis2box-webapp to ingest SYNOP data in ASCII format. You can also ingest SYNOP data in ASCII format by uploading the data into MinIO. </p> <p>In the previous session you should have created a dataset which included the plugin 'FM-12 data converted to BUFR' for the dataset mappings:</p> <p></p> <p>This plugin loads the module <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code> to ingest the data.</p> <p>Try to use the MinIO Python client to ingest the test data <code>synop-202307.txt</code> and <code>synop-202308.txt</code> into your wis2box instance.</p> <p>Note that the 2 files contain the same content, but the filename is different. The filename is used to determine the date of the data sample.</p> <p>The synop2bufr plugin relies on a file-pattern to extract the date from the filename. The first group in the regular expression is used to extract the year and the second group is used to extract the month.</p> <p>Ingest FM-12 SYNOP data in ASCII format</p> <p>Go back to the MinIO interface in your browse and navigate to the <code>wis2box-incoming</code> bucket and into the path where you uploaded the test data in the previous exercise.</p> <p>Upload the new files in the correct path in the <code>wis2box-incoming</code> bucket in MinIO to trigger the data ingest workflow.</p> <p>Check the Grafana dashboard and MQTT Explorer to see if the test data was successfully ingested and published.</p> <p>What is the difference in the <code>properties.datetime</code> between the two messages published to the MQTT broker?</p> Click to reveal answer <p>Check the properties of the last 2 notifications in MQTT Explorer and you will note that one notification has:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230703T090000\",\n    \"datetime\": \"2023-07-03T09:00:00Z\",\n    ...\n</code></pre> <p>and the other notification has:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230803T090000\",\n    \"datetime\": \"2023-08-03T09:00:00Z\",\n    ...\n</code></pre> <p>The filename was used to determine the year and month of the data sample.</p>"},{"location":"practical-sessions/automating-data-ingestion/#exercise-4-ingesting-data-into-minio-using-sftp","title":"Exercise 4: Ingesting data into MinIO using SFTP","text":"<p>Data can also be ingested into MinIO over SFTP.</p> <p>The MinIO service enabled in the wis2box-stack has SFTP enabled on port 8022. You can access MinIO over SFTP using the same credentials as for the MinIO user interface. In this exercise we will the admin credentials for the MinIO service as defined in <code>wis2box.env</code>, but you can also create additional users in the MinIO user interface.</p> <p>To access MinIO over SFTP you can use any SFTP client software. In this exercise we will use WinSCP, which is a free SFTP client for Windows.</p> <p>Using WinSCP, your connection would look as follows:</p> <p></p> <p>For username and password, use the values of <code>WIS2BOX_STORAGE_USERNAME</code> and <code>WIS2BOX_STORAGE_PASSWORD</code> environment variables from your <code>wis2box.env</code> file. Click 'save' to save the session and then 'login' to connect.</p> <p>When you login you will see the MinIO bucket <code>wis2box-incoming</code> and <code>wis2box-public</code> in the root directory. You can upload data to the <code>wis2box-incoming</code> bucket to trigger the data ingest workflow.</p> <p>Click on the <code>wis2box-incoming</code> bucket to navigate into this bucket, then right-click and select New-&gt;Directory to create a new directory in the <code>wis2box-incoming</code> bucket. </p> <p>Create the directory not-a-valid-path and upload the file randomfile.txt into this directory (you can use any file you like).</p> <p>The check the Grafana dashboard at port 3000 to see if the data ingest workflow was triggered. You should see:</p> <p>ERROR - Path validation error: Could not match http://minio:9000/wis2box-incoming/not-a-valid-path/randomfile.txt to dataset, path should include one of the following: ...</p> <p>The error indicates that the file was uploaded to MinIO and the data ingest workflow was triggered, but since the path does not match any dataset in the wis2box instance the data mapping failed.</p> <p>You can also use <code>sftp</code> from the command line:</p> <p><pre><code>sftp -P 8022 -oBatchMode=no -o StrictHostKeyChecking=no &lt;my-hostname-or-ip&gt;\n</code></pre> Login using the credentials defined in <code>wis2box.env</code> for the <code>WIS2BOX_STORAGE_USERNAME</code> and <code>WIS2BOX_STORAGE_PASSWORD</code> environment variables, navigate to the <code>wis2box-incoming</code> bucket and then create a directory and upload a file as follows:</p> <pre><code>cd wis2box-incoming\nmkdir not-a-valid-path\ncd not-a-valid-path\nput ~/exercise-materials/data-ingest-exercises/synop.txt .\n</code></pre> <p>This will result in a \"Path validation error\" in the Grafana dashboard indicating that the file was uploaded to MinIO.</p> <p>To exit the sftp client, type <code>exit</code>. </p> <p>Ingest data into MinIO using SFTP</p> <p>Try to ingest the file <code>synop.txt</code> into your wis2box instance using SFTP to trigger the data ingest workflow.</p> <p>Check the MinIO user interface to see if the file was uploaded to the correct path in the <code>wis2box-incoming</code> bucket.</p> <p>Check the Grafana dashboard to see if the data ingest workflow was triggered or if there were any errors.</p> <p>To ensure your data is ingested correctly, make sure the file is uploaded in the <code>wis2box-incoming</code> bucket in a directory that matches the dataset-id or topic of your dataset.</p>"},{"location":"practical-sessions/automating-data-ingestion/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>trigger wis2box workflow using a Python script and the MinIO Python client</li> <li>use different data plugins to ingest different data formats</li> <li>upload data to MinIO using SFTP</li> </ul>"},{"location":"practical-sessions/bufr-command-line-tools/","title":"Working with BUFR data","text":"<p>Learning outcomes</p> <p>In this practical session you will be introduced to some of the BUFR tools included in the wis2box-api container that are used to transform data to BUFR format and to read the content encoded in BUFR.</p> <p>You will learn:</p> <ul> <li>how to inspect the headers in the BUFR file using the <code>bufr_ls</code> command</li> <li>how to extract and inspect the data within a bufr file using <code>bufr_dump</code></li> <li>the basic structure of the bufr templates used in csv2bufr and how to use the command line tool</li> <li>and how to make basic changes to the bufr templates and how to update the wis2box to use the revised   version</li> </ul>"},{"location":"practical-sessions/bufr-command-line-tools/#introduction","title":"Introduction","text":"<p>The plugins that produces notifications with BUFR data use processes in the wis2box-api to work with BUFR data, for example to transform the data from CSV to BUFR or from BUFR to geojson.</p> <p>The wis2box-api container includes a number of tools to work with BUFR data.</p> <p>These include the tools developed by ECMWF and included in the ecCodes software, more information on these can be  found on the ecCodes website. </p> <p>In this session you will be introduced to the <code>bufr_ls</code> and <code>bufr_dump</code> from the ecCodes software package and advanced configuration of the csv2bufr tool.</p>"},{"location":"practical-sessions/bufr-command-line-tools/#preparation","title":"Preparation","text":"<p>In order to use the BUFR command line tools you will need to be logged in to the wis2box-api container and unless specified otherwise all commands should be run on this container. You will also need to have MQTT Explorer open and connected to your broker.</p> <p>First connect to your student VM via your ssh client and then log in the to wis2box-api container: </p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login wis2box-api\n</code></pre> <p>Confirm the that tools are available, starting with ecCodes:</p> <p><pre><code>bufr_dump -V\n</code></pre> You should get the following response:</p> <pre><code>ecCodes Version 2.28.0\n</code></pre> <p>Next check csv2bufr:</p> <pre><code>csv2bufr --version\n</code></pre> <p>You should get the following response:</p> <pre><code>csv2bufr, version 0.7.4\n</code></pre> <p>Finally, create a working directory to work in:</p> <pre><code>cd /data/wis2box\nmkdir -p working/bufr-cli\ncd working/bufr-cli\n</code></pre> <p>You are now ready to start using the BUFR tools.</p>"},{"location":"practical-sessions/bufr-command-line-tools/#using-the-bufr-command-line-tools","title":"Using the BUFR command line tools","text":""},{"location":"practical-sessions/bufr-command-line-tools/#exercise-1-bufr_ls","title":"Exercise 1 - bufr_ls","text":"<p>In this first exercise you will use the <code>bufr_ls</code> command to inspect the headers of a BUFR file and to determine the  contents of the file. The following headers are included in a BUFR file:</p> header ecCodes key description originating/generating centre centre The originating / generating centre for the data originating/generating sub-centre bufrHeaderSubCentre The originating / generating sub centre for the data Update sequence number updateSequenceNumber Whether this is the first version of the data (0) or an update (&gt;0) Data category dataCategory The type of data contained in the BUFR message, e.g. suface data. See BUFR Table A International data sub-category internationalDataSubCategory The sub-type of data contained in the BUFR message, e.g. suface data. See Common Code Table C-13 Year typicalYear (typicalDate) Most typical time for the BUFR message contents Month typicalMonth (typicalDate) Most typical time for the BUFR message contents Day typicalDay (typicalDate) Most typical time for the BUFR message contents Hour typicalHour (typicalTime) Most typical time for the BUFR message contents Minute typicalMinute (typicalTime) Most typical time for the BUFR message contents BUFR descriptors unexpandedDescriptors List of one, or more, BUFR descriptors defining the data contained in the file <p>Download the example file directly into the wis2box-management container using the following command:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex1.bufr4 --output bufr-cli-ex1.bufr4\n</code></pre> <p>Now use the following command to run <code>bufr_ls</code> on this file:</p> <pre><code>bufr_ls bufr-cli-ex1.bufr4\n</code></pre> <p>You should see the following output:</p> <pre><code>bufr-cli-ex1.bufr4\ncentre                     masterTablesVersionNumber  localTablesVersionNumber   typicalDate                typicalTime                numberOfSubsets\ncnmc                       29                         0                          20231002                   000000                     1\n1 of 1 messages in bufr-cli-ex1.bufr4\n\n1 of 1 total messages in 1 files\n</code></pre> <p>On its own this information is not very informative, with only limited information on the file contents provided. </p> <p>The default output does not provide information on the observation, or data, type and is in a format that is not very easy to read. However, various options can be passed to <code>bufr_ls</code> to change both the format and header fields  printed.  </p> <p>Use <code>bufr_ls</code> without any arguments to view the options:</p> <pre><code>bufr_ls\n</code></pre> <p>You should see the following output:</p> <pre><code>NAME    bufr_ls\n\nDESCRIPTION\n        List content of BUFR files printing values of some header keys.\n        Only scalar keys can be printed.\n        It does not fail when a key is not found.\n\nUSAGE\n        bufr_ls [options] bufr_file bufr_file ...\n\nOPTIONS\n        -p key[:{s|d|i}],key[:{s|d|i}],...\n                Declaration of keys to print.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be requested. Default type is string.\n        -F format\n                C style format for floating-point values.\n        -P key[:{s|d|i}],key[:{s|d|i}],...\n                As -p adding the declared keys to the default list.\n        -w key[:{s|d|i}]{=|!=}value,key[:{s|d|i}]{=|!=}value,...\n                Where clause.\n                Messages are processed only if they match all the key/value constraints.\n                A valid constraint is of type key=value or key!=value.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be specified. Default type is string.\n                In the value you can also use the forward-slash character '/' to specify an OR condition (i.e. a logical disjunction)\n                Note: only one -w clause is allowed.\n        -j      JSON output\n        -s key[:{s|d|i}]=value,key[:{s|d|i}]=value,...\n                Key/values to set.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be defined. By default the native type is set.\n        -n namespace\n                All the keys belonging to the given namespace are printed.\n        -m      Mars keys are printed.\n        -V      Version.\n        -W width\n                Minimum width of each column in output. Default is 10.\n        -g      Copy GTS header.\n        -7      Does not fail when the message has wrong length\n\nSEE ALSO\n        Full documentation and examples at:\n        &lt;https://confluence.ecmwf.int/display/ECC/bufr_ls&gt;\n</code></pre> <p>Now run the same command on the example file but output the information in JSON.</p> <p>Question</p> <p>What flag do you pass to the <code>bufr_ls</code> command to view the output in JSON format?</p> Click to reveal answer <p>You can change the output format to json using the <code>-j</code> flag, i.e. <code>bufr_ls -j &lt;input-file&gt;</code>. This can be more readable than the default output format. See the example output below:</p> <pre><code>{ \"messages\" : [\n  {\n    \"centre\": \"cnmc\",\n    \"masterTablesVersionNumber\": 29,\n    \"localTablesVersionNumber\": 0,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\",\n    \"numberOfSubsets\": 1\n  }\n]}\n</code></pre> <p>When examining a BUFR file we often want to determine the type of data contained in the file and the typical date / time of the data in the file. This information can be listed using the <code>-p</code> flag to select the headers to output. Multiple headers can be included using a comma separated list. </p> <p>Using the <code>bufr_ls</code> command inspect the test file and identify the type of data contained in the file and the typical date and time for that data.</p> Hint <p>The ecCodes keys are given in the table above. We can use the following to list the dataCategory and internationalDataSubCategory of the BUFR data:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory bufr-cli-ex1.bufr4\n</code></pre> <p>Additional keys can be added as required.</p> <p>Question</p> <p>What type of data (date category and sub category) are contained in the file? What is the typical date and time for the data?</p> Click to reveal answer <p>The command you need to run should have been similar to:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory,typicalDate,typicalTime -j bufr-cli-ex1.bufr4\n</code></pre> <p>You may have additional keys, or listed the year, month, day etc individually. The output should be similar to below, depending on whether you selected JSON or default output.</p> <pre><code>{ \"messages\" : [\n  {\n    \"dataCategory\": 2,\n    \"internationalDataSubCategory\": 4,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\"\n  }\n]}\n</code></pre> <p>From this we see that:</p> <ul> <li>The data category is 2, from BUFR Table A   we can see that this file contains \"Vertical soundings (other than satellite)\" data.</li> <li>The international sub category is 4, indicating    \"Upper-level temperature/humidity/wind reports from fixed-land stations (TEMP)\" data. This information can be looked   up in Common Code Table C-13 (row 33). Note the combination   of category and sub category.</li> <li>The typical date and time are 2023/10/02 and 00:00:00z respectively.</li> </ul>"},{"location":"practical-sessions/bufr-command-line-tools/#exercise-2-bufr_dump","title":"Exercise 2 - bufr_dump","text":"<p>The <code>bufr_dump</code> command can be used to list and examine the contents of a BUFR file, including the data itself.</p> <p>In this exercise we will use a BUFR file that is the same as your created during the initial csv2bufr practical session using the wis2box-webapp.</p> <p>Download the sample-file to the wis2box management container directly with the following command:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex2.bufr4 --output bufr-cli-ex2.bufr4\n</code></pre> <p>Now run the <code>bufr_dump</code> command on the file, using the <code>-p</code> flag to output the data in plain text (key=value format):</p> <pre><code>bufr_dump -p bufr-cli-ex2.bufr4\n</code></pre> <p>You should see around 240 keys output, many of which are missing. This is typical with real world data as not all the eccodes keys are populated with reported data.</p> <p>Hint</p> <p>The missing values can be filtered using tools such as <code>grep</code>: <pre><code>bufr_dump -p bufr-cli-ex2.bufr4 | grep -v MISSING\n</code></pre></p> <p>The example BUFR file for this exercise comes from the csv2bufr practical session. Please download the original CSV file into your current location as follows:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/csv2bufr-ex1.csv --output csv2bufr-ex1.csv\n</code></pre> <p>And display the content of the file with:</p> <pre><code>more csv2bufr-ex1.csv\n</code></pre> <p>Question</p> <p>Use the following command to display column 18 in the CSV file and you will find the reported mean sea level pressure (msl_pressure):</p> <pre><code>more csv2bufr-ex1.csv | cut -d ',' -f 18\n</code></pre> <p>Which key in the BUFR output corresponds to the mean sea level pressure ?</p> Hint <p>Tools such as <code>grep</code> can be used in combination with <code>bufr_dump</code>. For example:</p> <pre><code>bufr_dump -p bufr-cli-ex2.bufr4 | grep -i \"pressure\"\n</code></pre> <p>would filter the contents of <code>bufr_dump</code>to only those lines containing the word pressure. Alternatively,  the output could be filtered on a value.</p> Click to reveal answer <p>The key \"pressureReducedToMeanSeaLevel\" corresponds to the msl_pressure column in the input CSV file.</p> <p>Spend a few minutes examining the rest of the output, comparing to the input CSV file before moving on to the next exercise. For example, you can try to find the keys in the BUFR output that correspond to relative humidity (column 23 in the CSV file) and air temperature (column 21 in the CSV file).</p>"},{"location":"practical-sessions/bufr-command-line-tools/#exercise-3-csv2bufr-mapping-files","title":"Exercise 3 - csv2bufr mapping files","text":"<p>The csv2bufr tool can be configured to process tabular data with different columns and BUFR sequences. </p> <p>This is done by the way of a configuration file written in the JSON format. </p> <p>Like BUFR data itself, the JSON file contains a header section and a data section, with these broadly corresponding to the same sections in BUFR. </p> <p>Additionally, some formatting options are specified within the JSON file. </p> <p>The JSON file for the default mapping can be view via the link below (right-click and open in new tab):</p> <p>aws-template.json</p> <p>Examine the <code>header</code> section of the mapping file (shown below) and compare to the table from exercise 1 (ecCodes key column):</p> <pre><code>\"header\":[\n    {\"eccodes_key\": \"edition\", \"value\": \"const:4\"},\n    {\"eccodes_key\": \"masterTableNumber\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"bufrHeaderCentre\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"bufrHeaderSubCentre\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"updateSequenceNumber\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"dataCategory\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"internationalDataSubCategory\", \"value\": \"const:2\"},\n    {\"eccodes_key\": \"masterTablesVersionNumber\", \"value\": \"const:30\"},\n    {\"eccodes_key\": \"numberOfSubsets\", \"value\": \"const:1\"},\n    {\"eccodes_key\": \"observedData\", \"value\": \"const:1\"},\n    {\"eccodes_key\": \"compressedData\", \"value\": \"const:0\"},\n    {\"eccodes_key\": \"typicalYear\", \"value\": \"data:year\"},\n    {\"eccodes_key\": \"typicalMonth\", \"value\": \"data:month\"},\n    {\"eccodes_key\": \"typicalDay\", \"value\": \"data:day\"},\n    {\"eccodes_key\": \"typicalHour\", \"value\": \"data:hour\"},\n    {\"eccodes_key\": \"typicalMinute\", \"value\": \"data:minute\"},\n    {\"eccodes_key\": \"unexpandedDescriptors\", \"value\":\"array:301150, 307096\"}\n],\n</code></pre> <p>Here you can see the same headers as available in the output from the <code>bufr_ls</code> command. In the mapping file the value  for these can be set to a column from the CSV input file, a constant value or an array of constant values.</p> <p>Question</p> <p>Look at the example header section above. How would you specify a constant value, a value from the input CSV data file and an array of constants?</p> Click to reveal answer <ul> <li>Constant values can be set by setting the <code>value</code> property to <code>\"value\": \"const:&lt;your-constant&gt;\"</code>.</li> <li>Values can be set to a column from the input CSV by setting the <code>value</code> property to <code>\"value\": \"data:&lt;your-column&gt;\"</code>.</li> <li>Arrays can be set by setting the <code>value</code> property to <code>\"value\": \"array:&lt;comma-seperated-values&gt;\"</code>.</li> </ul> <p>Now examine the data section of the JSON mapping file (note, the output has been truncated):</p> <pre><code>    \"data\": [\n        {\"eccodes_key\": \"#1#wigosIdentifierSeries\", \"value\":\"data:wsi_series\", \"valid_min\": \"const:0\", \"valid_max\": \"const:0\"},\n        {\"eccodes_key\": \"#1#wigosIssuerOfIdentifier\", \"value\":\"data:wsi_issuer\", \"valid_min\": \"const:0\", \"valid_max\": \"const:65534\"},\n        {\"eccodes_key\": \"#1#wigosIssueNumber\", \"value\":\"data:wsi_issue_number\", \"valid_min\": \"const:0\", \"valid_max\": \"const:65534\"},\n        {\"eccodes_key\": \"#1#wigosLocalIdentifierCharacter\", \"value\":\"data:wsi_local\"},\n        {\"eccodes_key\": \"#1#latitude\", \"value\": \"data:latitude\", \"valid_min\": \"const:-90.0\", \"valid_max\": \"const:90.0\"},\n        {\"eccodes_key\": \"#1#longitude\", \"value\": \"data:longitude\", \"valid_min\": \"const:-180.0\", \"valid_max\": \"const:180.0\"},\n        {\"eccodes_key\": \"#1#heightOfStationGroundAboveMeanSeaLevel\", \"value\":\"data:station_height_above_msl\", \"valid_min\": \"const:-400\", \"valid_max\": \"const:9000\"},\n        {\"eccodes_key\": \"#1#heightOfBarometerAboveMeanSeaLevel\", \"value\":\"data:barometer_height_above_msl\", \"valid_min\": \"const:-400\", \"valid_max\": \"const:9000\"},\n        {\"eccodes_key\": \"#1#blockNumber\", \"value\": \"data:wmo_block_number\", \"valid_min\": \"const:0\", \"valid_max\": \"const:99\"},\n        {\"eccodes_key\": \"#1#stationNumber\", \"value\": \"data:wmo_station_number\", \"valid_min\": \"const:0\", \"valid_max\": \"const:999\"},\n        {\"eccodes_key\": \"#1#stationType\", \"value\": \"data:station_type\", \"valid_min\": \"const:0\", \"valid_max\": \"const:3\"},\n        {\"eccodes_key\": \"#1#year\", \"value\": \"data:year\", \"valid_min\": \"const:1600\", \"valid_max\": \"const:2200\"},\n        {\"eccodes_key\": \"#1#month\", \"value\": \"data:month\", \"valid_min\": \"const:1\", \"valid_max\": \"const:12\"},\n        {\"eccodes_key\": \"#1#day\", \"value\": \"data:day\", \"valid_min\": \"const:1\", \"valid_max\": \"const:31\"},\n        {\"eccodes_key\": \"#1#hour\", \"value\": \"data:hour\", \"valid_min\": \"const:0\", \"valid_max\": \"const:23\"},\n        {\"eccodes_key\": \"#1#minute\", \"value\": \"data:minute\", \"valid_min\": \"const:0\", \"valid_max\": \"const:59\"},\n        {\"eccodes_key\": \"#1#nonCoordinatePressure\", \"value\": \"data:station_pressure\", \"valid_min\": \"const:50000\", \"valid_max\": \"const:150000\"},\n        {\"eccodes_key\": \"#1#pressureReducedToMeanSeaLevel\", \"value\": \"data:msl_pressure\", \"valid_min\": \"const:50000\", \"valid_max\": \"const:150000\"},\n        {\"eccodes_key\": \"#1#nonCoordinateGeopotentialHeight\", \"value\": \"data:geopotential_height\", \"valid_min\": \"const:-1000\", \"valid_max\": \"const:130071\"},\n        ...\n    ]\n</code></pre> <p>Refer back to exercise 2 in this practical session and the task identifying the ecCodes key corresponding to the mean sea level pressure.</p> <p>Question</p> <p>Can you identify the row in the data section that performs the mapping between the CSV input file and ecCodes key used to encode the mean sea level pressure data?</p> Click to reveal answer <p>You will have hopefully identified the line below:</p> <pre><code>{\"eccodes_key\": \"#1#pressureReducedToMeanSeaLevel\", \"value\": \"data:msl_pressure\", \"valid_min\": \"const:50000\", \"valid_max\": \"const:150000\"},\n</code></pre> <p>This instructs the csv2bufr tool to map the data from the <code>msl_pressure</code> column to the <code>#1#pressureReducedToMeanSeaLevel</code> element in BUFR.</p> <p>Bonus question</p> <p>Can you guess what the <code>valid_min</code> and <code>valid_max</code> properties do?</p> Click to reveal answer <p>These specify the valid minimum and maximum values for the different elements. Values falling outside of the  range specified will result in a warning message and the data set to missing in the output BUFR file.</p> <p>Download the csv2bufr mapping file to the wis2box management container:</p> <pre><code>curl https://raw.githubusercontent.com/wmo-im/csv2bufr/main/csv2bufr/templates/resources/aws-template.json --output aws-template.json \n</code></pre> <p>Now modify the file to change the limits for air temperature, for example set to realistic limits but in degrees Celsius:</p> <pre><code>        {\"eccodes_key\": \"#1#airTemperature\", \"value\": \"data:air_temperature\", \"valid_min\": \"const:-60\", \"valid_max\": \"const:60\"},\n</code></pre> <p>Now use <code>csv2bufr</code> to transform the example CSV data file to BUFR using the modified mapping file:</p> <pre><code>csv2bufr data transform --bufr-template aws-template.json csv2bufr-ex1.csv\n</code></pre> <p>You should see the following output:</p> <pre><code>CLI:    ... Transforming ex1.csv to BUFR ...\nCLI:    ... Processing subsets:\n#1#airTemperature: Value (301.25) out of valid range (-60 - 60).; Element set to missing\nCLI:    ..... 384 bytes written to ./WIGOS_0-20000-0-99100_20230929T090000.bufr4\nCLI:    End of processing, exiting.\n</code></pre> <p>This suggests a mismatch between the units in the input data and that expected by the mapping file.</p> <p>Use the <code>bufr_dump</code> command to confirm that the first air temperature value has been set to missing in the file that was produced:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-99100_20230929T090000.bufr4 | grep airTemperature\n</code></pre> <p>Note</p> <p>Note that the units used in BUFR are fixed, Kelvin for temperature, Pascals for pressure etc. However, csv2bufr can perform simple unit conversions by scaling and adding an offset.</p> <p>As the final part of this exercise, edit the the mapping file again and add a scale and offset to the  airTemperature line.</p> <pre><code>        {\"eccodes_key\": \"#1#airTemperature\", \"value\": \"data:air_temperature\", \"valid_min\": \"const:-60\", \"valid_max\": \"const:60\", \"scale\": \"const:0\", \"offset\":\"const:273.15\"},\n</code></pre> <p>And edit  the air_temperature column in the 'csv2bufr-ex1.csv' to be in Celsius rather than Kelvin: 301.25 K = 28.1 degrees C.</p> <p>Rerun the conversion:</p> <pre><code>csv2bufr data transform --bufr-template aws-template.json csv2bufr-ex1.csv\n</code></pre> <p>Run BUFR dump and confirm that the airTemperature is correctly encoded.</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-99100_20230929T090000.bufr4 | grep airTemperature\n</code></pre> <p>You should see the following output:</p> <pre><code>#1#airTemperature=301.25\n#2#airTemperature=MISSING\n</code></pre>"},{"location":"practical-sessions/bufr-command-line-tools/#exercise-4-installing-new-csv2bufr-templates","title":"Exercise 4 - installing new csv2bufr templates","text":"<p>The <code>bufr-template</code> used by csv2bufr can be specified by providing a filename to the command, as per the above example, or by setting a search path with an environment variable and by specifying the template name. The template name must match the filename but without the extension, with the file located on the search path. </p> <p>Bug</p> <p>Currently, the default mapping file used in the csv2bufr automated workflow sets the originating centre header to indicate that the data have originating with the WMO Secretariat, see the JSON snippet  from the default <code>bufr-template</code> below:</p> <pre><code>    {\"eccodes_key\": \"bufrHeaderCentre\", \"value\": \"const:0\"}, \n</code></pre> <p>In this final exercise you will download the template used, correct with the appropriate centre code and install  in the wis2box management container. Suggested originating centre codes are listed below, these will need to be confirmed with your WIS focal points prior to data exchange.</p> Centre Code Melbourne (RSMC), Australia 67 Brasilia (RSMC), Brazil 43 Beijing (RSMC), China 38 New Delhi (RSMC), India 28 Indonesia (NMC) 195 Malaysia (NMC) 73 Federated States of Micronesia 197 Wellington (RSMC), New Zealand 69 Oman (NMC) 127 Philippines (NMC) 201 Seoul, Republic of Korea 40 Dili (NMC), Timor-Leste TBC <p>For this exercise, first create a directory in which to store the mappings:</p> <pre><code>cd /data/wis2box\nmkdir bufr-templates\n</code></pre> <p>Navigate to the directory and download the default bufr-template:</p> <pre><code>cd bufr-templates\ncurl https://raw.githubusercontent.com/wmo-im/csv2bufr/main/csv2bufr/templates/resources/aws-template.json \\\n    --output aws-template-custom.json\n</code></pre> <p>Make sure the file 'aws-template-custom.json' is in the directory '/data/wis2box/bufr-templates':</p> <pre><code>ls /data/wis2box/bufr-templates\n</code></pre> <p>Edit the file using <code>vi</code> or your favourite text editor and update the value of the <code>bufrHeaderCentre</code>.</p> <p>Now try the commands from the block below:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/csv2bufr-ex1.csv --output csv2bufr-ex1.csv\nexport CSV2BUFR_TEMPLATES=/data/wis2box/bufr-templates\ncsv2bufr data transform --bufr-template aws-template-custom csv2bufr-ex1.csv\n</code></pre> <p>Inspect the output file using <code>bufr_ls</code> and confirm that the originating centre in the headers is updated.</p>"},{"location":"practical-sessions/bufr-command-line-tools/#housekeeping","title":"Housekeeping","text":"<p>Clean up your working directory by removing files you no longer need and clean up your station list to remove any example stations you may have created and that are no longer needed.</p>"},{"location":"practical-sessions/bufr-command-line-tools/#conclusion","title":"Conclusion","text":"<p>Congratulations</p> <p>In this practical session you have learned:</p> <ul> <li>how to use some of the BUFR command line tools available in the wis2box management container;</li> <li>how to make basic changes to the mapping file used in the csv2bufr tool;</li> <li>and how to install new csv2bufr mappping templates in wis2box.</li> </ul> <p>Next steps</p> <p>In this session we have covered only a small part of the csv2bufr and ecCodes BUFR tools functionality.  For example, the csv2bufr tool includes the ability to create new 'bufr-template' files provided different BUFR  sequences. As an example, the template for BUFR sequence (301150, 307096), used by the default  <code>aws-template</code>, can be generated with the command:</p> <pre><code>csv2bufr mappings create 301150 307096 &gt; bufr-template.json\n</code></pre> <p>This file can be modified to add and map additional variables from the CSV data file, use different quality  control values (valid_min and valid_max) and perform some basic (linear) unit conversions. Further information is available via the csv2bufr documentation pages: </p> <p>https://csv2bufr.readthedocs.io/en/latest/.</p> <p>Further information on the ecCodes BUFR tools can be found at: </p> <p>https://confluence.ecmwf.int/display/ECC/BUFR+tools.</p>"},{"location":"practical-sessions/configuring-station-metadata/","title":"Configuring station metadata","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>create an authorization token for the <code>collections/stations</code> endpoint</li> <li>add station metadata to wis2box</li> <li>update/delete station metadata using the wis2box-webapp</li> </ul>"},{"location":"practical-sessions/configuring-station-metadata/#introduction","title":"Introduction","text":"<p>For sharing data internationally between WMO Members, it is important to have a common understanding of the stations that are producing the data. The WMO Integrated Global Observing System (WIGOS) provides a framework for the integration of observing systems and data management systems. The WIGOS Station Identifier (WSI) is used as the unique reference of the station which produced a specific set of observation data.</p> <p>wis2box has a collection of station metadata that is used to describe the stations that are producing the observation data and should be retrieved from OSCAR/Surface. The station metadata in wis2box is used by the BUFR transformation tools to check that input data contains a valid WIGOS Station Identifier (WSI) and to provide a mapping between the WSI and the station metadata.</p>"},{"location":"practical-sessions/configuring-station-metadata/#create-an-authorization-token-for-collectionsstations","title":"Create an authorization token for collections/stations","text":"<p>To edit stations via the wis2box-webapp you will first to need create an authorization token.</p> <p>Login to your student VM and ensure you are in the <code>wis2box-1.0.0rc1</code> directory:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Then login into the wis2box-management container with the following command:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>Within the wis2box-management container your can create an authorization token for a specific endpoint using the command: <code>wis2box auth add-token --path &lt;my-endpoint&gt;</code>.</p> <p>For example, to use a random automatically generated token for the <code>collections/stations</code> endpoint:</p> <pre><code>wis2box auth add-token --path collections/stations\n</code></pre> <p>The output will look like this:</p> <pre><code>Continue with token: 7ca20386a131f0de384e6ffa288eb1ae385364b3694e47e3b451598c82e899d1 [y/N]? y\nToken successfully created\n</code></pre> <p>Or, if you want to define your own token for the <code>collections/stations</code> endpoint, you can use the following example:</p> <pre><code>wis2box auth add-token --path collections/stations DataIsMagic\n</code></pre> <p>Output:</p> <pre><code>Continue with token: DataIsMagic [y/N]? y\nToken successfully created\n</code></pre> <p>Please create an authorization token for the <code>collections/stations</code> endpoint using the instructions above.</p>"},{"location":"practical-sessions/configuring-station-metadata/#add-station-metadata-using-the-wis2box-webapp","title":"add station metadata using the wis2box-webapp","text":"<p>The wis2box-webapp provides a graphical user interface to edit station metadata.</p> <p>Open the wis2box-webapp in your browser by navigating to <code>http://&lt;your-host&gt;/wis2box-webapp</code>:</p> <p></p> <p>And select stations:</p> <p></p> <p>When you click add 'add new station' you are asked to provide the WIGOS station identifier for the station you want to add:</p> <p></p> <p>Add station metadata for 3 or more stations</p> <p>Please add three or more stations to the wis2box station metadata collection of your wis2box. </p> <p>Please use stations from your country if possible, especially if you brought your own data.</p> <p>If your country does not have any stations in OSCAR/Surface, you can use the following stations for the purpose of this exercise:</p> <ul> <li>0-20000-0-91334</li> <li>0-20000-0-96323 (note missing station elevation in OSCAR)</li> <li>0-20000-0-96749 (note missing station elevation in OSCAR)</li> </ul> <p>When you click search the station data is retrieved from OSCAR/Surface, please note that this can take a few seconds.</p> <p>Review the data returned by OSCAR/Surface and add missing data where required. Select a topic for the station and provide your authorization token for the <code>collections/stations</code> endpoint and click 'save':</p> <p></p> <p></p> <p>Go back to the station list and you will see the station you added:</p> <p></p> <p>Repeat this process until you have at least 3 stations configured.</p> <p>Deriving missing elevation information</p> <p>If your station elevation is missing, there are online services to help lookup the elevation using open elevation data. One such example is the Open Topo Data API.</p> <p>For example, to get the elevation at latitude -6.15558 and longitude 106.84204, you can copy-paste the following URL in a new browser-tab:</p> <pre><code>https://api.opentopodata.org/v1/aster30m?locations=-6.15558,106.84204\n</code></pre> <p>Output:</p> <pre><code>{\n  \"results\": [\n    {\n      \"dataset\": \"aster30m\", \n      \"elevation\": 7.0, \n      \"location\": {\n        \"lat\": -6.15558, \n        \"lng\": 106.84204\n      }\n    }\n  ], \n  \"status\": \"OK\"\n}\n</code></pre>"},{"location":"practical-sessions/configuring-station-metadata/#review-your-station-metadata","title":"Review your station metadata","text":"<p>The station metadata is stored in the backend of wis2box and made available via the wis2box-api. </p> <p>If you open a browser and navigate to <code>http://&lt;your-host&gt;/oapi/collections/stations/items</code> you will see the station metadata you added:</p> <p></p> <p>Review your station metadata</p> <p>Verify the stations you added are associated to your dataset by visiting <code>http://&lt;your-host&gt;/oapi/collections/stations/items</code> in your browser.</p> <p>You also have the option to view/update/delete the station in the wis2box-webapp. Note that you are required to provide your authorization token for the <code>collections/stations</code> endpoint to update/delete the station.</p> <p>Update/delete station metadata</p> <p>Try and see if you can update/delete the station metadata for one of the stations you added using the wis2box-webapp.</p>"},{"location":"practical-sessions/configuring-station-metadata/#bulk-station-metadata-upload","title":"Bulk station metadata upload","text":"<p>Note that wis2box also has the ability to perform \"bulk\" loading of station metadata from a CSV file using the command line in the wis2box-management container.</p> <pre><code>python3 wis2box-ctl.py login\nwis2box metadata station publish-collection -p /data/wis2box/metadata/station/station_list.csv -th origin/a/wis2/centre-id/weather/surface-based-observations/synop\n</code></pre> <p>This allows you to upload a large number of stations at once and associate them with a specific topic.</p> <p>You can create the CSV file using Excel or a text editor and then upload it to wis2box-host-datadir to make it available to the wis2box-management container in the <code>/data/wis2box/</code> directory.</p> <p>After doing a bulk upload of stations, it is recommended to review the stations in the wis2box-webapp to ensure the data was uploaded correctly.</p> <p>See the official wis2box documentation for more information on how to use this feature.</p>"},{"location":"practical-sessions/configuring-station-metadata/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>create an authorization token for the <code>collections/stations</code> endpoint to be used with the wis2box-webapp</li> <li>add station metadata to wis2box using the wis2box-webapp</li> <li>view/update/delete station metadata using the wis2box-webapp</li> </ul>"},{"location":"practical-sessions/configuring-wis2box-datasets/","title":"Configuring datasets in wis2box","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>create a new dataset</li> <li>create discovery metadata for a dataset</li> <li>configure data mappings for a dataset</li> <li>publish a WIS2 notification with a WCMP2 record</li> <li>update and re-publish your dataset</li> </ul>"},{"location":"practical-sessions/configuring-wis2box-datasets/#introduction","title":"Introduction","text":"<p>wis2box uses datasets that are associated with discovery metadata and data mappings.</p> <p>Discovery metadata is used to create a WCMP2 (WMO Core Metadata Profile 2) record that is shared using a WIS2 notification published on your wis2box-broker.</p> <p>The data mappings are used to associate a data plugin to your input data, allowing your data to be transformed prior to being published using the WIS2 notification.</p> <p>This session will walk you through creating a new dataset, creating discovery metadata, and configuring data mappings. You will inspect your dataset in the wis2box-api and review the WIS2 notification for your discovery metadata.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#preparation","title":"Preparation","text":"<p>Connect to your broker using MQTT Explorer. </p> <p>Instead of using your internal broker credentials, use the public credentials <code>everyone/everyone</code>:</p> <p></p> <p>Note</p> <p>You never need to share the credentials of your internal broker with external users. The 'everyone' user is a public user to enable sharing of WIS2 notifications.</p> <p>The <code>everyone/everyone</code> credentials has read-only access on the topic 'origin/a/wis2/#'. This is the topic where the WIS2 notifications are published. The Global Broker can subscribe with these public credentials to receive the notifications.</p> <p>The 'everyone' user will not see internal topics or be able to publish messages.</p> <p>Open a browser and open a page to <code>http://&lt;your-host&gt;/wis2box-webapp</code>. Make sure you are logged in and can access the 'dataset editor' page.</p> <p>See the section on Initializing wis2box if you need to remember how to connect to the broker or access the wis2box-webapp.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#create-an-authorization-token-for-processeswis2box","title":"Create an authorization token for processes/wis2box","text":"<p>You will need an authorization token for the 'processes/wis2box' endpoint to publish your dataset. </p> <p>To create an authorization token, access your training VM over SSH and use the following commands to login to the wis2box-management container:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Then run the following command to create a randomly generated authorization token for the 'processes/wis2box' endpoint:</p> <pre><code>wis2box auth add-token --path processes/wis2box\n</code></pre> <p>You can also create a token with a specific value by providing the token as an argument to the command:</p> <pre><code>wis2box auth add-token --path processes/wis2box MyS3cretToken\n</code></pre> <p>Make sure to copy the token value and store it on your local machine, as you will need it later.</p> <p>Once you have your token, you can exit the wis2box-management container:</p> <pre><code>exit\n</code></pre>"},{"location":"practical-sessions/configuring-wis2box-datasets/#creating-a-new-dataset-in-the-wis2box-webapp","title":"Creating a new dataset in the wis2box-webapp","text":"<p>Navigate to the 'dataset editor' page in the wis2box-webapp of your wis2box instance by going to <code>http://&lt;your-host&gt;/wis2box-webapp</code> and selecting 'dataset editor' from the menu on the left hand side.</p> <p>On the 'dataset editor' page, under the 'Datasets' tab, click on \"Create New ...\":</p> <p></p> <p>A pop-up window will appear, asking you to provide:</p> <ul> <li>Centre ID : this is the agency acronym (in lower case and no spaces), as specified by the WMO Member, that identifies the data centre responsible for publishing the data.</li> <li>Data Type: The type of data you are creating metadata for. You can choose between using a predefined template or selecting 'other'.  If 'other' is selected, more fields will have to be manually filled. </li> </ul> <p>Centre ID</p> <p>Your centre-id should start with the TLD of your country, followed by a dash (<code>-</code>) and an abbreviated name of your organization (for example <code>fr-meteofrance</code>). The centre-id must be lowercase and use alphanumeric characters only. The dropdown list shows all currently registered centre-ids on WIS2 as well as any centre-id you have already created in wis2box.</p> <p>Data Type Templates</p> <p>The Data Type field allows you to select from a list of templates available in the wis2box-webapp dataset editor. A template will pre-populate the form with suggested default values appropriate for the data type. This includes suggested title and keywords for the metadata and pre-configured data plugins. The topic will be fixed to the default topic for the data type.</p> <p>For the purpose of the training we will use the weather/surface-based-observations/synop data type which includes data plugins that ensure the data is transformed into BUFR format before being published.</p> <p>If you want to publish CAP alerts using wis2box, use the template weather/advisories-warnings. This template includes a data plugin that verifies the input data is a valid CAP alert before publishing. To create CAP alerts and publish them via wis2box you can use CAP Composer.</p> <p>Please choose a centre-id appropriate for your organization.</p> <p>For Data Type, select weather/surface-based-observations/synop:</p> <p></p> <p>Click continue to form to proceed, you will now be presented with the Dataset Editor Form.</p> <p>Since you selected the weather/surface-based-observations/synop data type, the form will be pre-populated with some initial values related to this data type.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#creating-discovery-metadata","title":"Creating discovery metadata","text":"<p>The Dataset Editor Form allows you to provide the Discovery Metadata for your dataset that the wis2box-management container will use to publish a WCMP2 record.</p> <p>Since you have selected the 'weather/surface-based-observations/synop' data type, the form will be pre-populated with some default values.</p> <p>Please make sure to replace the auto-generated 'Local ID' with a descriptive name for your dataset, e.g. 'synop-dataset-wis2training':</p> <p></p> <p>Review the title and keywords, and update them as necessary, and provide a description for your dataset.</p> <p>Note there are options to change the 'WMO Data Policy' from 'core' to 'recommended' or to modify your default Metadata Identifier, please keep data-policy as 'core' and use the default Metadata Identifier.</p> <p>Next, review the section defining your 'Temporal Properties' and 'Spatial Properties'. You can adjust the bounding box by updating the 'North Latitude', 'South Latitude', 'East Longitude', and 'West Longitude' fields:</p> <p></p> <p>Next, fill out the section defining the 'Contact Information of the Data Provider':</p> <p></p> <p>Finally, fill out the section defining the 'Data Quality Information':</p> <p>Once you are done filling out all the sections, click 'VALIDATE FORM' and check the form for any errors:</p> <p></p> <p>If there are any errors, correct them and click 'VALIDATE FORM' again.</p> <p>Making sure you have no errors and that you get a pop-up indication your form has been validated:</p> <p></p> <p>Next, before submitting your dataset, review the data mappings for your dataset.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#configuring-data-mappings","title":"Configuring data mappings","text":"<p>Since you used a template to create your dataset, the dataset mappings have been pre-populated with the defaults plugins for the 'weather/surface-based-observations/synop' data type. Data plugins are used in the wis2box to transform data before it is published using the WIS2 notification.</p> <p></p> <p>Note that you can click on the \"update\"-button to change settings for the plugin such as file-extension and the file-pattern, you can leave the default settings for now. In a later session, you will learn more about BUFR and the transformation of data into BUFR format.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#submitting-your-dataset","title":"Submitting your dataset","text":"<p>Finally, you can click 'submit' to publish your dataset. </p> <p>You will need to provide the authorization token for 'processes/wis2box' that you created earlier. If you have not done so, you can create a new token by following the instructions in the preparation section.</p> <p>Check that you get the following message after submitting your dataset, indicating that the dataset was successfully submitted:</p> <p></p> <p>After you click 'OK', you are redirected to the Dataset Editor home page. Now if you click on the 'Dataset' tab, you should see your new dataset listed:</p> <p></p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#reviewing-the-wis2-notification-for-your-discovery-metadata","title":"Reviewing the WIS2-notification for your discovery metadata","text":"<p>Go to MQTT Explorer, if you were connected to the broker, you should see a new WIS2 notification published on the topic <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code>:</p> <p></p> <p>Inspect the content of the WIS2 notification you published. You should see a JSON with a structure corresponding to the WIS Notification Message (WNM) format.</p> <p>Question</p> <p>On what topic is the WIS2 notification published?</p> Click to reveal answer <p>The WIS2 notification is published on the topic <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code>.</p> <p>Question</p> <p>Try to find the title, description and keywords you provided in the discovery metadata in the WIS2 notification.  Can you find them?</p> Click to reveal answer <p>Note that the title, description, and keywords you provided in the discovery metadata are not present in the WIS2 notification payload! </p> <p>Instead, try to look for the canonical link  in the \"links\"-section in the WIS2 notification:</p> <p></p> <p>The WIS2 notification contains a canonical link to the WCMP2 record that was published. If you copy-paste this link into a browser, you will download the WCMP2 record and see the title, description, and keywords you provided.</p>"},{"location":"practical-sessions/configuring-wis2box-datasets/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>create a new dataset</li> <li>define your discovery metadata</li> <li>review your data mappings</li> <li>publish discovery metadata</li> <li>review the WIS2 notification for your discovery metadata</li> </ul>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/","title":"Connecting to WIS2 over MQTT","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>connect to the WIS2 Global Broker using MQTT Explorer</li> <li>review the WIS2 topic structure</li> <li>review the WIS2 notification message structure</li> </ul>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#introduction","title":"Introduction","text":"<p>WIS2 uses the MQTT protocol to advertise the availability of weather/climate/water data. The WIS2 Global Broker subscribes to all WIS2 Nodes in the network and republishes the messages it receives. The Global Cache subscribes to the Global Broker, downloads the data in the message and then republishes the message on the <code>cache</code> topic with a new URL.  The Global Discovery Catalogue publishes discovery metadata from the Broker and provides a search API.</p> <p>This is an example of the WIS2 notification message structure for a message received on the topic <code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code>:  </p> <pre><code>{\n  \"id\": \"59f9b013-c4b3-410a-a52d-fff18f3f1b47\",\n  \"type\": \"Feature\",\n  \"version\": \"v04\",\n  \"geometry\": {\n    \"coordinates\": [\n      -38.69389,\n      -17.96472,\n      60\n    ],\n    \"type\": \"Point\"\n  },\n  \"properties\": {\n    \"data_id\": \"br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000\",\n    \"datetime\": \"2024-08-15T06:00:00Z\",\n    \"pubtime\": \"2024-08-15T09:52:02Z\",\n    \"integrity\": {\n      \"method\": \"sha512\",\n      \"value\": \"TBuWycx/G0lIiTo47eFPBViGutxcIyk7eikppAKPc4aHgOmTIS5Wb9+0v3awMOyCgwpFhTruRRCVReMQMp5kYw==\"\n    },\n    \"content\": {\n      \"encoding\": \"base64\",\n      \"value\": \"QlVGUgAA+gQAABYAACsAAAAAAAIAHAAH6AgPBgAAAAALAAABgMGWx1AAAM0ABOIAAAODM0OTkAAAAAAAAAAAAAAKb5oKEpJ6YkJ6mAAAAAAAAAAAAAAAAv0QeYA29WQa87ZhH4CQP//z+P//BD////+ASznXuUb///8MgAS3/////8X///e+AP////AB/+R/yf////////////////////6/1/79H/3///gEt////////4BLP6QAf/+/pAB//4H0YJ/YeAh/f2///7TH/////9+j//f///////////////////v0f//////////////////////wNzc3Nw==\",\n      \"size\": 250\n    },\n    \"wigos_station_identifier\": \"0-76-2-2900801000W83499\"\n  },\n  \"links\": [\n    {\n      \"rel\": \"canonical\",\n      \"type\": \"application/bufr\",\n      \"href\": \"http://wis2bra.inmet.gov.br/data/2024-08-15/wis/br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000.bufr4\",\n      \"length\": 250\n    }\n  ]\n}\n</code></pre> <p>In this practical session you will learn how to use the MQTT Explorer tool to setup an MQTT client connection to a WIS2 Global Broker and be able to display WIS2 notification messages.</p> <p>MQTT Explorer is a useful tool to browse and review the topic structure for a given MQTT broker to review data being published.</p> <p>Note that MQTT is primarily used for \"machine-to-machine\" communication; meaning that there would normally be a client automatically parsing the messages as they are received. To work with MQTT programmatically (for example, in Python), you can use MQTT client libraries such as paho-mqtt to connect to an MQTT broker and process incoming messages. There exist numerous MQTT client and server software, depending on your requirements and technical environment.</p>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#using-mqtt-explorer-to-connect-to-the-global-broker","title":"Using MQTT Explorer to connect to the Global Broker","text":"<p>To view messages published by a WIS2 Global Broker you can \"MQTT Explorer\" which can be downloaded from the MQTT Explorer website.</p> <p>Open MQTT Explorer and add a new connection to the Global Broker hosted by MeteoFrance using the following details:</p> <ul> <li>host: globalbroker.meteo.fr</li> <li>port: 8883</li> <li>username: everyone</li> <li>password: everyone</li> </ul> <p></p> <p>Click on the 'ADVANCED' button, remove the pre-configured topics and add the following topics to subscribe to:</p> <ul> <li><code>origin/a/wis2/#</code></li> </ul> <p></p> <p>Note</p> <p>When setting up MQTT subscriptions you can use the following wildcards:</p> <ul> <li>Single-level (+): a single-level wildcard replaces one topic level</li> <li>Multi-level (#): a multi-level wildcard replaces multiple topic levels</li> </ul> <p>In this case <code>origin/a/wis2/#</code> will subscribe to all topics under the <code>origin/a/wis2</code> topic.</p> <p>Click 'BACK', then 'SAVE' to save your connection and subscription details.  Then click 'CONNECT':</p> <p>Messages should start appearing in your MQTT Explorer session as follows:</p> <p></p> <p>You are now ready to start exploring the WIS2 topics and message structure.</p>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#exercise-1-review-the-wis2-topic-structure","title":"Exercise 1: Review the WIS2 topic structure","text":"<p>Use MQTT to browse topic structure under the <code>origin</code> topics.</p> <p>Question</p> <p>How can we distinguish the WIS centre that published the data?</p> Click to reveal answer <p>You can click on the left hand side window in MQTT Explorer to expand the topic structure.</p> <p>We can distinguish the WIS centre that published the data by looking at the fourth level of the topic structure.  For example, the following topic:</p> <p><code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code></p> <p>tells us that the data was published a WIS centre with the centre-id <code>br-inmet</code>, which is the centre-id for Instituto Nacional de Meteorologia - INMET, Brazil.</p> <p>Question</p> <p>How can we distinguish between messages published by WIS-centres hosting a GTS-to-WIS2 gateway and messages published by WIS-centres hosting a WIS2 node?</p> Click to reveal answer <p>We can distinguish messages coming from GTS-to-WIS2 gateway by looking at the centre-id in the topic structure. For example, the following topic:</p> <p><code>origin/a/wis2/de-dwd-gts-to-wis2/data/core/I/S/A/I/01/sbbr</code></p> <p>tells us that the data was published by the GTS-to-WIS2 gateway hosted by Deutscher Wetterdienst (DWD), Germany. The GTS-to-WIS2 gateway is a special type of data-publisher that publishes data from the Global Telecommunication System (GTS) to WIS2. The topic structure is composed by the TTAAii CCCC headers for the GTS messages.</p>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#exercise-2-review-the-wis2-message-structure","title":"Exercise 2: Review the WIS2 message structure","text":"<p>Disconnect from MQTT Explorer and update the 'Advanced' sections to change the subscription to the following:</p> <ul> <li><code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> <li><code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> </ul> <p></p> <p>Note</p> <p>The <code>+</code> wildcard is used to subscribe to all WIS-centres.</p> <p>Reconnect to the Global Broker and wait for messages to appear. </p> <p>You can view the content of the WIS2 message in the \"Value\" section on the right hand side. Try to expand the topic structure to see the different levels of the message until you reach the last level and review message content of one of the messages.</p> <p>Question</p> <p>How can we identify the timestamp that the data was published? And how can we identify the timestamp that the data was collected?</p> Click to reveal answer <p>The timestamp that the data was published is contained in the <code>properties</code> section of the message with a key of <code>pubtime</code>.</p> <p>The timestamp that the data was collected is contained in the <code>properties</code> section of the message with a key of <code>datetime</code>.</p> <p></p> <p>Question</p> <p>How can we download the data from the URL provided in the message?</p> Click to reveal answer <p>The URL is contained in the <code>links</code> section with <code>rel=\"canonical\"</code> and defined by the <code>href</code> key.</p> <p>You can copy the URL and paste it into a web browser to download the data.</p>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#exercise-3-review-the-difference-between-origin-and-cache-topics","title":"Exercise 3: Review the difference between 'origin' and 'cache' topics","text":"<p>Make sure you are still connected to the Global Broker using the topic subscriptions <code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code> and <code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code> as described in Exercise 2.</p> <p>Try to identify a message for the same centre-id published on both the <code>origin</code> and <code>cache</code> topics.</p> <p>Question</p> <p>What is the difference between the messages published on the <code>origin</code> and <code>cache</code> topics?</p> Click to reveal answer <p>The messages published on the <code>origin</code> topics are the original messages which the Global Broker republishes from the WIS2 Nodes in the network. </p> <p>The messages published on the <code>cache</code> topics are the messages for data has been downloaded by the Global Cache. If you check the content of the message from the topic starting with <code>cache</code>, you will see that the 'canonical' link has been updated to a new URL.</p> <p>There are multiple Global Caches in the WIS2 network, so you will receive one message from each Global Cache that has downloaded the message.</p> <p>The Global Cache will only download and republish messages that were published on the <code>../data/core/...</code> topic hierarchy.</p>"},{"location":"practical-sessions/connecting-to-wis2-over-mqtt/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned:</p> <ul> <li>how to subscribe to WIS2 Global Broker services using MQTT Explorer</li> <li>the WIS2 topic structure</li> <li>the WIS2 notification message structure</li> <li>the difference between core and recommended data</li> <li>the topic structure used by the GTS-to-WIS2 gateway</li> <li>the difference between Global Broker messages published on the <code>origin</code> and <code>cache</code> topics</li> </ul>"},{"location":"practical-sessions/converting-csv-data-to-bufr/","title":"Converting CSV data to BUFR","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>use the MinIO UI to upload input CSV data files and monitor the result</li> <li>know the format for CSV data for use with the default automatic weather station BUFR template</li> <li>use the dataset editor in the wis2box webapp to create a dataset for publishing DAYCLI messages</li> <li>know the format for CSV data for use with the DAYCLI BUFR template</li> <li>use wis2box webapp to validate and convert sample data for AWS stations to BUFR (optional)</li> </ul>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#introduction","title":"Introduction","text":"<p>Comma-separated values (CSV) data files are often used for recording observational and other data in a tabular format.  Most data loggers used to record sensor output are able to export the observations in delimited files, including in CSV. Similarly, when data are ingested into a database it is easy to export the required data in CSV formatted files.  To aid the exchange of data originally stored in tabular data formats a CSV to BUFR converted has been implemented in  the wis2box using the same software as for SYNOP to BUFR.</p> <p>In this session you will learn about using csv2bufr converter in the wis2box for the following built-in templates:</p> <ul> <li>AWS (aws-template.json) : Mapping template for converting CSV data from simplified automatic weather station file to BUFR sequence 301150, 307096\"</li> <li>DayCLI (daycli-template.json) : Mapping template for converting daily climate CSV data to BUFR sequence 307075</li> </ul>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#preparation","title":"Preparation","text":"<p>Make sure the wis2box-stack has been started with <code>python3 wis2box.py start</code></p> <p>Make sure that you have a web browser open with the MinIO UI for your instance by going to <code>http://&lt;your-host&gt;:9000</code> If you don't remember your MinIO credentials, you can find them in the <code>wis2box.env</code> file in the <code>wis2box-1.0.0rc1</code> directory on your student VM.</p> <p>Make sure that you have MQTT Explorer open and connected to your broker using the credentials <code>everyone/everyone</code>.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#exercise-1-using-csv2bufr-with-the-aws-template","title":"Exercise 1: Using csv2bufr with the 'AWS' template","text":"<p>The 'AWS' template provides a predefined mapping template to convert CSV data from AWS stations in support of the GBON reporting requirements. </p> <p>The description of the AWS template can be found here.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#review-the-aws-example-input-data","title":"Review the aws-example input data","text":"<p>Download the example for this exercise from the link below:</p> <p>aws-example.csv</p> <p>Open the file you downloaded in an editor and inspect the content:</p> <p>Question</p> <p>Examining the date, time and identify fields (WIGOS and traditional identifiers) what do you notice? How would today's date be represented?</p> Click to reveal answer <p>Each column contains a single piece of information. For example the date is split into year, month and day, mirroring how the data are stored in BUFR. Todays date would be  split across the columns \"year\", \"month\" and \"day\". Similarly, the time needs to be split into \"hour\" and \"minute\" and the WIGOS station identifier into its respective components.</p> <p>Question</p> <p>Looking at the data file how are missing data encoded?</p> Click to reveal answer <p>Missing data within the file are represented by empty cells. In a CSV file this would be encoded by <code>,,</code>. Note that this is an empty cell and not encoded as a zero length string,  e.g. <code>,\"\",</code>.</p> <p>Missing data</p> <p>It is recognized that data may be missing for a variety of reasons, whether due to sensor  failure or the parameter not being observed. In these cases missing data can be encoded as per the above answer, the other data in the report remain valid.</p> <p>Question</p> <p>What are the WIGOS station identifiers for the stations reporting data in the example file? How is it defined in the input file?</p> Click to reveal answer <p>The WIGOS station identifier is defined by 4 separate columns in the file:</p> <ul> <li>wsi_series: WIGOS identifier series</li> <li>wsi_issuer: WIGOS issuer of identifier</li> <li>wsi_issue_number: WIGOS issue number</li> <li>wsi_local: WIGOS local identifier</li> </ul> <p>The WIGOS station identifiers used in the example file are <code>0-20000-0-60351</code>, <code>0-20000-0-60355</code> and <code>0-20000-0-60360</code>.  </p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#update-the-example-file","title":"Update the example file","text":"<p>Update the example file you downloaded to use today's date and time and change the WIGOS station identifiers to use stations you have registered in the wis2box-webapp.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#upload-the-data-to-minio-and-check-the-result","title":"Upload the data to MinIO and check the result","text":"<p>Navigate to the MinIO UI and log in using the credentials from the <code>wis2box.env</code> file.</p> <p>Navigate to the wis2box-incoming and click the button \"Create new path\":</p> <p></p> <p>Create a new folder in the MinIO bucket that matches the dataset-id for the dataset you created with the template='weather/surface-weather-observations/synop':</p> <p></p> <p>Upload the example file you downloaded to the folder you created in the MinIO bucket:</p> <p></p> <p>Check the Grafana dashboard at <code>http://&lt;your-host&gt;:3000</code> to see if there are any WARNINGS or ERRORS. If you see any, try to fix them and repeat the exercise.</p> <p>Check the MQTT Explorer to see if you receive WIS2 data-notifications.</p> <p>If you successfully ingested the data you should see 3 notifications in MQTT explorer on the topic <code>origin/a/wis2/&lt;centre-id&gt;/data/weather/surface-weather-observations/synop</code> for the 3 stations you reported data for:</p> <p></p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#exercise-2-using-the-daycli-template","title":"Exercise 2 - Using the 'DayCLI' template","text":"<p>In the previous exercise we used the dataset you created with Data-type='weather/surface-weather-observations/synop', which has pre-configured the CSV to BUFR conversion template to the AWS template.</p> <p>In the next exercise we will use the 'DayCLI' template to convert daily climate data to BUFR.</p> <p>The description of the DAYCLI template can be found here.</p> <p>About the DAYCLI template</p> <p>Please note that the DAYCLI BUFR sequence will be updated during 2025 to include additional information and revised QC flags. The DAYCLI template included the wis2box will be updated to reflect these changes. WMO will communicate when the wis2box-software is updated to include the new DAYCLI template, to allow users to update their systems accordingly.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#creating-a-wis2box-dataset-of-publishing-daycli-messages","title":"Creating a wis2box dataset of publishing DAYCLI messages","text":"<p>Go to the dataset editor in the wis2box-webapp and create a new dataset. Use the same centre-id as in the previous practical sessions and select Data Type='climate/surface-based-observations/daily':</p> <p></p> <p>Click \"CONTINUE TO FORM\" and add a description for your dataset, set the bounding box and provide the contact information for the dataset. Once you are done filling out all the sections, click 'VALIDATE FORM' and check the form.</p> <p>Review the data-plugins for the datasets. Click on \"UPDATE\" next to the plugin with name \"CSV data converted to BUFR\" and you will see the template is set to DayCLI:</p> <p></p> <p>Close the plugin configuration and submit the form using the authentication token you created in the previous practical session.</p> <p>You should know have a second dataset in the wis2box-webapp that is configured to use the DAYCLI template for converting CSV data to BUFR.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#review-the-daycli-example-input-data","title":"Review the daycli-example input data","text":"<p>Download the example for this exercise from the link below:</p> <p>daycli-example.csv</p> <p>Open the file you downloaded in an editor and inspect the content:</p> <p>Question</p> <p>What additional variables are included in the daycli template?</p> Click to reveal answer <p>The daycli template includes important metadata on the instrument siting and measurement quality classifications for temperature and humidity, quality control flags and information on how the daily average temperature has been calculated.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#update-the-example-file_1","title":"Update the example file","text":"<p>The example file contains one row of data for each day in a month, and reports data for one station. Update the example file you downloaded to use today's date and time and change the WIGOS station identifiers to use a station you have registered in the wis2box-webapp.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#upload-the-data-to-minio-and-check-the-result_1","title":"Upload the data to MinIO and check the result","text":"<p>As before, you will need to upload the data to the 'wis2box-incoming' bucket in MinIO to be processed by the csv2bufr converter. This time you will need to create a new folder in the MinIO bucket that matches the dataset-id for the dataset you created with the template='climate/surface-based-observations/daily' which will be different from the dataset-id you used in the previous exercise:</p> <p></p> <p>After uploading the data check there are no WARNINGS or ERRORS in the Grafana dashboard and check the MQTT Explorer to see if you receive WIS2 data-notifications.</p> <p>If you successfully ingested the data you should see 30 notifications in MQTT explorer on the topic <code>origin/a/wis2/&lt;centre-id&gt;/data/climate/surface-based-observations/daily</code> for the 30 days in the month you reported data for:</p> <p></p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#exercise-3-using-the-csv-form-in-wis2box-webapp-optional","title":"Exercise 3 - using the CSV-form in wis2box-webapp (optional)","text":"<p>The wis2box web-application provides an interface for uploading CSV data and converting it to BUFR before publishing it to the WIS2, using the AWS template.</p> <p>The use of this form is intended for debugging and validation purposes, the recommended submission method for publishing data from Automated Weather Stations is to a setup a process that automatically uploads the data to the MinIO bucket.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#using-the-csv-form-in-the-wis2box-web-application","title":"Using the CSV Form in the wis2box web-application","text":"<p>Navigate to CSV Form on the the wis2box web-application  (<code>http://&lt;your-host-name&gt;/wis2box-webapp/csv2bufr_form</code>). Use the file aws-example.csv for this exercise. You should now be able to click next to preview and validate the file.</p> <p></p> <p>Clicking the next button loads the file into the browser and validates the contents against a predefined schema.  No data has yet been converted or published.  On the preview / validate tab you should be presented with a list of warnings  about missing data but in this exercise these can be ignored. </p> <p></p> <p>Click next to proceed and you will be asked to provide a dataset-id for the data to be published. Select the dataset-id you create previously and click next.</p> <p>You should now be on an authorization page where you will be asked to enter the <code>processes/wis2box</code>  token you have previously created. Enter this token and click the \"Publish on WIS2\" toggle to ensure  \"Publish to WIS2\" is selected (see screenshot below).</p> <p></p> <p>Click next to transform to BUFR and publish, you should then see the following screen:</p> <p></p> <p>Clicking the down arrow tn the right of  <code>Output BUFR files</code> should reveal the <code>Download</code> and <code>Inspect</code> buttons. Click inspect to view the data and confirm the values are as expected.</p> <p></p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#debugging-invalid-input-data","title":"Debugging invalid input data","text":"<p>In this exercise we will examine what happens with invalid input data. Download the next example file by clicking the  link below. This contains the same data as the first file but with the empty columns removed. Examine the file and confirm which columns have been removed and then follow the same process to convert the data to BUFR.</p> <p>csv2bufr-ex3a.csv</p> <p>Question</p> <p>With the columns missing from the file were you able to convert the data to BUFR? Did you notice any change to the warnings on the validation page?</p> Click to reveal answer <p>You should have still been able to convert the data to BUFR but the warning messages will have been updated to indicate that the columns were missing completely rather than containing a missing value.</p> <p>In this next example an additional column has been added to the CSV file.</p> <p>csv2bufr-ex3b.csv</p> <p>Question</p> <p>Without uploading or submitting the file can you predict what will happen when you do?</p> <p>Now upload and confirm whether your prediction was correct.</p> Click to reveal answer <p>When the file is validated you should now receive a warning that the column <code>index</code> is not found in the schema and that the data will be skipped. You should be able to click through and convert to BUFR as with the previous example.</p> <p>In the final example in this exercise the data has been modified. Examine the contents of the CSV file.</p> <p>csv2bufr-ex3c.csv</p> <p>Question</p> <p>What has changed in the file and what do you think will happen?</p> <p>Now upload the file and confirm whether you were correct.</p> Click to real answer <p>The pressure fields have been converted from Pa to hPa in the input data. However, the CSV to BUFR converter expects the same units as BUFR (Pa) and, as a result, these fields fail the validation due to being out of range. You should be able to edit the CSV to correct the issue and to resubmit the data by returning to the first screen and re-uploading.</p> <p>Hint</p> <p>The wis2box web-application can be used to test and validate sample data for the automated workflow. This will identify some common issues, such as the incorrect units (hPa vs Pa and C vs K) and missing columns. Care should be taken  that the units in the CSV data match those indicated above.</p>"},{"location":"practical-sessions/converting-csv-data-to-bufr/#conclusion","title":"Conclusion","text":"<p>Congratulations</p> <p>In this practical session you have learned:</p> <ul> <li>about the csv2bufr converter in the wis2box</li> <li>how to use the AWS and DAYCLI templates to convert CSV data to BUFR</li> <li>and how to validate a sample CSV file using the csv2bufr form in the wis2box web-application</li> </ul> <p>Next steps</p> <p>The csv2bufr converter used in the wis2box has been designed to be configurable for use with any row based  tabular data. The column names, delimiters, quotation style and limited quality control can all be configured according to user needs. In this session you have used the built-in AWS and daycli templates but you can develop your own templates for other data types as required.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/","title":"Converting SYNOP data to BUFR using the wis2box-webapp","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>submit valid FM-12 SYNOP bulletins via the wis2box web application for conversion to BUFR and exchange over the WIS2.0</li> <li>validate, diagnose and fix simple coding errors in an FM-12 SYNOP bulletin prior to format conversion and exchange</li> <li>ensure that the required station metadata is available in the wis2box</li> <li>confirm and inspect successfully converted bulletins</li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#introduction","title":"Introduction","text":"<p>To allow manual observers to submit data directly to the WIS2.0, the wis2box-webapp has a form for converting FM-12 SYNOP bulletins to BUFR. The form also allows users to diagnose and fix simple coding errors in the FM-12 SYNOP bulletin prior to format conversion and exchange and inspect the resulting BUFR data.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#preparation","title":"Preparation","text":"<p>Prerequisites</p> <ul> <li>Ensure that your wis2box has been configured and started.</li> <li>Open a terminal and connect to your student VM using SSH.</li> <li>Connect to the MQTT broker of your wis2box instance using MQTT Explorer.</li> <li>Open the wis2box web application (<code>http://&lt;your-host-name&gt;/wis2box-webapp</code>) and ensure you are logged in.</li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#using-the-wis2box-webapp-to-convert-fm-12-synop-to-bufr","title":"Using the wis2box-webapp to convert FM-12 SYNOP to BUFR","text":""},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#exercise-1-using-the-wis2box-webapp-to-convert-fm-12-synop-to-bufr","title":"Exercise 1 - using the wis2box-webapp to convert FM-12 SYNOP to BUFR","text":"<p>Make sure you have the auth token for \"processes/wis2box\" that you generated in the previous exercise and that you are connected to your wis2box broker in MQTT Explorer.</p> <p>Copy the following message:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n</code></pre> <p>Open the wis2box web application and navigate to the synop2bufr page using the left navigation drawer and proceed as follows:</p> <ul> <li>Paste the content you have copied in the text entry box.</li> <li>Select the month and year using the date picker, assume the current month for this exercise.</li> <li>Select a topic from the drop down menu (the options are based on the datasets configured in the wis2box).</li> <li>Enter the \"processes/wis2box\" auth token you generated earlier</li> <li>Ensure \"Publish on WIS2\" is toggled ON</li> <li>Click \"SUBMIT\"</li> </ul> <p></p> <p>Click submit. You will receive an warning message as the station is not registered in the wis2box. Go to the station-editor and import the following station:</p> <pre><code>0-20000-0-15015\n</code></pre> <p>Ensure the station is associated with the topic you selected in the previous step and then return to the synop2bufr page and repeat the process with the same data as before. </p> <p>Question</p> <p>How can you see the result of the conversion from FM-12 SYNOP to BUFR?</p> Click to reveal answer <p>The result section of the page shows Warnings, Errors and Output BUFR files.</p> <p>Click on \"Output BUFR files\" to see a list of the files that have been generated. You should see one file listed.</p> <p>The download button allows the BUFR data to be downloaded directly to your computer.</p> <p>The inspect button runs a process to convert and extract the data from BUFR.</p> <p></p> <p>Question</p> <p>The FM-12 SYNOP input data did not include the station location, elevation or barometer height.  Confirm that these are in the output BUFR data, where do these come from?</p> Click to reveal answer <p>Clicking the inspect button should bring up a dialog like that shown below.</p> <p></p> <p>This includes the station location shown on a map and basic metadata, as well as the observations in the message.</p> <p>As part of the transformation from FM-12 SYNOP to BUFR, additional metadata was added to the BUFR file.</p> <p>The BUFR file can also be inspected by downloading the file and validating using a tool such as as the ECMWF ecCodes BUFR validator.</p> <p>Go to MQTT Explorer and check the WIS2 notifications topic to see the WIS2 notifications that have been published.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#exercise-2-understanding-the-station-list","title":"Exercise 2 - understanding the station list","text":"<p>For this next exercise you will convert a file containing multiple reports, see the data below:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>Based on the prior exercise, look at the FM-12 SYNOP message and predict how many output BUFR messages will be generated. </p> <p>Now copy paste this message into SYNOP form and submit the data.</p> <p>Did the number of messages generated match your expectation and if not, why not?</p> Click to reveal answer <p>You might have expected three BUFR messages to be generated, one for each weather report. However, instead you got 2 warnings and only one BUFR file.</p> <p>In order for a weather report to be converted to BUFR the basic metadata contained in the  station list is required. Whilst the above example includes three weather reports, two of the three stations reporting were not registered in your wis2box. </p> <p>As a result, only one of the three weather report resulted in a BUFR file being generated and WIS2 notification being published. The other two weather reports were ignored and warnings were generated.</p> <p>Hint</p> <p>Take note of the relationship between the WIGOS Identifier and the traditional station  identifier included in the BUFR output. In many cases, for stations listed in WMO-No. 9 Volume A at the time of migrating to WIGOS station identifiers, the WIGOS station identifier is given by the traditional station identifier with <code>0-20000-0</code> prepended, e.g. <code>15015</code> has become <code>0-20000-0-15015</code>.</p> <p>Using the station list page, import the following stations:</p> <pre><code>0-20000-0-15020\n0-20000-0-15090\n</code></pre> <p>Ensure that the stations are associated with the topic you selected in the previous exercise and then return to the synop2bufr page and repeat the process.</p> <p>Three BUFR files should now be generated and there should be no warnings or errors listed in the web application. </p> <p>In addition to the basic station information, additional metadata such as the station elevation above sea level and the barometer height above sea level are required for encoding to BUFR. The fields are included in the station list and station editor pages.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#exercise-3-debugging","title":"Exercise 3 - debugging","text":"<p>In this final exercise you will identify and correct two of the most common problems encountered when using this tool to convert FM-12 SYNOP to BUFR. </p> <p>Example data is shown in the box below, examine the data and try and resolve any issues that there  may be prior to submitting the data through the web application. </p> <p>Hint</p> <p>You can edit the data in the entry box on the web application page. If you miss any issues  these should be detected and highlighted as a warning or error once the submit button  has been clicked.</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>What issues did you expect to encounter when converting the data to BUFR and how did you overcome them? Where there any issues you were not expecting?</p> Click to reveal answer <p>In this first example the \"end of text\" symbol (=), or record delimiter, is missing between the first and second weather reports. Consequently, lines 2 and 3 are treated as a single report,  leading to errors in the parsing of the message.</p> <p>The second example below contains several common issues found in FM-12 SYNOP reports. Examine the data and try to identify the issues and then submit the corrected data through the web application.</p> <pre><code>AAXX 27031\n15020 02997 23104 10/30 21075 30177 40377 580200 60001 81041=\n</code></pre> <p>Question</p> <p>What issues did you find and how did you resolve these?</p> Click to reveal answer <p>There are two issues in the weather report. </p> <p>The first, in the signed air temperature group, has the tens character set to missing (/),  leading to an invalid group. In this example we know that the temperature is 13.0 degrees  Celsius (from the above examples) and so this issue can be corrected. Operationally, the  correct value would need to be confirmed with the observer.</p> <p>The second issue occurs in group 5 where there is an additional character, with the final  character duplicated. This issue can be fixed by removing the extra character.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#housekeeping","title":"Housekeeping","text":"<p>During the exercises in this session you will have imported several files into your station list. Navigate to the  station list page and click the trash can icons to delete the stations. You may need to refresh the page to have the stations removed from the list after deleting.</p> <p></p>"},{"location":"practical-sessions/converting-synop-data-to-bufr-form/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned:</p> <ul> <li>how the synop2bufr tool can be used to convert FM-12 SYNOP reports to BUFR;</li> <li>how to submit a FM-12 SYNOP report through the web-app;</li> <li>how to diagnose and correct simple errors in an FM-12 SYNOP report;</li> <li>the importance of registering stations in the wis2box (and OSCAR/Surface);</li> <li>and the use of the inspect button to view the content of BUFR data.</li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr/","title":"Converting SYNOP data to BUFR from the command line","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>use the synop2bufr tool to convert FM-12 SYNOP reports to BUFR;</li> <li>diagnose and fix simple coding errors in FM-12 SYNOP reports prior to format conversion;</li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#introduction","title":"Introduction","text":"<p>Surface weather reports from land surface stations have historically been reported hourly or at the main  (00, 06, 12 and 18 UTC) and intermediate (03, 09, 15, 21 UTC) synoptic hours. Prior to the migration to BUFR these reports were encoded in the plain text FM-12 SYNOP code form. Whilst the migration to BUFR was scheduled to be complete by 2012 a large number of reports are still exchanged in the legacy  FM-12 SYNOP format. Further information on the FM-12 SYNOP format can be found in the WMO Manual on Codes,  Volume I.1 (WMO-No. 306, Volume I.1).</p> <p>WMO Manual on Codes, Volume I.1</p> <p>To aid with completing migration to BUFR some tools have been developed for encoding FM-12 SYNOP reports to BUFR, in this session you will learn how to use these tools as well as the relationship between the information contained in the FM-12 SYNOP reports and BUFR messages.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#preparation","title":"Preparation","text":"<p>Prerequisites</p> <ul> <li>Ensure that your wis2box has been configured and started.</li> <li>Confirm the status by visiting the wis2box API (<code>http://&lt;your-host-name&gt;/oapi</code>) and verifying that the API is running.</li> <li>Make sure to read the synop2bufr primer and ecCodes primer sections before starting the exercises.</li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#synop2bufr-primer","title":"synop2bufr primer","text":"<p>Below are essential <code>synop2bufr</code> commands and configurations:</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#transform","title":"transform","text":"<p>The <code>transform</code> function converts a SYNOP message to BUFR:</p> <pre><code>synop2bufr data transform --metadata my_file.csv --output-dir ./my_directory --year message_year --month message_month my_SYNOP.txt\n</code></pre> <p>Note that if the metadata, output directory, year and month options are not specified, they will assume their default values:</p> Option Default --metadata station_list.csv --output-dir The current working directory. --year The current year. --month The current month. <p>Note</p> <p>One must be cautious using the default year and month, as the day of the month specified in the report may not correspond (e.g. June does not have 31 days).</p> <p>In the examples, the year and month are not given, so feel free to specify a date yourself or use the default values.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#eccodes-primer","title":"ecCodes primer","text":"<p>ecCodes provides both command line tools and can be embedded in your own applications.  Below are some useful command line utilities to work with BUFR data.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#bufr_dump","title":"bufr_dump","text":"<p>The <code>bufr_dump</code> command is a generic BUFR information tool.  It has many options, but the following will be the most applicable to the exercises:</p> <pre><code>bufr_dump -p my_bufr.bufr4\n</code></pre> <p>This will display BUFR content to your screen.  If you are interested in the values taken by a variable in particular, use the <code>egrep</code> command:</p> <pre><code>bufr_dump -p my_bufr.bufr4 | egrep -i temperature\n</code></pre> <p>This will display variables related to temperature in your BUFR data. If you want to do this for multiple types of variables, filter the output using a pipe (<code>|</code>):</p> <pre><code>bufr_dump -p my_bufr.bufr4 | egrep -i 'temperature|wind'\n</code></pre>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#converting-fm-12-synop-to-bufr-using-synop2bufr-from-the-command-line","title":"Converting FM-12 SYNOP to BUFR using synop2bufr from the command line","text":"<p>The eccodes library and synop2bufr module are installed in the wis2box-api container. In order to do the next few exercises we will copy the synop2bufr-exercises directory to the wis2box-api container and run the exercises from there.</p> <pre><code>docker cp ~/exercise-materials/synop2bufr-exercises wis2box-api:/root\n</code></pre> <p>Now we can enter the container and run the exercises:</p> <pre><code>docker exec -it wis2box-api /bin/bash\n</code></pre>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#exercise-1","title":"Exercise 1","text":"<p>Navigate to the <code>/root/synop2bufr-exercises/ex_1</code> directory and inspect the SYNOP message file message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_1\nmore message.txt\n</code></pre> <p>Question</p> <p>How many SYNOP reports are in this file?</p> Click to reveal answer <p>There is 1 SYNOP report, as there is only 1 delimiter (=) at the end of the message.</p> <p>Inspect the station list:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>How many stations are listed in the station list?</p> Click to reveal answer <p>There is 1 station, the station_list.csv contains one row of station metadata.</p> <p>Question</p> <p>Try to convert <code>message.txt</code> to BUFR format.</p> Click to reveal answer <p>To convert the SYNOP message to BUFR format, use the following command:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Tip</p> <p>See the synop2bufr primer section.</p> <p>Inspect the resulting BUFR data using <code>bufr_dump</code>.</p> <p>Question</p> <p>Find how to compare the latitude and longitude values to those in the station list.</p> Click to reveal answer <p>To compare the latitude and longitude values in the BUFR data to those in the station list, use the following command:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'latitude|longitude'\n</code></pre> <p>This will display the latitude and longitude values in the BUFR data.</p> <p>Tip</p> <p>See the ecCodes primer section.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#exercise-2","title":"Exercise 2","text":"<p>Navigate to the <code>exercise-materials/synop2bufr-exercises/ex_2</code> directory and inspect the SYNOP message file message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_2\nmore message.txt\n</code></pre> <p>Question</p> <p>How many SYNOP reports are in this file?</p> Click to reveal answer <p>There are 3 SYNOP reports, as there are 3 delimiters (=) at the end of the message.</p> <p>Inspect the station list:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>How many stations are listed in the station list?</p> Click to reveal answer <p>There are 3 stations, the station_list.csv contains three rows of station metadata.</p> <p>Question</p> <p>Convert <code>message.txt</code> to BUFR format.</p> Click to reveal answer <p>To convert the SYNOP message to BUFR format, use the following command:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Question</p> <p>Based on the results of the exercises in this and the previous exercise, how would you predict the number of resulting BUFR files based upon the number of SYNOP reports and stations listed in the station metadata file?</p> Click to reveal answer <p>To see the produced BUFR-files run the following command:</p> <pre><code>ls -l *.bufr4\n</code></pre> <p>The number of BUFR files produced will be equal to the number of SYNOP reports in the message file.</p> <p>Inspect the resulting BUFR data using <code>bufr_dump</code>.</p> <p>Question</p> <p>How can you check the WIGOS Station ID encoded inside the BUFR data of each file produced?</p> Click to reveal answer <p>This can be done using the following commands:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15020_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15090_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <p>Note that if you have a directory with just these 3 BUFR files, you can use Linux wildcards as follows:</p> <pre><code>bufr_dump -p *.bufr4 | egrep -i 'wigos'\n</code></pre>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#exercise-3","title":"Exercise 3","text":"<p>Navigate to the <code>exercise-materials/synop2bufr-exercises/ex_3</code> directory and inspect the SYNOP message file message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_3\nmore message.txt\n</code></pre> <p>This SYNOP message only contains one longer report with more sections.</p> <p>Inspect the station list:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Is it problematic that this file contains more stations than there are reports in the SYNOP message?</p> Click to reveal answer <p>No, this is not a problem provided that there exists a row in the station list file with a station TSI matching that of the SYNOP report we are trying to convert.</p> <p>Note</p> <p>The station list file is a source of metadata for <code>synop2bufr</code> to provide the information missing in the alphanumeric SYNOP report and required in the BUFR SYNOP.</p> <p>Question</p> <p>Convert <code>message.txt</code> to BUFR format.</p> Click to reveal answer <p>This is done using the <code>transform</code> command, for example:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Inspect the resulting BUFR data using <code>bufr_dump</code>.</p> <p>Question</p> <p>Find the following variables:</p> <ul> <li>Air temperature (K) of the report</li> <li>Total cloud cover (%) of the report</li> <li>Total period of sunshine (mins) of the report</li> <li>Wind speed (m/s) of the report</li> </ul> Click to reveal answer <p>To find the variables by keyword in the BUFR data, you can use the following commands:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature'\n</code></pre> <p>You can use the following command to search for multiple keywords:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature|cover|sunshine|wind'\n</code></pre> <p>Tip</p> <p>You may find the last command of the ecCodes primer section useful.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#exercise-4","title":"Exercise 4","text":"<p>Navigate to the <code>exercise-materials/synop2bufr-exercises/ex_4</code> directory and inspect the SYNOP message file message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_4\nmore message_incorrect.txt\n</code></pre> <p>Question</p> <p>What is incorrect about this SYNOP file?</p> Click to reveal answer <p>The SYNOP report for 15015 is missing the delimiter (<code>=</code>) that allows <code>synop2bufr</code> to distinguish this report from the next.</p> <p>Attempt to convert <code>message_incorrect.txt</code> using <code>station_list.csv</code></p> <p>Question</p> <p>What problem(s) did you encounter with this conversion?</p> Click to reveal answer <p>To convert the SYNOP message to BUFR format, use the following command:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message_incorrect.txt\n</code></pre> <p>Attempting to convert should raise the following errors:</p> <ul> <li><code>[ERROR] Unable to decode the SYNOP message</code></li> <li><code>[ERROR] Error parsing SYNOP report: AAXX 21121 15015 02999 02501 10103 21090 39765 42952 57020 60001 15020 02997 23104 10130 21075 30177 40377 58020 60001 81041. 10130 is not a valid group!</code></li> </ul>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#exercise-5","title":"Exercise 5","text":"<p>Navigate to the <code>exercise-materials/synop2bufr-exercises/ex_5</code> directory and inspect the SYNOP message file message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_5\nmore message.txt\n</code></pre> <p>Attempt to convert <code>message.txt</code> to BUFR format using <code>station_list_incorrect.csv</code> </p> <p>Question</p> <p>What problem(s) did you encounter with this conversion? Considering the error presented, justify the number of BUFR files produced.</p> Click to reveal answer <p>To convert the SYNOP message to BUFR format, use the following command:</p> <pre><code>synop2bufr data transform --metadata station_list_incorrect.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>One of the station TSIs (<code>15015</code>) has no corresponding metadata in the station-list, which will prohibit synop2bufr from accessing additional necessary metadata to convert the first SYNOP report to BUFR.</p> <p>You will see the following warning:</p> <ul> <li><code>[WARNING] Station 15015 not found in station file</code></li> </ul> <p>You can see the number of BUFR files produced by running the following command:</p> <pre><code>ls -l *.bufr4\n</code></pre> <p>There are 3 SYNOP reports in message.txt but only 2 BUFR files have been produced. This is because one of the SYNOP reports lacked the necessary metadata as mentioned above.</p>"},{"location":"practical-sessions/converting-synop-data-to-bufr/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned:</p> <ul> <li>how the synop2bufr tool can be used to convert FM-12 SYNOP reports to BUFR;</li> <li>how to diagnose and fix simple coding errors in FM-12 SYNOP reports prior to format conversion;</li> </ul>"},{"location":"practical-sessions/datasets-with-access-control/","title":"Setting up a recommended dataset with access control","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>create a new dataset with data policy 'recommended'</li> <li>add an access token to the dataset</li> <li>validate the dataset can not be accessed without the access token</li> <li>add the access token to HTTP headers to access the dataset</li> </ul>"},{"location":"practical-sessions/datasets-with-access-control/#introduction","title":"Introduction","text":"<p>Datasets that are not considered 'core' dataset in WMO can optionally be configured with an access control policy. wis2box provides a mechanism to add an access token to a dataset which will prevent users from downloading data unless they supply the access token in the HTTP headers.</p>"},{"location":"practical-sessions/datasets-with-access-control/#preparation","title":"Preparation","text":"<p>Ensure you have SSH access to your student VM and that your wis2box instance is up and running.</p> <p>Make sure you are connected to the MQTT broker of your wis2box instance using MQTT Explorer. You can use the public credentials <code>everyone/everyone</code> to connect to the broker.</p> <p>Ensure you have a web browser open with the wis2box-webapp for your instance by going to <code>http://&lt;your-host&gt;/wis2box-webapp</code>.</p>"},{"location":"practical-sessions/datasets-with-access-control/#exercise-1-create-a-new-dataset-with-data-policy-recommended","title":"Exercise 1: create a new dataset with data policy 'recommended'","text":"<p>Go to the 'dataset editor' page in the wis2box-webapp and create a new dataset. Use the same centre-id as in the previous practical sessions and use the template='surface-weather-observations/synop'. </p> <p>Click 'OK' to proceed.</p> <p>In the dataset editor, set the data policy to 'recommended' (note that changing the data-policy will update the 'Topic Hierarchy'). Replace the auto-generated 'Local ID' with a descriptive name for the dataset, e.g. 'recommended-data-with-access-control':</p> <p></p> <p>Continue to fill the required fields for Spatial Properties and Contact Information, and 'Validate form' to check for any errors.</p> <p>Finally submit the dataset, using the previously create authentication token, and check that the new dataset is created in the wis2box-webapp.</p> <p>Check MQTT-explorer to see that you receive the WIS2 Notification Message announcing the new Discovery Metadata record on the topic <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code>.  </p>"},{"location":"practical-sessions/datasets-with-access-control/#exercise-2-add-an-access-token-to-the-dataset","title":"Exercise 2: add an access token to the dataset","text":"<p>Login to the wis2box-management container,</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>From command line inside the container you can secure a dataset using the <code>wis2box auth add-token</code> command, using the flag <code>--metadata-id</code> to specify the metadata-identifier of the dataset and the access token as an argument.</p> <p>For example, to add the access token <code>S3cr3tT0k3n</code> to the dataset with metadata-identifier <code>urn:wmo:md:not-my-centre:core.surface-based-observations.synop</code>:    </p> <pre><code>wis2box auth add-token --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop S3cr3tT0k3n\n</code></pre> <p>Exit the wis2box-management container:</p> <pre><code>exit\n</code></pre>"},{"location":"practical-sessions/datasets-with-access-control/#exercise-3-publish-some-data-to-the-dataset","title":"Exercise 3: publish some data to the dataset","text":"<p>Copy the file <code>exercise-materials/access-control-exercises/aws-example2.csv</code> to the directory defined by <code>WIS2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code>:</p> <pre><code>cp ~/exercise-materials/access-control-exercises/aws-example2.csv ~/wis2box-data\n</code></pre> <p>Then use WinSCP or a command line editor to edit the file <code>aws-example2.csv</code> and update the WIGOS-station-identifiers in the input-data to match the stations you have in your wis2box instance. </p> <p>Next, go to the station-editor in the wis2box-webapp. For each station you used in <code>aws-example2.csv</code>, update the 'topic' field to match the 'topic' of the dataset you created in the previous exercise.</p> <p>This station will now be associated to 2 topics, one for the 'core' dataset and one for the 'recommended' dataset:</p> <p></p> <p>You will need to use your token for <code>collections/stations</code> to save the updated station data.</p> <p>Next, login to the wis2box-management container:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>From the wis2box command line we can ingest the sample data file <code>aws-example2.csv</code> into a specific dataset as follows:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example2.csv --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop\n</code></pre> <p>Make sure to provide the correct metadata-identifier for your dataset and check that you receive WIS2 data-notifications in MQTT Explorer, on the topic <code>origin/a/wis2/&lt;your-centre-id&gt;/data/recommended/surface-based-observations/synop</code>.</p> <p>Check the canonical link in the WIS2 Notification Message and copy/paste the link to the browser to try and download the data.</p> <p>You should see a 403 Forbidden error.</p>"},{"location":"practical-sessions/datasets-with-access-control/#exercise-4-add-the-access-token-to-http-headers-to-access-the-dataset","title":"Exercise 4: add the access token to HTTP headers to access the dataset","text":"<p>In order to demonstrate that the access token is required to access the dataset we will reproduce the error you saw in the browser using the command line function <code>wget</code>.</p> <p>From the command line in your student VM, use the <code>wget</code> command with the canonical-link you copied from the WIS2 Notification Message.</p> <pre><code>wget &lt;canonical-link&gt;\n</code></pre> <p>You should see that the HTTP request returns with 401 Unauthorized and the data is not downloaded.</p> <p>Now add the access token to the HTTP headers to access the dataset.</p> <pre><code>wget --header=\"Authorization: Bearer S3cr3tT0k3n\" &lt;canonical-link&gt;\n</code></pre> <p>Now the data should be downloaded successfully.</p>"},{"location":"practical-sessions/datasets-with-access-control/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>create a new dataset with data policy 'recommended'</li> <li>add an access token to the dataset</li> <li>validate the dataset can not be accessed without the access token</li> <li>add the access token to HTTP headers to access the dataset</li> </ul>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/","title":"Discovering datasets from the WIS2 Global Discovery Catalogue","text":"<p>Learning outcomes!</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>use pywiscat to discover datasets from the Global Discovery Catalogue (GDC)</li> </ul>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/#introduction","title":"Introduction","text":"<p>In this session you will learn how to discover data from the WIS2 Global Discovery Catalogue (GDC).</p> <p>At the moment, the following GDCs are available:</p> <ul> <li>Environment and Climate Change Canada, Meteorological Service of Canada: https://wis2-gdc.weather.gc.ca</li> <li>China Meteorological Administration: https://gdc.wis.cma.cn/api</li> <li>Deutscher Wetterdienst: https://wis2.dwd.de/gdc</li> </ul> <p>During local training sessions, a local GDC is set up to allow participants to query the GDC for the metadata they published from their wis2box-instances. In this case the trainers will provide the URL to the local GDC.</p>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/#preparation","title":"Preparation","text":"<p>Note</p> <p>Before starting please login to your student VM.</p>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/#installing-pywiscat","title":"Installing pywiscat","text":"<p>Use the <code>pip3</code> Python package installer to install pywiscat on your VM: <pre><code>pip3 install pywiscat\n</code></pre></p> <p>Note</p> <p>If you encounter the following error:</p> <pre><code>WARNING: The script pywiscat is installed in '/home/username/.local/bin' which is not on PATH.\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n</code></pre> <p>Then run the following command:</p> <pre><code>export PATH=$PATH:/home/$USER/.local/bin\n</code></pre> <p>...where <code>$USER</code> is your username on your VM.</p> <p>Verify that the installation was successful:</p> <pre><code>pywiscat --version\n</code></pre>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/#finding-data-with-pywiscat","title":"Finding data with pywiscat","text":"<p>By default, pywiscat connects to Canada's Global Discovery Catalogue.  Let's configure pywiscat to query the training GDC by setting the <code>PYWISCAT_GDC_URL</code> environment variable:</p> <pre><code>export PYWISCAT_GDC_URL=http://&lt;local-gdc-host-or-ip&gt;\n</code></pre> <p>Let's use pywiscat to query the GDC setup as part of the training.</p> <pre><code>pywiscat search --help\n</code></pre> <p>Now search the GDC for all records:</p> <pre><code>pywiscat search\n</code></pre> <p>Question</p> <p>How many records are returned from the search?</p> Click to reveal answer <p>The number of records depends on the GDC you are querying. When using the local training GDC, you should see that the number of records is equal to the number of datasets that have been ingested into the GDC during the other practical sessions.</p> <p>Let's try querying the GDC with a keyword:</p> <pre><code>pywiscat search -q observations\n</code></pre> <p>Question</p> <p>What is the data policy of the results?</p> Click to reveal answer <p>All data returned should specify \"core\" data</p> <p>Try additional queries with <code>-q</code></p> <p>Tip</p> <p>The <code>-q</code> flag allows for the following syntax:</p> <ul> <li><code>-q synop</code>: find all records with the word \"synop\"</li> <li><code>-q temp</code>: find all records with the word \"temp\"</li> <li><code>-q \"observations AND fiji\"</code>: find all records with the words \"observations\" and \"fiji\"</li> <li><code>-q \"observations NOT fiji\"</code>: find all records that contain the word \"observations\" but not the word \"fiji\"</li> <li><code>-q \"synop OR temp\"</code>: find all records with both \"synop\" or \"temp\"</li> <li><code>-q \"obs~\"</code>: fuzzy search</li> </ul> <p>When searching for terms with spaces, enclose in double quotes.</p> <p>Let's get more details on a specific search result that we are interested in:</p> <pre><code>pywiscat get &lt;id&gt;\n</code></pre> <p>Tip</p> <p>Use the <code>id</code> value from the previous search.</p>"},{"location":"practical-sessions/discovering-datasets-from-wis2-gdc/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>use pywiscat to discover datasets from the WIS2 Global Discovery Catalogue</li> </ul>"},{"location":"practical-sessions/downloading-data-from-wis2/","title":"Downloading and decoding data from WIS2","text":"<p>Learning outcomes!</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>use the \"wis2downloader\" to subscribe to WIS2 data notifications and download data to your local system</li> <li>view the status of the downloads in the Grafana dashboard</li> <li>decode some downloaded data using the \"decode-bufr-jupyter\" container</li> </ul>"},{"location":"practical-sessions/downloading-data-from-wis2/#introduction","title":"Introduction","text":"<p>In this session you will learn how to setup a subscription to a WIS2 Broker and automatically download data to your local system using the \"wis2downloader\"-service included in the wis2box. </p> <p>About wis2downloader</p> <p>The wis2downloader is also available as a standalone service that can be run on a different system from the one that is publishing the WIS2 notifications. See wis2downloader for more information for using the wis2downloader as a standalone service.</p> <p>If you like to develop your own service for subscribing to WIS2 notifications and downloading data, you can use the wis2downloader source code as a reference.</p> <p>Other</p> <p>The following tools can also be used to discover and access data from WIS2:</p> <ul> <li>pywiscat provides search capability atop the WIS2 Global Discovery Catalogue in support of reporting and analysis of the WIS2 Catalogue and its associated discovery metadata</li> <li>pywis-pubsub provides subscription and download capability of WMO data from WIS2 infrastructure services</li> </ul>"},{"location":"practical-sessions/downloading-data-from-wis2/#preparation","title":"Preparation","text":"<p>Before starting please login to your student VM and ensure your wis2box instance is up and running.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-1-viewing-the-wis2download-dashboard-in-grafana","title":"Exercise 1: viewing the wis2download dashboard in Grafana","text":"<p>Open a web browser and navigate to the Grafana dashboard for your wis2box instance by going to <code>http://&lt;your-host&gt;:3000</code>.</p> <p>Click on dashboards in the left-hand menu, and then select the wis2downloader dashboard.</p> <p>You should see the following dashboard:</p> <p></p> <p>This dashboard is based on metrics published by the wis2downloader service and will show you the status of the downloads that are currently in progress.</p> <p>On the top left corner you can see the subscriptions that are currently active.</p> <p>Keep this dashboard open as you will use it to monitor the download progress in the next exercise.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-2-reviewing-the-wis2downloader-configuration","title":"Exercise 2: reviewing the wis2downloader configuration","text":"<p>The wis2downloader-service started by the wis2box-stack can be configured using the environment variables defined in your wis2box.env file.</p> <p>The following environment variables are used by the wis2downloader:</p> <pre><code>- DOWNLOAD_BROKER_HOST: The hostname of the MQTT broker to connect to. Defaults to globalbroker.meteo.fr\n- DOWNLOAD_BROKER_PORT: The port of the MQTT broker to connect to. Defaults to 443 (HTTPS for websockets)\n- DOWNLOAD_BROKER_USERNAME: The username to use to connect to the MQTT broker. Defaults to everyone\n- DOWNLOAD_BROKER_PASSWORD: The password to use to connect to the MQTT broker. Defaults to everyone\n- DOWNLOAD_BROKER_TRANSPORT: websockets or tcp, the transport-mechanism to use to connect to the MQTT broker. Defaults to websockets,\n- DOWNLOAD_RETENTION_PERIOD_HOURS: The retention period in hours for the downloaded data. Defaults to 24\n- DOWNLOAD_WORKERS: The number of download workers to use. Defaults to 8. Determines the number of parallel downloads.\n- DOWNLOAD_MIN_FREE_SPACE_GB: The minimum free space in GB to keep on the volume hosting the downloads. Defaults to 1.\n</code></pre> <p>To review the current configuration of the wis2downloader, you can use the following command:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep DOWNLOAD\n</code></pre> <p>Review the configuration of the wis2downloader</p> <p>What is the default MQTT broker that the wis2downloader connects to?</p> <p>What is the default retention period for the downloaded data?</p> Click to reveal answer <p>The default MQTT broker that the wis2downloader connects to is <code>globalbroker.meteo.fr</code>.</p> <p>The default retention period for the downloaded data is 24 hours.</p> <p>Updating the configuration of the wis2downloader</p> <p>To update the configuration of the wis2downloader, you can edit the wis2box.env file. To apply the changes you can re-run the start command for the wis2box-stack:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>And you will see the wis2downloader service restart with the new configuration.</p> <p>You can keep the default configuration for the purpose of this exercise.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-3-adding-subscriptions-to-the-wis2downloader","title":"Exercise 3: adding subscriptions to the wis2downloader","text":"<p>Inside the wis2downloader container, you can use the command line to list, add and delete subscriptions.</p> <p>To login to the wis2downloader container, use the following command:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>Then use the following command to list the subscriptions that are currently active:</p> <pre><code>wis2downloader list-subscriptions\n</code></pre> <p>This command returns an empty list since no subscriptions are currently active.</p> <p>For the purpose of this exercise, we will subscribe to the following topic <code>cache/a/wis2/de-dwd-gts-to-wis2/#</code>, to subscribe to data published by the DWD-hosted GTS-to-WIS2 gateway and downloading notifications from the Global Cache.</p> <p>To add this subscription, use the following command:</p> <pre><code>wis2downloader add-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>Then exit the wis2downloader container by typing <code>exit</code>:</p> <pre><code>exit\n</code></pre> <p>Check the wis2downloader dashboard in Grafana to see the new subscription added. Wait a few minutes and you should see the first downloads starting. Go to he next exercise once you have confirmed that the downloads are starting.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-4-viewing-the-downloaded-data","title":"Exercise 4: viewing the downloaded data","text":"<p>The wis2downloader-service in the wis2box-stack downloads the data in the 'downloads' directory in the directory you defined as the WIS2BOX_HOST_DATADIR in your wis2box.env file. To view the contents of the downloads directory, you can use the following command:</p> <pre><code>ls -R ~/wis2box-data/downloads\n</code></pre> <p>Note that the downloaded data is stored in directories named after the topic the WIS2 Notification was published on.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-5-removing-subscriptions-from-the-wis2downloader","title":"Exercise 5: removing subscriptions from the wis2downloader","text":"<p>Next, log back in to the wis2downloader container:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>and remove the subscription you made from the wis2downloader, using the following command:</p> <pre><code>wis2downloader remove-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>And exit the wis2downloader container by typing <code>exit</code>:</p> <pre><code>exit\n</code></pre> <p>Check the wis2downloader dashboard in Grafana to see the subscription removed. You should see the downloads stopping.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-6-subscribe-to-the-wis2training-broker-and-setup-a-new-subscription","title":"Exercise 6: subscribe to the wis2training-broker and setup a new subscription","text":"<p>For the next exercise we will subscribe to the wis2training-broker.</p> <p>This demonstrates how to subscribe to a broker that is not the default broker and will allow you to download some data published from the WIS2 Training Broker.</p> <p>Edit the wis2box.env file and change the DOWNLOAD_BROKER_HOST to <code>wis2training-broker.wis2dev.io</code>, change DOWNLOAD_BROKER_PORT to <code>1883</code> and change DOWNLOAD_BROKER_TRANSPORT to <code>tcp</code>:</p> <pre><code># downloader settings\nDOWNLOAD_BROKER_HOST=wis2training-broker.wis2dev.io\nDOWNLOAD_BROKER_PORT=1883\nDOWNLOAD_BROKER_USERNAME=everyone\nDOWNLOAD_BROKER_PASSWORD=everyone\n# download transport mechanism (tcp or websockets)\nDOWNLOAD_BROKER_TRANSPORT=tcp\n</code></pre> <p>Then restart the wis2box-stack to apply the changes:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>Check the logs of the wis2downloader to see if the connection to the new broker was successful:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>You should see the following log message:</p> <pre><code>...\nINFO - Connecting...\nINFO - Host: wis2training-broker.wis2dev.io, port: 1883\nINFO - Connected successfully\n</code></pre> <p>Now we will setup a new subscription to the topic to downloaded cyclone-track data from the WIS2 Training Broker.</p> <p>Login to the wis2downloader container:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>And execute the following command (copy-paste this to avoid typo's):</p> <pre><code>wis2downloader add-subscription --topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n</code></pre> <p>Exit the wis2downloader container by typing <code>exit</code>.</p> <p>Wait until you see the downloads starting in the wis2downloader dashboard in Grafana.</p> <p>Downloading data from the WIS2 Training Broker</p> <p>The WIS2 Training Broker is a test broker that is used for training purposes and may not publish data all the time.</p> <p>During the in-person training sessions, the local trainer will ensure the WIS2 Training Broker will publish data for you to download.</p> <p>If you are doing this exercise outside of a training session, you may not see any data being downloaded.</p> <p>Check that the data was downloaded by checking the wis2downloader logs again with:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>You should see a log message similar to the following:</p> <pre><code>[...] INFO - Message received under topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n[...] INFO - Downloaded A_JSXX05ECEP020000_C_ECMP_...\n</code></pre>"},{"location":"practical-sessions/downloading-data-from-wis2/#exercise-7-decoding-the-downloaded-data","title":"Exercise 7: decoding the downloaded data","text":"<p>In order to demonstrate how you can decode the downloaded data, we will start a new container using 'decode-bufr-jupyter' image.</p> <p>This container will be start Jupyter notebook server on your instance which includes the \"ecCodes\" library that you can use to decode BUFR data.</p> <p>We will use the example notebooks included in <code>~/exercise-materials/notebook-examples</code> to decode the downloaded data for the cyclone tracks.</p> <p>To start the container, use the following command:</p> <pre><code>docker run -d --name decode-bufr-jupyter \\\n    -v ~/wis2box-data/downloads:/root/downloads \\\n    -p 8888:8888 \\\n    -e JUPYTER_TOKEN=dataismagic! \\\n    mlimper/decode-bufr-jupyter\n</code></pre> <p>About the decode-bufr-jupyter container</p> <p>The <code>decode-bufr-jupyter</code> container is a custom container that includes the ecCodes library and runs a Jupyter notebook server. The container is based on a image that includes the <code>ecCodes</code> library for decoding BUFR data, along with libraries for plotting and data analysis.</p> <p>The command above starts the container in detached mode, with the name <code>decode-bufr-jupyter</code>, the port 8888 is mapped to the host system and the environment variable <code>JUPYTER_TOKEN</code> is set to <code>dataismagic!</code>.</p> <p>The command above also mounts the <code>~/wis2box-data/downloads</code> directory to <code>/root/downloads</code> in the container. This ensures that the downloaded data is available to the Jupyter notebook server.</p> <p>Once the container is started, you can access the Jupyter notebook server by navigating to <code>http://&lt;your-host&gt;:8888</code> in your web browser.</p> <p>You will see a screen requesting you to enter a \"Password or token\".</p> <p>Provide the token <code>dataismagic!</code> to login to the Jupyter notebook server.</p> <p>After you login, you should see the following screen listing the directories in the container:</p> <p></p> <p>Double click on the <code>example-notebooks</code> directory to open it.</p> <p>You should see the following screen listing the example notebooks, double click on the <code>tropical_cyclone_track.ipynb</code> notebook to open it:</p> <p></p> <p>You should now be in the Jupyter notebook for decoding the tropical cyclone track data:</p> <p></p> <p>Read the instructions in the notebook and run the cells to decode the downloaded data for the tropical cyclone tracks. Run each cell by clicking on the cell and then clicking the run button in the toolbar or by pressing <code>Shift+Enter</code>.</p> <p>At the end you should see a plot of the strike probability for the tropical cyclone tracks:</p> <p></p> <p>Question</p> <p>The result displays the predicted probability of tropical storm track within 200 km. How would you update the notebook to display the predicted probability of tropical storm track within 300 km ?</p> Click to reveal answer <p>To update the notebook to display the predicted probability of tropical storm track within a different distance, you can update the <code>distance_threshold</code> variable in the code-block that calculates the strike probability.</p> <p>To display the predicted probability of tropical storm track within 300 km, </p> <pre><code># set distance threshold (meters)\ndistance_threshold = 300000  # 300 km in meters\n</code></pre> <p>Then re-run the cells in the notebook to see the updated plot.</p> <p>Decoding BUFR data</p> <p>The exercise you just did provided one specific example of how you can decode BUFR data using the ecCodes library. Different data types may require different decoding steps and you may need to refer to the documentation for the data type you are working with.</p> <p>For more information please consult the ecCodes documentation.</p>"},{"location":"practical-sessions/downloading-data-from-wis2/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>use the 'wis2downloader' to subscribe to a WIS2 Broker and download data to your local system</li> <li>view the status of the downloads in the Grafana dashboard</li> <li>decode some downloaded data using the 'decode-bufr-jupyter' container</li> </ul>"},{"location":"practical-sessions/initializing-wis2box/","title":"Initializing wis2box","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>run the <code>wis2box-create-config.py</code> script to create the initial configuration</li> <li>start wis2box and check the status of its components</li> <li>access the wis2box-webapp, API, MinIO UI and Grafana dashboard in a browser</li> <li>connect to the local wis2box-broker using MQTT Explorer</li> </ul> <p>Note</p> <p>The current training materials are using wis2box-1.0.0rc1. </p> <p>See accessing-your-student-vm for instructions on how to download and install the wis2box software stack if you are running this training outside of a local training session.</p>"},{"location":"practical-sessions/initializing-wis2box/#preparation","title":"Preparation","text":"<p>Login to your designated VM with your username and password and ensure you are in the <code>wis2box-1.0.0rc1</code> directory:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre>"},{"location":"practical-sessions/initializing-wis2box/#creating-the-initial-configuration","title":"Creating the initial configuration","text":"<p>The initial configuration for the wis2box requires:</p> <ul> <li>an environment file <code>wis2box.env</code> containing the configuration parameters</li> <li>a directory on the host-machine to share between the host machine and the wis2box containers defined by the <code>WIS2BOX_HOST_DATADIR</code> environment variable</li> </ul> <p>The <code>wis2box-create-config.py</code> script can be used to create the initial configuration of your wis2box. </p> <p>It will ask you a set of question to help setup your configuration.</p> <p>You will be able to review and update the configuration files after the script has completed.</p> <p>Run the script as follows:</p> <pre><code>python3 wis2box-create-config.py\n</code></pre>"},{"location":"practical-sessions/initializing-wis2box/#wis2box-host-data-directory","title":"wis2box-host-data directory","text":"<p>The script will ask you to enter the directory to be used for the <code>WIS2BOX_HOST_DATADIR</code> environment variable.</p> <p>Note that you need to define the full path to this directory.</p> <p>For example if your username is <code>username</code>, the full path to the directory is <code>/home/username/wis2box-data</code>:</p> <pre><code>username@student-vm-username:~/wis2box-1.0.0rc1$ python3 wis2box-create-config.py\nPlease enter the directory to be used for WIS2BOX_HOST_DATADIR:\n/home/username/wis2box-data\nThe directory to be used for WIS2BOX_HOST_DATADIR will be set to:\n    /home/username/wis2box-data\nIs this correct? (y/n/exit)\ny\nThe directory /home/username/wis2box-data has been created.\n</code></pre>"},{"location":"practical-sessions/initializing-wis2box/#wis2box-url","title":"wis2box URL","text":"<p>Next, you will be asked to enter the URL for your wis2box. This is the URL that will be used to access the wis2box web application, API and UI.</p> <p>Please use <code>http://&lt;your-hostname-or-ip&gt;</code> as the URL.</p> <pre><code>Please enter the URL of the wis2box:\n For local testing the URL is http://localhost\n To enable remote access, the URL should point to the public IP address or domain name of the server hosting the wis2box.\nhttp://username.wis2.training\nThe URL of the wis2box will be set to:\n  http://username.wis2.training\nIs this correct? (y/n/exit)\n</code></pre>"},{"location":"practical-sessions/initializing-wis2box/#webapp-storage-and-broker-passwords","title":"WEBAPP, STORAGE and BROKER passwords","text":"<p>You can use the option of random password generation when prompted for and <code>WIS2BOX_WEBAPP_PASSWORD</code>, <code>WIS2BOX_STORAGE_PASSWORD</code>, <code>WIS2BOX_BROKER_PASSWORD</code> and define your own.</p> <p>Don't worry about remembering these passwords, they will be stored in the <code>wis2box.env</code> file in your wis2box-1.0.0rc1 directory.</p>"},{"location":"practical-sessions/initializing-wis2box/#review-wis2boxenv","title":"Review <code>wis2box.env</code>","text":"<p>Once the scripts is completed check the contents of the <code>wis2box.env</code> file in your current directory:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env\n</code></pre> <p>Or check the content of the file via WinSCP.</p> <p>Question</p> <p>What is the value of WISBOX_BASEMAP_URL in the wis2box.env file?</p> Click to reveal answer <p>The default value for WIS2BOX_BASEMAP_URL is <code>https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png</code>.</p> <p>This URL refers to the OpenStreetMap tile server. If you want to use a different map provider, you can change this URL to point to a different tile server.</p> <p>Question</p> <p>What is the value of the WIS2BOX_STORAGE_DATA_RETENTION_DAYS environment variable in the wis2box.env file?</p> Click to reveal answer <p>The default value for WIS2BOX_STORAGE_DATA_RETENTION_DAYS is 30 days. You can change this value to a different number of days if you wish.</p> <p>The wis2box-management container runs a cronjob on a daily basis to remove data older than the number of days defined by WIS2BOX_STORAGE_DATA_RETENTION_DAYS from the <code>wis2box-public</code> bucket and the API backend:</p> <pre><code>0 0 * * * su wis2box -c \"wis2box data clean --days=$WIS2BOX_STORAGE_DATA_RETENTION_DAYS\"\n</code></pre> <p>Note</p> <p>The <code>wis2box.env</code> file contains environment variables defining the configuration of your wis2box. For more information consult the wis2box-documentation.</p> <p>Do not edit the <code>wis2box.env</code> file unless you are sure of the changes you are making. Incorrect changes can cause your wis2box to stop working.</p> <p>Do not share the contents of your <code>wis2box.env</code> file with anyone, as it contains sensitive information such as passwords.</p>"},{"location":"practical-sessions/initializing-wis2box/#start-wis2box","title":"Start wis2box","text":"<p>Ensure you are in the directory containing the wis2box software stack definition files:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Start wis2box with the following command:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>When running this command for the first time, you will see the following output:</p> <pre><code>No docker-compose.images-*.yml files found, creating one\nCurrent version=Undefined, latest version=1.0.0rc1\nWould you like to update ? (y/n/exit)\n</code></pre> <p>Select <code>y</code> and the the script will create the file <code>docker-compose.images-1.0.0rc1.yml</code>, download the required Docker images and start the services.</p> <p>Downloading the images may take some time depending on your internet connection speed. This step is only required the first time you start wis2box.</p> <p>Inspect the status with the following command:</p> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <p>Repeat this command until all services are up and running.</p> <p>wis2box and Docker</p> <p>wis2box runs as a set of Docker containers managed by docker-compose.</p> <p>The services are defined in the various <code>docker-compose*.yml</code> which can be found in the <code>~/wis2box-1.0.0rc1/</code> directory.</p> <p>The Python script <code>wis2box-ctl.py</code> is used to run the underlying Docker Compose commands that control the wis2box services.</p> <p>You don't need to know the details of the Docker containers to run the wis2box software stack, but you can inspect the <code>docker-compose*.yml</code> and files to see how the services are defined. If you are interested in learning more about Docker, you can find more information in the Docker documentation.</p> <p>To login to the wis2box-management container, use the following command:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>Inside the wis2box-management container you can run various commands to manage your wis2box, such as:</p> <ul> <li><code>wis2box auth add-token --path processes/wis2box</code> : to create an authorization token for the <code>processes/wis2box</code> endpoint</li> <li><code>wis2box data clean --days=&lt;number-of-days&gt;</code> : to clean up data older than a certain number of days from the <code>wis2box-public</code> bucket</li> </ul> <p>To exit the container and go back to the host machine, use the following command:</p> <pre><code>exit\n</code></pre> <p>Run the following command to see the docker containers running on your host machine:</p> <pre><code>docker ps\n</code></pre> <p>You should see the following containers running:</p> <ul> <li>wis2box-management</li> <li>wis2box-api</li> <li>wis2box-minio</li> <li>wis2box-webapp</li> <li>wis2box-auth</li> <li>wis2box-ui</li> <li>wis2downloader</li> <li>elasticsearch</li> <li>elasticsearch-exporter</li> <li>nginx</li> <li>mosquitto</li> <li>prometheus</li> <li>grafana</li> <li>loki</li> </ul> <p>These containers are part of the wis2box software stack and provide the various services required to run the wis2box.</p> <p>Run the following command to see the docker volumes running on your host machine:</p> <pre><code>docker volume ls\n</code></pre> <p>You should see the following volumes:</p> <ul> <li>wis2box_project_auth-data</li> <li>wis2box_project_es-data</li> <li>wis2box_project_htpasswd</li> <li>wis2box_project_minio-data</li> <li>wis2box_project_prometheus-data</li> <li>wis2box_project_loki-data</li> </ul> <p>As well as some anonymous volumes used by the various containers.</p> <p>The volumes starting with <code>wis2box_project_</code> are used to store persistent data for the various services in the wis2box software stack.</p>"},{"location":"practical-sessions/initializing-wis2box/#wis2box-api","title":"wis2box API","text":"<p>The wis2box contains an API (Application Programming Interface) that provide data access and processes for interactive visualization, data transformation and publication.</p> <p>Open a new tab and navigate to the page <code>http://&lt;your-host&gt;/oapi</code>.</p> <p></p> <p>This is the landing page of the wis2box API (running via the wis2box-api container).</p> <p>Question</p> <p>What collections are currently available?</p> Click to reveal answer <p>To view collections currently available through the API, click <code>View the collections in this service</code>:</p> <p></p> <p>The following collections are currently available:</p> <ul> <li>Stations</li> <li>Data notifications</li> <li>Discovery metadata</li> </ul> <p>Question</p> <p>How many data notifications have been published?</p> Click to reveal answer <p>Click on \"Data notifications\", then click on <code>Browse through the items of \"Data Notifications\"</code>. </p> <p>You will note that the page says \"No items\" as no Data notifications have been published yet.</p>"},{"location":"practical-sessions/initializing-wis2box/#wis2box-webapp","title":"wis2box webapp","text":"<p>Open a web browser and visit the page <code>http://&lt;your-host&gt;/wis2box-webapp</code>.</p> <p>You will see a pop-up asking for your username and password. Use the default username <code>wis2box-user</code> and the <code>WIS2BOX_WEBAPP_PASSWORD</code> defined in the <code>wis2box.env</code> file and click \"Sign in\":</p> <p>Note</p> <p>Check you wis2box.env for the value of your WIS2BOX_WEBAPP_PASSWORD. You can use the following command to check the value of this environment variable:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep WIS2BOX_WEBAPP_PASSWORD\n</code></pre> <p>Once logged in, you move your mouse to the menu on the left to see the options available in the wis2box web application:</p> <p></p> <p>This is the wis2box web application to enable you to interact with your wis2box:</p> <ul> <li>create and manage datasets</li> <li>update/review your station metadata</li> <li>ingest ASCII and CSV data</li> <li>monitor notifications published on your wis2box-broker</li> </ul> <p>We will use this web application in a later session.</p>"},{"location":"practical-sessions/initializing-wis2box/#wis2box-broker","title":"wis2box-broker","text":"<p>Open the MQTT Explorer on your computer and prepare a new connection to connect to your broker (running via the wis2box-broker container).</p> <p>Click <code>+</code> to add a new connection:</p> <p></p> <p>You can click on the 'ADVANCED' button and verify you have subscriptions to the the following topics:</p> <ul> <li><code>#</code></li> <li><code>$SYS/#</code></li> </ul> <p></p> <p>Note</p> <p>The <code>#</code> topic is a wildcard subscription that will subscribe to all topics published on the broker.</p> <p>The messages published under the <code>$SYS</code> topic are system messages published by the mosquitto service itself.</p> <p>Use the following connection details, making sure to replace the value of <code>&lt;your-host&gt;</code> with your hostname and <code>&lt;WIS2BOX_BROKER_PASSWORD&gt;</code> with the value from your <code>wis2box.env</code> file:</p> <ul> <li>Protocol: mqtt://</li> <li>Host: <code>&lt;your-host&gt;</code></li> <li>Port: 1883</li> <li>Username: wis2box</li> <li>Password: <code>&lt;WIS2BOX_BROKER_PASSWORD&gt;</code></li> </ul> <p>Note</p> <p>You can check your wis2box.env for the value of your WIS2BOX_BROKER_PASSWORD. You can use the following command to check the value of this environment variable:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep WIS2BOX_BROKER_PASSWORD\n</code></pre> <p>Note that this your internal broker password, the Global Broker will use different (read-only) credentials to subscribe to your broker. Never share this password with anyone.</p> <p>Make sure to click \"SAVE\" to store your connection details.</p> <p>Then click \"CONNECT\" to connect to your wis2box-broker.</p> <p></p> <p>Once you are connected, verify that your the internal mosquitto statistics being published by your broker under the <code>$SYS</code> topic:</p> <p></p> <p>Keep the MQTT Explorer open, as we will use it to monitor the messages published on the broker.</p>"},{"location":"practical-sessions/initializing-wis2box/#minio-ui","title":"MinIO UI","text":"<p>Open a web browser and visit the page <code>http://&lt;your-host&gt;:9001</code>:</p> <p></p> <p>This is the MinIO UI (running via the wis2box-storage container).</p> <p>The username and password are defined in the <code>wis2box.env</code> file in your wis2box data directory by the environment variables <code>WIS2BOX_STORAGE_USERNAME</code> and <code>WIS2BOX_STORAGE_PASSWORD</code>. The default username is <code>wis2box</code>.</p> <p>Note</p> <p>You can check your wis2box.env for the value of your WIS2BOX_STORAGE_PASSWORD. You can use the following command to check the value of this environment variable:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep WIS2BOX_STORAGE_PASSWORD\n</code></pre> <p>Note that these are the read-write credentials for your MinIO instance. Never share these credentials with anyone. The Global Services can only download data from your MinIO instance using the web-proxy on the wis2box-public bucket.</p> <p>Try to login to your MinIO UI. You will see that there 3 buckets already defined:</p> <ul> <li><code>wis2box-incoming</code>: used to receive incoming data</li> <li><code>wis2box-public</code>: used to store data that is made available in the WIS2 notifications, the content of this bucket is proxied as <code>/data</code> on your <code>WIS2BOX_URL</code> via the nginx container</li> <li><code>wis2box-archive</code>: used to archive data from <code>wis2box-incoming</code> on a daily basis</li> </ul> <p></p> <p>Note</p> <p>The wis2box-storage container (provided by MinIO) will send a notification on the wis2box-broker when data is received. The wis2box-management container is subscribed to all messages on <code>wis2box/#</code> and will receive these notifications, triggering the data plugins defined in the datasets.</p>"},{"location":"practical-sessions/initializing-wis2box/#using-the-minio-ui-to-test-data-ingestion","title":"Using the MinIO UI to test data ingestion","text":"<p>First click on \"browse\" for the <code>wis2box-incoming</code> bucket, then click on \"Create new path\":</p> <p></p> <p>And enter the path <code>/testing/upload/</code>:</p> <p></p> <p>Right-click on this link and select 'save link as' : randomfile.txt, to download the file to your local machine.</p> <p>Then click on \"Upload\" and select the randomfile.txt you downloaded from your local machine and upload it to the <code>wis2box-incoming</code> bucket</p> <p>You should now see the file in the <code>wis2box-incoming</code> bucket:</p> <p></p> <p>Question</p> <p>Did you see a message published on your MQTT broker in MQTT Explorer?</p> Click to reveal answer <p>If you are connected to your wis2box-broker, you should note that a message has been published on the <code>wis2box/storage</code> topic:</p> <p></p> <p>This is how MinIO informs the wis2box-management service that there is new data to process. </p> <p>Note: this is not a WIS2 notification, but an internal message between components within the wis2box software stack.</p> <p>The wis2box is not yet configured to process any files you upload, so the file will not be processed and no WIS2 notification will be published.</p> <p>We will check the error message produced by the wis2box-management container in the Grafana dashboard in the next step.</p>"},{"location":"practical-sessions/initializing-wis2box/#grafana-ui","title":"Grafana UI","text":"<p>Open a web browser and visit the page <code>http://&lt;your-host&gt;:3000</code>:</p> <p></p> <p>This is the Grafana UI, where you can view the wis2box workflow monitoring dashboard. You can also access the logs of the various containers in the wis2box software stack via the 'Explore' option in the menu.</p> <p>Question</p> <p>Can you find the error message produced by the wis2box-management container when you uploaded the file to the <code>wis2box-incoming</code> bucket?</p> Click to reveal answer <p>You will should see an error message indicating that the wis2box could not process the file you uploaded.</p> <p>This is expected as we have not yet configured any datasets in the wis2box, you will learn how to do this in the next practical session.</p>"},{"location":"practical-sessions/initializing-wis2box/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>run the <code>wis2box-create-config.py</code> script to create the initial configuration</li> <li>start wis2box and check the status of its components</li> <li>connect to the MQTT broker on your student-VM using MQTT Explorer</li> <li>access the wis2box-UI, wis2box-webapp and wis2box-API in a browser</li> <li>upload a file to the \"wis2box-incoming\"-bucket in the MinIO UI</li> <li>view the Grafana dashboard to monitor the wis2box workflow</li> </ul>"},{"location":"practical-sessions/monitoring-wis2-notifications/","title":"Monitoring WIS2 Notifications","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>trigger the wis2box workflow by uploading data in MinIO using the <code>wis2box data ingest</code> command</li> <li>view warnings and errors displayed in the Grafana dashboard</li> <li>check the content of the data being published</li> </ul>"},{"location":"practical-sessions/monitoring-wis2-notifications/#introduction","title":"Introduction","text":"<p>The Grafana dashboard uses data from Prometheus and Loki to display the status of your wis2box. Prometheus store time-series data from the metrics collected, while Loki store the logs from the containers running on your wis2box instance. This data allows you to check how much data is received on MinIO and how many WIS2 notifications are published, and if there are any errors detected in the logs.</p> <p>To see the content of the WIS2 notifications that are being published on different topics of your wis2box you can use the 'Monitor' tab in the wis2box-webapp.</p>"},{"location":"practical-sessions/monitoring-wis2-notifications/#preparation","title":"Preparation","text":"<p>This section will use the \"surface-based-observations/synop\" dataset previously created in the Configuring datasets in wis2box practical session. </p> <p>Login to your student VM using your SSH client (PuTTY or other).</p> <p>Make sure wis2box is up and running:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Make sure your have MQTT Explorer running and connected to your instance using the public credentials <code>everyone/everyone</code> with a subscription to the topic <code>origin/a/wis2/#</code>.</p> <p>Make sure you have access to the MinIO web interface by going to <code>http://&lt;your-host&gt;:9000</code> and you are logged (using <code>WIS2BOX_STORAGE_USERNAME</code> and <code>WIS2BOX_STORAGE_PASSWORD</code> from your <code>wis2box.env</code> file).</p> <p>Make sure you have a web browser open with the Grafana dashboard for your instance by going to <code>http://&lt;your-host&gt;:3000</code>.</p>"},{"location":"practical-sessions/monitoring-wis2-notifications/#ingesting-some-data","title":"Ingesting some data","text":"<p>Please execute the following commands from your SSH-client session:</p> <p>Copy the sample data file <code>aws-example.csv</code> to the the directory you defined as the <code>WI2BOX_HOST_DATADIR</code> in your <code>wis2box.env</code> file.</p> <pre><code>cp ~/exercise-materials/monitoring-exercises/aws-example.csv ~/wis2box-data/\n</code></pre> <p>Make sure you are in the <code>wis2box-1.0.0rc1</code> directory and login to the wis2box-management container:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Verify the sample data is available in the directory <code>/data/wis2box/</code> within the wis2box-management container:</p> <pre><code>ls -lh /data/wis2box/aws-example.csv\n</code></pre> <p>Note</p> <p>The <code>WIS2BOX_HOST_DATADIR</code> is mounted as <code>/data/wis2box/</code> inside the wis2box-management container by the <code>docker-compose.yml</code> file included in the <code>wis2box-1.0.0rc1</code> directory.</p> <p>This allows you to share data between the host and the container.</p> <p>Exercise 1: ingesting data using <code>wis2box data ingest</code></p> <p>Execute the following command to ingest the sample data file <code>aws-example.csv</code> to your wis2box-instance:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example.csv --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>Was the data successfully ingested? If not, what was the error message and how can you fix it?</p> Click to reveal answer <p>You will see the following output:</p> <pre><code>Error: metadata_id=urn:wmo:md:not-my-centre:core.surface-based-observations.synop not found in data mappings\n</code></pre> <p>The error message indicates that the metadata identifier you provided does not match any of the datasets you have configured in your wis2box-instance.</p> <p>Provide the correct metadata-id that matches the dataset you created in the previous practical session and repeat the data ingest command until you should see the following output:</p> <pre><code>Processing /data/wis2box/aws-example.csv\nDone\n</code></pre> <p>Go to the MinIO console in your browser and check if the file <code>aws-example.csv</code> was uploaded to the <code>wis2box-incoming</code> bucket. You should see there is a new directory with the name of the dataset you provided in the <code>--metadata-id</code> option:</p> <p></p> <p>Note</p> <p>The <code>wis2box data ingest</code> command uploaded the file to the <code>wis2box-incoming</code> bucket in MinIO in a directory named after the metadata identifier you provided.</p> <p>Go to the Grafana dashboard in your browser and check the status of the data ingest.</p> <p>Exercise 2: check the status of the data ingest</p> <p>Go to the Grafana dashboard in your browser and check the status of the data ingest.</p> <p>Was the data successfully ingested?</p> Click to reveal answer <p>The panel at the bottom of the Grafana home dashboard reports the following warnings:    </p> <p><code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60355 not in station list; skipping</code> <code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60360 not in station list; skipping</code></p> <p>This warning indicates that the stations are not defined in the station list of your wis2box. No WIS2 notifications will be published for this station until you add it to the station list and associate it with the topic for your dataset.</p> <p>Exercise 3: add the test stations and repeat the data ingest</p> <p>Add the stations to your wis2box using the station editor in wis2box-webapp, and associate the stations with the topic for your dataset.</p> <p>Now re-upload the sample data file <code>aws-example.csv</code> to the same path in MinIO you used in the previous exercise.</p> <p>Check the Grafana dashboard, are there any new errors or warnings ? How can you see that the test data was successfully ingested and published?</p> Click to reveal answer <p>You can check the charts on the Grafana home dashboard to see if the test data was successfully ingested and published.</p> <p>If successful, you should see the following:</p> <p></p> <p>Exercise 4: check the MQTT broker for WIS2 notifications</p> <p>Go to the MQTT Explorer and check if you can see the WIS2 Notification Message for the data you just ingested.</p> <p>How many WIS2 data notifications were published by your wis2box?</p> <p>How do you access the content of the data being published?</p> Click to reveal answer <p>You should see 6 WIS2 data notifications published by your wis2box.</p> <p>To access the content of the data being published, you can expand the topic structure to see the different levels of the message until you reach the last level and review message content of one of the messages.</p> <p>The message content has a \"links\" section with a \"rel\" key of \"canonical\" and a \"href\" key with the URL to download the data. The URL will be in the format <code>http://&lt;your-host&gt;/data/...</code>. </p> <p>Note that the data-format is BUFR and you will need a BUFR parser to view the content of the data. The BUFR format is a binary format used by meteorological services to exchange data. The data-plugins inside wis2box transformed the data from CSV to BUFR before publishing it.</p>"},{"location":"practical-sessions/monitoring-wis2-notifications/#viewing-the-data-content-you-have-published","title":"Viewing the data content you have published","text":"<p>You can use the wis2box-webapp to view the content of the WIS2 data notifications that have been published by your wis2box.</p> <p>Open the wis2box-webapp in your browser by navigating to <code>http://&lt;your-host&gt;/wis2box-webapp</code> and select the Monitoring tab:</p> <p></p> <p>In the monitoring-tab select your dataset-id and click \"UPDATE\"</p> Exercise 5: view the WIS2 notifications in the wis2box-webapp <p>How many WIS2 data notifications were published by your wis2box? </p> <p>What is the air-temperature reported in the last notification at the station with the WIGOS-identifier=0-20000-0-60355?</p> Click to reveal answer <p>If you have successfully ingested the test data, you should see 6 WIS2 data notifications published by your wis2box.</p> <p>To see the air-temperature measured for the station with WIGOS-identifier=0-20000-0-60355, click on the \"INSPECT\"-button next to the file for that station to open a pop-up window displaying the parsed content of the data file. The air-temperature measured at this station was 25.0 degrees Celsius.</p> <p>Note</p> <p>The wis2box-api container includes tools to parse BUFR files and display the content in a human-readable format. This is a not a core requirements for the WIS2.0 implementation, but was included in the wis2box to aid data publishers in checking the content of the data they are publishing.</p>"},{"location":"practical-sessions/monitoring-wis2-notifications/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>trigger the wis2box workflow by uploading data in MinIO using the <code>wis2box data ingest</code> command</li> <li>view the WIS2 notifications published by your wis2box in the Grafana dashboard and MQTT Explorer</li> <li>check the content of the data being published using the wis2box-webapp</li> </ul>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/","title":"Querying data using the wis2box API","text":"<p>Learning outcomes</p> <p>By the end of this practical session, you will be able to:</p> <ul> <li>use the wis2box API to query and filter your stations</li> <li>use the wis2box API to query and filter your data</li> </ul>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#introduction","title":"Introduction","text":"<p>The wis2box API provides discovery and query access in a machine readable manner to the data that has been ingested in wis2box. The API is based on the OGC API - Features standard and is implemented using pygeoapi.</p> <p>The wis2box API provides access to the following collections:</p> <ul> <li>Stations</li> <li>Discovery metadata</li> <li>Data notifications</li> <li>plus one collection per dataset configured, which stores the output from bufr2geojson (the plugin <code>bufr2geojson</code> needs to be enabled in the data mappings configuration to fill the items in the dataset collection).</li> </ul> <p>In this practical session you will learn how to use the data API to browse and query data that has been ingested in wis2box.</p>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#preparation","title":"Preparation","text":"<p>Note</p> <p>Navigate to the wis2box API landing page in your web browser:</p> <p><code>http://&lt;your-host&gt;/oapi</code></p> <p></p>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#inspecting-collections","title":"Inspecting collections","text":"<p>From the landing page, click on the 'Collections' link.</p> <p>Question</p> <p>How many dataset collections do you see on the resulting page? What do you think each collection represents?</p> Click to reveal answer <p>There should be 4 collections displayed, including \"Stations\", \"Discovery metadata\", and \"Data notifications\"</p>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#inspecting-stations","title":"Inspecting stations","text":"<p>From the landing page, click on the 'Collections' link, then click on the 'Stations' link.</p> <p></p> <p>Click on the 'Browse' link, then click on the 'json' link.</p> <p>Question</p> <p>How many stations are returned? Compare this number to the station list in <code>http://&lt;your-host&gt;/wis2box-webapp/station</code></p> Click to reveal answer <p>The number of stations from the API should be equal to the number of stations you see in the wis2box webapp.</p> <p>Question</p> <p>How can we query for a single station (e.g. <code>Balaka</code>)?</p> Click to reveal answer <p>Query the API with <code>http://&lt;your-host&gt;/oapi/collections/stations/items?q=Balaka</code>.</p> <p>Note</p> <p>The above example is based on the Malawi test data.  Try testing against the stations your have ingested as part of the previous exercises.</p>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#inspecting-observations","title":"Inspecting observations","text":"<p>Note</p> <p>The above example is based on the Malawi test data.  Try testing against the observation your have ingested as part of the exercises.</p> <p>From the landing page, click on the 'Collections' link, then click on the 'Surface weather observations from Malawi' link.</p> <p></p> <p>Click on the 'Queryables' link.</p> <p></p> <p>Question</p> <p>Which queryable would be used to filter by station identifier?</p> Click to reveal answer <p>The <code>wigos_station_identifer</code> is the correct queryable.</p> <p>Navigate to the previous page (i.e. <code>http://&lt;your-host&gt;/oapi/collections/urn:wmo:md:mwi:mwi_met_centre:surface-weather-observations</code>)</p> <p>Click on the 'Browse' link.</p> <p>Question</p> <p>How can we visualize the JSON response?</p> Click to reveal answer <p>By clicking on the 'JSON' link at the top right of the page, of by adding <code>f=json</code> to the API request on the web browser.</p> <p>Inspect the JSON response of the observations.</p> <p>Question</p> <p>How many records are returned?</p> <p>Question</p> <p>How can we limit the response to 3 observations?</p> Click to reveal answer <p>Add <code>limit=3</code> to the API request.</p> <p>Question</p> <p>How can we sort the response by the latest observations?</p> Click to reveal answer <p>Add <code>sortby=-resultTime</code> to the API request (notice the <code>-</code> sign to denote descending sort order).  For sorting by the earliest observations, update the request to include <code>sortby=resultTime</code>.</p> <p>Question</p> <p>How can we filter the observations by a single station?</p> Click to reveal answer <p>Add <code>wigos_station_identifier=&lt;WSI&gt;</code> to the API request.</p> <p>Question</p> <p>How can we receive the observations as a CSV?</p> Click to reveal answer <p>Add <code>f=csv</code> to the API request.</p> <p>Question</p> <p>How can we show a single observation (id)?</p> Click to reveal answer <p>Using the feature identifier from an API request against the observations, query the API for <code>http://&lt;your-host&gt;/oapi/collections/{collectionId}/items/{featureId}</code>, where <code>{collectionId}</code> is the name of your observations collection and <code>{itemId}</code> is the identifier of the single observation of interest.</p>"},{"location":"practical-sessions/querying-data-using-the-wis2box-api/#conclusion","title":"Conclusion","text":"<p>Congratulations!</p> <p>In this practical session, you learned how to:</p> <ul> <li>use the wis2box API to query and filter your stations</li> <li>use the wis2box API to query and filter your data</li> </ul>"},{"location":"it/#formazione-wis2-in-a-box","title":"Formazione WIS2 in a box","text":"<p>WIS2 in a box (wis2box) \u00e8 un'Implementazione di Riferimento Libera e Open Source (FOSS) di un Nodo WMO WIS2. Il progetto fornisce un insieme di strumenti plug and play per acquisire, elaborare e pubblicare dati meteorologici/climatici/idrici utilizzando approcci basati su standard in linea con i principi WIS2. wis2box fornisce anche accesso a tutti i dati nella rete WIS2. wis2box \u00e8 progettato per avere una bassa barriera all'ingresso per i fornitori di dati, fornendo infrastrutture e servizi abilitanti per la scoperta, l'accesso e la visualizzazione dei dati.</p> <p>Questa formazione fornisce spiegazioni passo-passo di vari aspetti del progetto wis2box e numerosi esercizi per aiutarti a pubblicare e scaricare dati da WIS2. La formazione \u00e8 fornita sotto forma di presentazioni generali e esercitazioni pratiche.</p> <p>I partecipanti potranno lavorare con dati e metadati di esempio, oltre a integrare i propri dati e metadati.</p> <p>Questa formazione copre un'ampia gamma di argomenti (installazione/configurazione, pubblicazione/download di dati, ecc.).</p>"},{"location":"it/#obiettivi-e-risultati-di-apprendimento","title":"Obiettivi e risultati di apprendimento","text":"<p>Gli obiettivi di questa formazione sono familiarizzare con:</p> <ul> <li>Concetti e componenti fondamentali dell'architettura WIS2</li> <li>Formati di dati e metadati utilizzati in WIS2 per la scoperta e l'accesso</li> <li>Architettura e ambiente wis2box</li> <li>Funzioni principali di wis2box:<ul> <li>Gestione dei metadati</li> <li>Acquisizione e trasformazione dei dati in formato BUFR</li> <li>Broker MQTT per la pubblicazione di messaggi WIS2</li> <li>Endpoint HTTP per il download dei dati</li> <li>Endpoint API per l'accesso programmatico ai dati</li> </ul> </li> </ul>"},{"location":"it/#navigazione","title":"Navigazione","text":"<p>La navigazione a sinistra fornisce un indice per l'intera formazione.</p> <p>La navigazione a destra fornisce un indice per una pagina specifica.</p>"},{"location":"it/#prerequisiti","title":"Prerequisiti","text":""},{"location":"it/#conoscenze","title":"Conoscenze","text":"<ul> <li>Comandi Linux di base (vedi il foglio di riferimento)</li> <li>Conoscenza di base delle reti e dei protocolli Internet</li> </ul>"},{"location":"it/#software","title":"Software","text":"<p>Questa formazione richiede i seguenti strumenti:</p> <ul> <li>Un'istanza con sistema operativo Ubuntu (fornita dai formatori WMO durante le sessioni di formazione locali) vedi Accesso alla tua VM studente</li> <li>Client SSH per accedere alla tua istanza</li> <li>MQTT Explorer sulla tua macchina locale</li> <li>Client SCP e FTP per copiare file dalla tua macchina locale</li> </ul>"},{"location":"it/#convenzioni","title":"Convenzioni","text":"<p>Question</p> <p>Una sezione contrassegnata in questo modo ti invita a rispondere a una domanda.</p> <p>Inoltre, noterai sezioni di suggerimenti e note all'interno del testo:</p> <p>Tip</p> <p>I suggerimenti condividono aiuti su come realizzare al meglio le attivit\u00e0.</p> <p>Note</p> <p>Le note forniscono informazioni aggiuntive sull'argomento trattato dalla sessione pratica, nonch\u00e9 su come realizzare al meglio le attivit\u00e0.</p> <p>Gli esempi sono indicati come segue:</p> <p>Configurazione <pre><code>my-collection-defined-in-yaml:\n    type: collection\n    title: my title defined as a yaml attribute named title\n    description: my description as a yaml attribute named description\n</code></pre></p> <p>I frammenti che devono essere digitati in un terminale/console sono indicati come:</p> <pre><code>echo 'Hello world'\n</code></pre> <p>I nomi dei container (immagini in esecuzione) sono indicati in grassetto.</p>"},{"location":"it/#ubicazione-e-materiali-di-formazione","title":"Ubicazione e materiali di formazione","text":"<p>I contenuti della formazione, il wiki e il tracker dei problemi sono gestiti su GitHub all'indirizzo https://github.com/wmo-im/wis2box-training.</p>"},{"location":"it/#stampa-del-materiale","title":"Stampa del materiale","text":"<p>Questa formazione pu\u00f2 essere esportata in PDF. Per salvare o stampare questo materiale di formazione, vai alla pagina di stampa, e seleziona File &gt; Stampa &gt; Salva come PDF.</p>"},{"location":"it/#materiali-per-gli-esercizi","title":"Materiali per gli esercizi","text":"<p>I materiali per gli esercizi possono essere scaricati dal file zip exercise-materials.zip.</p>"},{"location":"it/#supporto","title":"Supporto","text":"<p>Per problemi/bug/suggerimenti o miglioramenti/contributi a questa formazione, utilizza il tracker dei problemi di GitHub.</p> <p>Tutti i bug, i miglioramenti e i problemi di wis2box possono essere segnalati su GitHub.</p> <p>Per ulteriore supporto o domande, contatta wis2-support@wmo.int.</p> <p>Come sempre, la documentazione principale di wis2box pu\u00f2 essere trovata su https://docs.wis2box.wis.wmo.int.</p> <p>I contributi sono sempre incoraggiati e benvenuti!</p>"},{"location":"it/cheatsheets/docker/#panoramica","title":"Panoramica","text":"<p>Docker consente di creare ambienti virtuali in modo isolato a supporto della virtualizzazione delle risorse di calcolo. Il concetto di base dietro Docker \u00e8 la containerizzazione, dove il software pu\u00f2 funzionare come servizi, interagendo con altri container software, per esempio.</p> <p>Il tipico flusso di lavoro Docker prevede la creazione e la costruzione di immagini, che vengono poi eseguite come container attivi.</p> <p>Docker viene utilizzato per eseguire la suite di servizi che compongono wis2box utilizzando immagini precostruite.</p>"},{"location":"it/cheatsheets/docker/#gestione-delle-immagini","title":"Gestione delle immagini","text":"<ul> <li>Elencare le immagini disponibili</li> </ul> <pre><code>docker image ls\n</code></pre> <ul> <li>Aggiornare un'immagine:</li> </ul> <pre><code>docker pull my-image:latest\n</code></pre> <ul> <li>Rimuovere un'immagine:</li> </ul> <pre><code>docker rmi my-image:local\n</code></pre>"},{"location":"it/cheatsheets/docker/#gestione-dei-volumi","title":"Gestione dei volumi","text":"<ul> <li>Elencare tutti i volumi creati:</li> </ul> <pre><code>docker volume ls\n</code></pre> <ul> <li>Visualizzare informazioni dettagliate su un volume:</li> </ul> <pre><code>docker volume inspect my-volume\n</code></pre> <ul> <li>Rimuovere un volume:</li> </ul> <pre><code>docker volume rm my-volume\n</code></pre> <ul> <li>Rimuovere tutti i volumi inutilizzati:</li> </ul> <pre><code>docker volume prune\n</code></pre>"},{"location":"it/cheatsheets/docker/#gestione-dei-container","title":"Gestione dei container","text":"<ul> <li>Visualizzare un elenco dei container attualmente in esecuzione:</li> </ul> <pre><code>docker ps\n</code></pre> <ul> <li>Elenco di tutti i container:</li> </ul> <pre><code>docker ps -a\n</code></pre> <ul> <li>Entrare nel terminale interattivo di un container in esecuzione:</li> </ul> <p>Suggerimento</p> <p>usa <code>docker ps</code> per utilizzare l'id del container nel comando seguente</p> <pre><code>docker exec -it my-container /bin/bash\n</code></pre> <ul> <li>Rimuovere un container</li> </ul> <pre><code>docker rm my-container\n</code></pre> <ul> <li>Rimuovere un container in esecuzione:</li> </ul> <pre><code>docker rm -f my-container\n</code></pre>"},{"location":"it/cheatsheets/linux/","title":"Traduzione in Italiano","text":""},{"location":"it/cheatsheets/linux/#title-guida-rapida-linux","title":"title: Guida rapida Linux","text":""},{"location":"it/cheatsheets/linux/#guida-rapida-linux","title":"Guida rapida Linux","text":""},{"location":"it/cheatsheets/linux/#panoramica","title":"Panoramica","text":"<p>I concetti base del lavoro in un sistema operativo Linux sono file e directory (cartelle) organizzati in una struttura ad albero all'interno di un ambiente.</p> <p>Quando accedi a un sistema Linux, stai lavorando in una shell in cui puoi operare su file e directory, eseguendo comandi che sono installati sul sistema. La shell Bash \u00e8 una shell comune e popolare che si trova tipicamente sui sistemi Linux.</p>"},{"location":"it/cheatsheets/linux/#navigazione-delle-directory","title":"Navigazione delle Directory","text":"<ul> <li>Entrare in una directory con percorso assoluto:</li> </ul> <pre><code>cd /dir1/dir2\n</code></pre> <ul> <li>Entrare in una directory con percorso relativo:</li> </ul> <pre><code>cd ./somedir\n</code></pre> <ul> <li>Salire di un livello nella directory:</li> </ul> <pre><code>cd ..\n</code></pre> <ul> <li>Salire di due livelli nella directory:</li> </ul> <pre><code>cd ../..\n</code></pre> <ul> <li>Tornare alla directory \"home\":</li> </ul> <pre><code>cd -\n</code></pre>"},{"location":"it/cheatsheets/linux/#gestione-dei-file","title":"Gestione dei File","text":"<ul> <li>Elencare i file nella directory corrente:</li> </ul> <pre><code>ls\n</code></pre> <ul> <li>Elencare i file nella directory corrente con maggiori dettagli:</li> </ul> <pre><code>ls -l\n</code></pre> <ul> <li>Elencare la radice del filesystem:</li> </ul> <pre><code>ls -l /\n</code></pre> <ul> <li>Creare un file vuoto:</li> </ul> <pre><code>touch foo.txt\n</code></pre> <ul> <li>Creare un file da un comando <code>echo</code>:</li> </ul> <pre><code>echo \"ciao\" &gt; test-file.txt\n</code></pre> <ul> <li>Visualizzare il contenuto di un file:</li> </ul> <pre><code>cat test-file.txt\n</code></pre> <ul> <li>Copiare un file:</li> </ul> <pre><code>cp file1 file2\n</code></pre> <ul> <li>Caratteri jolly: operare su pattern di file:</li> </ul> <pre><code>ls -l fil*  # corrisponde a file1 e file2\n</code></pre> <ul> <li>Concatenare due file in un nuovo file chiamato <code>newfile</code>:</li> </ul> <pre><code>cat file1 file2 &gt; newfile\n</code></pre> <ul> <li>Aggiungere un altro file a <code>newfile</code>:</li> </ul> <pre><code>cat file3 &gt;&gt; newfile\n</code></pre> <ul> <li>Eliminare un file:</li> </ul> <pre><code>rm newfile\n</code></pre> <ul> <li>Eliminare tutti i file con la stessa estensione:</li> </ul> <pre><code>rm *.dat\n</code></pre> <ul> <li>Creare una directory:</li> </ul> <pre><code>mkdir dir1\n</code></pre>"},{"location":"it/cheatsheets/linux/#concatenare-comandi-con-le-pipe","title":"Concatenare comandi con le pipe","text":"<p>Le pipe permettono a un utente di inviare l'output di un comando a un altro usando il simbolo pipe <code>|</code>:</p> <pre><code>echo \"ciao\" | sed 's/ciao/arrivederci/'\n</code></pre> <ul> <li>Filtrare gli output dei comandi usando grep:</li> </ul> <pre><code>echo \"id,titolo\" &gt; test-file.txt\necho \"1,uccelli\" &gt;&gt; test-file.txt\necho \"2,pesci\" &gt;&gt; test-file.txt\necho \"3,gatti\" &gt;&gt; test-file.txt\n\ncat test-file.txt | grep pesci\n</code></pre> <ul> <li>Ignorare maiuscole/minuscole:</li> </ul> <pre><code>grep -i PESCI test-file.txt\n</code></pre> <ul> <li>Contare le righe corrispondenti:</li> </ul> <pre><code>grep -c pesci test-file.txt\n</code></pre> <ul> <li>Restituire output che non contengono la parola chiave:</li> </ul> <pre><code>grep -v uccelli test-file.txt\n</code></pre> <ul> <li>Contare il numero di righe in <code>test-file.txt</code>:</li> </ul> <pre><code>wc -l test-file.txt\n</code></pre> <ul> <li>Visualizzare l'output una schermata alla volta:</li> </ul> <pre><code>more test-file.txt\n</code></pre> <p>...con controlli:</p> <ul> <li>Scorrere riga per riga: invio</li> <li>Andare alla pagina successiva: barra spaziatrice</li> <li> <p>Tornare indietro di una pagina: b</p> </li> <li> <p>Visualizzare le prime 3 righe del file:</p> </li> </ul> <pre><code>head -3 test-file.txt\n</code></pre> <ul> <li>Visualizzare le ultime 2 righe del file:</li> </ul> <pre><code>tail -2 test-file.txt\n</code></pre>"},{"location":"it/cheatsheets/wis2box/","title":"Foglio di riferimento per WIS2 in a box","text":""},{"location":"it/cheatsheets/wis2box/#panoramica","title":"Panoramica","text":"<p>wis2box funziona come una suite di comandi Docker Compose. Il comando <code>wis2box-ctl.py</code> \u00e8 un'utilit\u00e0 (scritta in Python) per eseguire facilmente i comandi Docker Compose.</p>"},{"location":"it/cheatsheets/wis2box/#comandi-essenziali-di-wis2box","title":"Comandi essenziali di wis2box","text":""},{"location":"it/cheatsheets/wis2box/#avvio-e-arresto","title":"Avvio e arresto","text":"<ul> <li>Avviare wis2box:</li> </ul> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <ul> <li>Arrestare wis2box:</li> </ul> <pre><code>python3 wis2box-ctl.py stop\n</code></pre> <ul> <li>Verificare che tutti i container wis2box siano in esecuzione:</li> </ul> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <ul> <li>Accedere a un container wis2box (wis2box-management per impostazione predefinita):</li> </ul> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <ul> <li>Accedere a un container wis2box specifico:</li> </ul> <pre><code>python3 wis2box-ctl.py login wis2box-api\n</code></pre>"},{"location":"it/csv2bufr-templates/aws-template/","title":"Template csv2bufr per Stazioni Meteorologiche Automatiche che riportano dati GBON orari","text":"<p>Il Template AWS utilizza un formato CSV standardizzato per acquisire dati dalle Stazioni Meteorologiche Automatiche a supporto dei requisiti di reportistica GBON. Questo template di mappatura converte i dati CSV nella sequenza BUFR 301150, 307096.</p> <p>Il formato \u00e8 destinato all'uso con stazioni meteorologiche automatiche che riportano un numero minimo di parametri, tra cui pressione, temperatura dell'aria e umidit\u00e0, velocit\u00e0 e direzione del vento e precipitazioni su base oraria.</p>"},{"location":"it/csv2bufr-templates/aws-template/#colonne-csv-e-descrizione","title":"Colonne CSV e descrizione","text":"Column Units Data type Description wsi_series Integer WIGOS identifier series wsi_issuer Integer WIGOS issuer of identifier wsi_issue_number Integer WIGOS issue number wsi_local Character WIGOS local identifier wmo_block_number Integer WMO block number wmo_station_number Integer WMO station number station_type Integer Type of observing station, encoding using code table 0 02 001 (set to 0, automatic) year Integer Year (UTC), the time of observation (based on the actual time the barometer is read) month Integer Month (UTC), the time of observation (based on the actual time the barometer is read) day Integer Day (UTC), the time of observation (based on the actual time the barometer is read) hour Integer Hour (UTC), the time of observation (based on the actual time the barometer is read) minute Integer Minute (UTC), the time of observation (based on the actual time the barometer is read) latitude degrees Decimal Latitude of the station (to 5 decimal places) longitude degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl meters Decimal Height of the station ground above mean sea level (to 1 decimal place) barometer_height_above_msl meters Decimal Height of the barometer above mean sea level (to 1 decimal place), typically height of station ground plus the height of the sensor above local ground station_pressure Pa Decimal Pressure observed at the station level to the nearest 10 pascals msl_pressure Pa Decimal Pressure reduced to mean sea level to the nearest 10 pascals geopotential_height gpm Integer Geoptential height expressed in geopotential meters (gpm) to 0 decimal places thermometer_height meters Decimal Height of thermometer or temperature sensor above the local ground to 2 decimal places air_temperature Kelvin Decimal Instantaneous air temperature to 2 decimal places dewpoint_temperature Kelvin Decimal Instantaneous dewpoint temperature to 2 decimal places relative_humidity % Integer Instantaneous relative humidity to zero decimal places method_of_ground_state_measurement code table Integer Method of observing the state of the ground, encoded using code table 0 02 176 ground_state code table Integer State of the ground encoded using code table 0 20 062 method_of_snow_depth_measurement code table Integer Method of observing the snow depth encoded using code table 0 02 177 snow_depth meters Decimal Snow depth at time of observation to 2 decimal places precipitation_intensity kg m-2 h-1 Decimal Intensity of precipitation at time of observation to 5 decimal places anemometer_height meters Decimal Height of the anemometer above local ground  to 2 decimal place time_period_of_wind minutes Integer Defines the time period over which the wind speed and direction have been averaged. Set to -10 to indicate a measurement period over the preceeding 10 minutes. wind_direction degrees Integer Wind direction (at anemometer height) averaged from the caterisan components over the indicated time period, 0 decimal places wind_speed ms-1 Decimal Wind speed (at anemometer height) averaged from the cartesian components over the indicated time period, 1 decimal place maximum_wind_gust_direction_10_minutes degrees Integer Highest 3 second average over the preceeding 10 minutes, 0 decimal places maximum_wind_gust_speed_10_minutes ms-1 Decimal Highest 3 second average over the preceeding 10 minutes, 1 decimal place maximum_wind_gust_direction_1_hour degrees Integer Highest 3 second average over the preceeding hour, 0 decimal places maximum_wind_gust_speed_1_hour ms-1 Decimal Highest 3 second average over the preceeding hour, 1 decimal place maximum_wind_gust_direction_3_hours degrees Integer Highest 3 second average over the preceeding 3 hours, 0 decimal places maximum_wind_gust_speed_3_hours ms-1 Decimal Highest 3 second average over the preceeding 3 hours, 1 decimal place rain_sensor_height meters Decimal Height of the rain gauge above local ground to 2 decimal place total_precipitation_1_hour kg m-2 Decimal Total precipitation over the past hour, 1 decimal place total_precipitation_3_hours kg m-2 Decimal Total precipitation over the past 3 hours, 1 decimal place total_precipitation_6_hours kg m-2 Decimal Total precipitation over the past 6 hours, 1 decimal place total_precipitation_12_hours kg m-2 Decimal Total precipitation over the past 12 hours, 1 decimal place total_precipitation_24_hours kg m-2 Decimal Total precipitation over the past 24 hours, 1 decimal place"},{"location":"it/csv2bufr-templates/aws-template/#esempio","title":"Esempio","text":"<p>File CSV di esempio conforme al template AWS: aws-example.csv.</p>"},{"location":"it/csv2bufr-templates/daycli-template/","title":"Traduzione in Italiano","text":""},{"location":"it/csv2bufr-templates/daycli-template/#title-template-daycli","title":"title: Template DAYCLI","text":""},{"location":"it/csv2bufr-templates/daycli-template/#template-csv2bufr-per-dati-climatici-giornalieri-daycli","title":"Template csv2bufr per dati climatici giornalieri (DAYCLI)","text":"<p>Il template DAYCLI fornisce un formato CSV standardizzato per convertire dati climatici giornalieri nella sequenza BUFR 307075.</p> <p>Il formato \u00e8 destinato all'uso con Sistemi di Gestione dei Dati Climatici per pubblicare dati su WIS2, a supporto dei requisiti di segnalazione per le osservazioni climatiche giornaliere.</p> <p>Questo template mappa le osservazioni giornaliere di:</p> <ul> <li>Temperatura minima, massima e media su un periodo di 24 ore</li> <li>Precipitazione totale accumulata su un periodo di 24 ore</li> <li>Profondit\u00e0 totale della neve al momento dell'osservazione</li> <li>Profondit\u00e0 della neve fresca su un periodo di 24 ore</li> </ul> <p>Questo template richiede metadati aggiuntivi rispetto al template AWS semplificato: metodo di calcolo della temperatura media; altezze del sensore e della stazione; classificazione dell'esposizione e della qualit\u00e0 della misurazione.</p> <p>Informazioni sul template DAYCLI</p> <p>Si prega di notare che la sequenza BUFR DAYCLI sar\u00e0 aggiornata durante il 2025 per includere informazioni aggiuntive e flag di controllo qualit\u00e0 rivisti. Il template DAYCLI incluso nel wis2box sar\u00e0 aggiornato per riflettere queste modifiche. La WMO comunicher\u00e0 quando il software wis2box sar\u00e0 aggiornato per includere il nuovo template DAYCLI, per consentire agli utenti di aggiornare i loro sistemi di conseguenza.</p>"},{"location":"it/csv2bufr-templates/daycli-template/#colonne-csv-e-descrizione","title":"Colonne CSV e descrizione","text":"Column Units Data Type Description wsi_series Integer WIGOS Identifier series, set to 0 for stations wsi_issuer Integer WIGOS Identifier issue, ISO 3 digit (number) country code or 20000 series wsi_issue_number Integer WIGOS Identifier issue number wsi_local Character WIGOS Identifier local identifier, alphanumeric, max 16 characters wmo_block_number Integer WMO block number for station 0 - 99 wmo_station_number Integer WMO station number 0 - 999 latitude Degrees Decimal Latitude of the station (to 5 decimal places) longitude Degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl Meters Decimal Height of the station ground above mean sea level (to 1 decimal place) temperature_siting_classification Integer Combined sensor siting and measurement quality classification (temperature). See references for siting classification precipitation_siting_classification Integer Combined sensor siting and measurement quality classification (precipitation). See references for siting classification averaging_method Integer Method used to calculate daily average temperature year Integer Year (UTC) of nominal reporting day month Integer Month (UTC) of nominal reporting day day Integer Day (UTC) of month for nominal reporting day precipitation_day_offset Integer Start of reporting period for precipitation, offset in days relative to nominal reporting day (-1 or 0) precipitation_hour Integer Beginning hour (UTC) over which the precipitation is measured precipitation_minute Integer Beginning minute (UTC) over which the precipitation is measured precipitation_second Integer Beginning second (UTC) over which the precipitation is measured precipitation kg m-2 Decimal Total accumulated precipitation over indicated 24 hour period (kg m-3, equivalent to mm) precipitation_flag Integer Quality control flag for total accumulated precipitation fresh_snow_day_offset Integer Start of reporting period for fresh snow depth, offset in days relative to nominal reporting day (-1 or 0) fresh_snow_hour Integer Beginning hour (UTC) over which the fresh snow depth is measured fresh_snow_minute Integer Beginning minute (UTC) over which the fresh snow depth is measured fresh_snow_second Integer Beginning second (UTC) over which the fresh snow depth is measured fresh_snow_depth Meters Decimal Fresh snow depth over indicated 24 hour period (m, 2 d.p.) fresh_snow_depth_flag Integer Quality control flag for the fresh snow depth total_snow_day_offset Integer Start of reporting period for total snow depth, offset in days relative to nominal reporting day (-1 or 0) total_snow_hour Integer Beginning hour (UTC) over which the total snow depth is measured total_snow_minute Integer Beginning minute (UTC) over which the total snow depth is measured total_snow_second Integer Beginning second (UTC) over which the total snow depth is measured total_snow_depth Meters Decimal Total snow depth over indicated 24 hour period (m, 2 d.p.) total_snow_depth_flag Integer Quality control flag for the total snow depth thermometer_height Meters Decimal Height of thermometer above local ground level (m) maximum_temperature_day_offset Integer Start of reporting period for maximum temperature, offset in days relative to nominal reporting day (-1 or 0) maximum_temperature_hour Integer Beginning hour (UTC) over which the maximum temmperature is measured maximum_temperature_minute Integer Beginning minute (UTC) over which the maximum temperature is measured maximum_temperature_second Integer Beginning second (UTC) over which the maximum temperature is measured maximum_temperature Kelvin Decimal Maximum temperature over indicated 24 hour period (K, 2 d.p.) maximum_temperature_flag Integer Quality control flag for the maximum temperature minimum_temperature_day_offset Integer Start of reporting period for minimum temperature, offset in days relative to nominal reporting day (-1 or 0) minimum_temperature_hour Integer Beginning hour (UTC) over which the minimum temmperature is measured minimum_temperature_minute Integer Beginning minute (UTC) over which the minimum temperature is measured minimum_temperature_second Integer Beginning second (UTC) over which the minimum temperature is measured minimum_temperature Kelvin Decimal Minimum temperature over indicated 24 hour period (K, 2 d.p.) minimum_temperature_flag Integer Quality control flag for the minimum temperature average_temperature_day_offset Integer Start of reporting period for average temperature, offset in days relative to nominal reporting day (-1 or 0) average_temperature_hour Integer Beginning hour (UTC) over which the average temmperature is measured average_temperature_minute Integer Beginning minute (UTC) over which the average temperature is measured average_temperature_second Integer Beginning second (UTC) over which the average temperature is measured average_temperature Kelvin Decimal Average temperature over indicated 24 hour period (K, 2 d.p.) average_temperature_flag Integer Quality control flag for the average temperature"},{"location":"it/csv2bufr-templates/daycli-template/#metodo-di-calcolo-della-media","title":"Metodo di calcolo della media","text":"Integer Description 0 Average of minimum and maximum temperatures 1 Average of 8 tri-hourly observations 2 Average of 24 hourly observations 3 Weighted average of three observations 4 Weighted average of three observations, as well as the minimum and maximum values 5 AWS complete integration from minute data 6 Average of 4 six-hourly observations"},{"location":"it/csv2bufr-templates/daycli-template/#flag-di-qualita","title":"Flag di qualit\u00e0","text":"Integer Description 0 Data checked and declared good 1 Data checked and declared suspect 2 Data checked and declared aggregated 3 Data checked and declared out of instrument range 4 Data checked and declared aggregated and out of instrument range 5 Parameter is not measured at the station 6 Daily value not provided 7 Data unchecked"},{"location":"it/csv2bufr-templates/daycli-template/#riferimenti-per-la-classificazione-del-sito","title":"Riferimenti per la classificazione del sito","text":"<p>Riferimento per \"temperature_siting_classification\".</p> <p>Riferimento per \"precipitation_siting_classification\".</p>"},{"location":"it/csv2bufr-templates/daycli-template/#esempio","title":"Esempio","text":"<p>File CSV di esempio conforme al template DAYCLI: daycli-example.csv.</p>"},{"location":"it/practical-sessions/accessing-your-student-vm/","title":"Accesso alla tua VM studente","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>accedere alla tua VM studente tramite SSH e WinSCP</li> <li>verificare che il software richiesto per gli esercizi pratici sia installato</li> <li>verificare di avere accesso ai materiali degli esercizi per questa formazione sulla tua VM studente locale</li> </ul>"},{"location":"it/practical-sessions/accessing-your-student-vm/#introduzione","title":"Introduzione","text":"<p>Come parte delle sessioni di formazione wis2box eseguite localmente, puoi accedere alla tua VM studente personale sulla rete di formazione locale denominata \"WIS2-training\".</p> <p>La tua VM studente ha il seguente software preinstallato:</p> <ul> <li>Ubuntu 22.0.4.3 LTS ubuntu-22.04.3-live-server-amd64.iso</li> <li>Python 3.10.12</li> <li>Docker 24.0.6</li> <li>Docker Compose 2.21.0</li> <li>Editor di testo: vim, nano</li> </ul> <p>Note</p> <p>Se desideri eseguire questa formazione al di fuori di una sessione di formazione locale, puoi fornire la tua istanza utilizzando qualsiasi provider cloud, ad esempio:</p> <ul> <li>GCP (Google Cloud Platform) istanza VM <code>e2-medium</code></li> <li>AWS (Amazon Web Services) istanza ec2 <code>t3a.medium</code> </li> <li>Azure (Microsoft) Macchina Virtuale Azure <code>standard_b2s</code></li> </ul> <p>Seleziona Ubuntu Server 22.0.4 LTS come sistema operativo.</p> <p>Dopo aver creato la tua VM, assicurati di aver installato python, docker e docker compose, come descritto in wis2box-software-dependencies.</p> <p>L'archivio della release per wis2box utilizzato in questa formazione pu\u00f2 essere scaricato come segue:</p> <pre><code>wget https://github.com/wmo-im/wis2box/releases/download/1.0.0rc1/wis2box-setup-1.0.0rc1.zip\nunzip wis2box-setup-1.0.0rc1.zip\n</code></pre> <p>Puoi sempre trovare l'archivio 'wis2box-setup' pi\u00f9 recente su https://github.com/wmo-im/wis2box/releases.</p> <p>Il materiale degli esercizi utilizzato in questa formazione pu\u00f2 essere scaricato come segue:</p> <pre><code>wget https://training.wis2box.wis.wmo.int/exercise-materials.zip\nunzip exercise-materials.zip\n</code></pre> <p>I seguenti pacchetti Python aggiuntivi sono necessari per eseguire i materiali degli esercizi:</p> <pre><code>pip3 install minio\n</code></pre> <p>Se stai utilizzando la VM studente fornita durante le sessioni di formazione WIS2 locali, il software richiesto sar\u00e0 gi\u00e0 installato.</p>"},{"location":"it/practical-sessions/accessing-your-student-vm/#connessione-alla-tua-vm-studente-sulla-rete-di-formazione-locale","title":"Connessione alla tua VM studente sulla rete di formazione locale","text":"<p>Connetti il tuo PC alla rete Wi-Fi locale trasmessa nella stanza durante la formazione WIS2 secondo le istruzioni fornite dal formatore.</p> <p>Utilizza un client SSH per connetterti alla tua VM studente utilizzando quanto segue:</p> <ul> <li>Host: (fornito durante la formazione in presenza)</li> <li>Porta: 22</li> <li>Nome utente: (fornito durante la formazione in presenza)</li> <li>Password: (fornita durante la formazione in presenza)</li> </ul> <p>Tip</p> <p>Contatta un formatore se non sei sicuro dell'hostname/nome utente o hai problemi di connessione.</p> <p>Una volta connesso, cambia la tua password per assicurarti che altri non possano accedere alla tua VM:</p> <pre><code>limper@student-vm:~$ passwd\nChanging password for testuser.\nCurrent password:\nNew password:\nRetype new password:\npasswd: password updated successfully\n</code></pre>"},{"location":"it/practical-sessions/accessing-your-student-vm/#verifica-delle-versioni-del-software","title":"Verifica delle versioni del software","text":"<p>Per poter eseguire wis2box, la VM studente dovrebbe avere Python, Docker e Docker Compose preinstallati.</p> <p>Controlla la versione di Python: <pre><code>python3 --version\n</code></pre> restituisce: <pre><code>Python 3.10.12\n</code></pre></p> <p>Controlla la versione di Docker: <pre><code>docker --version\n</code></pre> restituisce: <pre><code>Docker version 24.0.6, build ed223bc\n</code></pre></p> <p>Controlla la versione di Docker Compose: <pre><code>docker compose version\n</code></pre> restituisce: <pre><code>Docker Compose version v2.21.0\n</code></pre></p> <p>Per assicurarti che il tuo utente possa eseguire comandi Docker, il tuo utente \u00e8 stato aggiunto al gruppo <code>docker</code>.</p> <p>Per verificare che il tuo utente possa eseguire docker hello-world, esegui il seguente comando: <pre><code>docker run hello-world\n</code></pre></p> <p>Questo dovrebbe scaricare l'immagine hello-world ed eseguire un container che stampa un messaggio.</p> <p>Verifica di vedere quanto segue nell'output:</p> <pre><code>...\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n...\n</code></pre>"},{"location":"it/practical-sessions/accessing-your-student-vm/#ispeziona-i-materiali-degli-esercizi","title":"Ispeziona i materiali degli esercizi","text":"<p>Ispeziona il contenuto della tua directory home; questi sono i materiali utilizzati come parte della formazione e delle sessioni pratiche.</p> <p><pre><code>ls ~/\n</code></pre> restituisce: <pre><code>exercise-materials  wis2box-1.0.0rc1\n</code></pre></p> <p>Se hai WinSCP installato sul tuo PC locale, puoi utilizzarlo per connetterti alla tua VM studente e ispezionare il contenuto della tua directory home e scaricare o caricare file tra la tua VM e il tuo PC locale.</p> <p>WinSCP non \u00e8 richiesto per la formazione, ma pu\u00f2 essere utile se vuoi modificare file sulla tua VM utilizzando un editor di testo sul tuo PC locale.</p> <p>Ecco come puoi connetterti alla tua VM studente utilizzando WinSCP:</p> <p>Apri WinSCP e fai clic su \"New Site\". Puoi creare una nuova connessione SCP alla tua VM come segue:</p> <p></p> <p>Fai clic su 'Save' e poi su 'Login' per connetterti alla tua VM.</p> <p>E dovresti essere in grado di vedere il seguente contenuto:</p> <p></p>"},{"location":"it/practical-sessions/accessing-your-student-vm/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>accedere alla tua VM studente tramite SSH e WinSCP</li> <li>verificare che il software richiesto per gli esercizi pratici sia installato</li> <li>verificare di avere accesso ai materiali degli esercizi per questa formazione sulla tua VM studente locale</li> </ul>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/","title":"Aggiungere intestazioni GTS alle notifiche WIS2","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>configurare una mappatura tra nome del file e intestazioni GTS</li> <li>inserire dati con un nome file che corrisponde alle intestazioni GTS</li> <li>visualizzare le intestazioni GTS nelle notifiche WIS2</li> </ul>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#introduzione","title":"Introduzione","text":"<p>I Membri dell'OMM che desiderano interrompere la trasmissione dei loro dati sul GTS durante la fase di transizione al WIS2 dovranno aggiungere intestazioni GTS alle loro notifiche WIS2. Queste intestazioni consentono al gateway WIS2-GTS di inoltrare i dati alla rete GTS.</p> <p>Questo permette ai Membri che sono migrati all'utilizzo di un nodo WIS2 per la pubblicazione dei dati di disabilitare il loro sistema MSS e garantire che i loro dati siano ancora disponibili per i Membri non ancora migrati al WIS2.</p> <p>La propriet\u00e0 GTS nel Messaggio di Notifica WIS2 deve essere aggiunta come propriet\u00e0 aggiuntiva al Messaggio di Notifica WIS2. La propriet\u00e0 GTS \u00e8 un oggetto JSON che contiene le intestazioni GTS necessarie per l'inoltro dei dati alla rete GTS.</p> <pre><code>{\n  \"gts\": {\n    \"ttaaii\": \"FTAE31\",\n    \"cccc\": \"VTBB\"\n  }\n}\n</code></pre> <p>All'interno di wis2box puoi aggiungere questo alle Notifiche WIS2 automaticamente fornendo un file aggiuntivo chiamato <code>gts_headers_mapping.csv</code> che contiene le informazioni necessarie per mappare le intestazioni GTS ai nomi dei file in arrivo.</p> <p>Questo file dovrebbe essere posizionato nella directory definita da <code>WIS2BOX_HOST_DATADIR</code> nel tuo <code>wis2box.env</code> e dovrebbe avere le seguenti colonne:</p> <ul> <li><code>string_in_filepath</code>: una stringa che fa parte del nome del file che verr\u00e0 utilizzata per abbinare le intestazioni GTS</li> <li><code>TTAAii</code>: l'intestazione TTAAii da aggiungere alla notifica WIS2</li> <li><code>CCCC</code>: l'intestazione CCCC da aggiungere alla notifica WIS2</li> </ul>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#preparazione","title":"Preparazione","text":"<p>Assicurati di avere accesso SSH alla tua VM studente e che la tua istanza wis2box sia attiva e funzionante.</p> <p>Assicurati di essere connesso al broker MQTT della tua istanza wis2box utilizzando MQTT Explorer. Puoi utilizzare le credenziali pubbliche <code>everyone/everyone</code> per connetterti al broker.</p> <p>Assicurati di avere un browser web aperto con la dashboard Grafana per la tua istanza andando su <code>http://&lt;tuo-host&gt;:3000</code></p>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#creazione-di-gts_headers_mappingcsv","title":"Creazione di <code>gts_headers_mapping.csv</code>","text":"<p>Per aggiungere intestazioni GTS alle tue notifiche WIS2, \u00e8 necessario un file CSV che mappi le intestazioni GTS ai nomi dei file in arrivo.</p> <p>Il file CSV dovrebbe essere denominato (esattamente) <code>gts_headers_mapping.csv</code> e dovrebbe essere posizionato nella directory definita da <code>WIS2BOX_HOST_DATADIR</code> nel tuo <code>wis2box.env</code>.</p>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#esercizio-1-fornire-un-file-gts_headers_mappingcsv","title":"Esercizio 1: fornire un file <code>gts_headers_mapping.csv</code>","text":"<p>Copia il file <code>exercise-materials/gts-headers-exercises/gts_headers_mapping.csv</code> nella tua istanza wis2box e posizionalo nella directory definita da <code>WIS2BOX_HOST_DATADIR</code> nel tuo <code>wis2box.env</code>.</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/gts_headers_mapping.csv ~/wis2box-data\n</code></pre> <p>Quindi riavvia il container wis2box-management per applicare le modifiche:</p> <pre><code>docker restart wis2box-management\n</code></pre>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#esercizio-2-inserimento-di-dati-con-intestazioni-gts","title":"Esercizio 2: Inserimento di dati con intestazioni GTS","text":"<p>Copia il file <code>exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> nella directory definita da <code>WIS2BOX_HOST_DATADIR</code> nel tuo <code>wis2box.env</code>:</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt ~/wis2box-data\n</code></pre> <p>Quindi accedi al container wis2box-management:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Dalla riga di comando wis2box possiamo inserire il file di dati di esempio <code>A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> in un dataset specifico come segue:</p> <pre><code>wis2box data ingest -p /data/wis2box/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>Assicurati di sostituire l'opzione <code>metadata-id</code> con l'identificatore corretto per il tuo dataset.</p> <p>Controlla la dashboard Grafana per vedere se i dati sono stati inseriti correttamente. Se vedi AVVISI o ERRORI, cerca di correggerli e ripeti l'esercizio con il comando <code>wis2box data ingest</code>.</p>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#esercizio-3-visualizzazione-delle-intestazioni-gts-nella-notifica-wis2","title":"Esercizio 3: Visualizzazione delle intestazioni GTS nella Notifica WIS2","text":"<p>Vai su MQTT Explorer e controlla il Messaggio di Notifica WIS2 per i dati che hai appena inserito.</p> <p>Il Messaggio di Notifica WIS2 dovrebbe contenere le intestazioni GTS che hai fornito nel file <code>gts_headers_mapping.csv</code>.</p>"},{"location":"it/practical-sessions/adding-gts-headers-to-wis2-notifications/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:   - aggiungere intestazioni GTS alle tue notifiche WIS2   - verificare che le intestazioni GTS siano rese disponibili tramite la tua installazione wis2box</p>"},{"location":"it/practical-sessions/automating-data-ingestion/","title":"Automatizzazione dell'ingestione dei dati","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>comprendere come i plugin di dati del tuo dataset determinano il flusso di lavoro di ingestione dei dati</li> <li>inserire dati in wis2box utilizzando uno script con il client Python di MinIO</li> <li>inserire dati in wis2box accedendo a MinIO tramite SFTP</li> </ul>"},{"location":"it/practical-sessions/automating-data-ingestion/#introduzione","title":"Introduzione","text":"<p>Il container wis2box-management ascolta gli eventi dal servizio di archiviazione MinIO per attivare l'ingestione dei dati in base ai data-plugin configurati per il tuo dataset. Questo ti permette di caricare dati nel bucket MinIO e attivare il flusso di lavoro wis2box per pubblicare i dati sul broker WIS2.</p> <p>I data-plugin definiscono i moduli Python che vengono caricati dal container wis2box-management e determinano come i dati vengono trasformati e pubblicati.</p> <p>Nell'esercizio precedente dovresti aver creato un dataset utilizzando il modello <code>surface-based-observations/synop</code> che includeva i seguenti data-plugin:</p> <p></p> <p>Quando un file viene caricato su MinIO, wis2box abbiner\u00e0 il file a un dataset quando il percorso del file contiene l'ID del dataset (<code>metadata_id</code>) e determiner\u00e0 i plugin di dati da utilizzare in base all'estensione del file e al modello di file definito nelle mappature del dataset.</p> <p>Nelle sessioni precedenti, abbiamo attivato il flusso di lavoro di ingestione dei dati utilizzando la funzionalit\u00e0 della riga di comando wis2box, che carica i dati nell'archiviazione MinIO nel percorso corretto.</p> <p>Gli stessi passaggi possono essere eseguiti programmaticamente utilizzando qualsiasi software client MinIO o S3, permettendoti di automatizzare l'ingestione dei dati come parte dei tuoi flussi di lavoro operativi.</p> <p>In alternativa, puoi anche accedere a MinIO utilizzando il protocollo SFTP per caricare dati e attivare il flusso di lavoro di ingestione dei dati.</p>"},{"location":"it/practical-sessions/automating-data-ingestion/#preparazione","title":"Preparazione","text":"<p>Accedi alla tua VM studente utilizzando il tuo client SSH (PuTTY o altro).</p> <p>Assicurati che wis2box sia attivo e funzionante:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Assicurati che MQTT Explorer sia in esecuzione e connesso alla tua istanza. Se sei ancora connesso dalla sessione precedente, cancella eventuali messaggi precedenti che potresti aver ricevuto dalla coda. Questo pu\u00f2 essere fatto disconnettendosi e riconnettendosi o cliccando sull'icona del cestino per l'argomento specifico.</p> <p>Assicurati di avere un browser web aperto con la dashboard Grafana per la tua istanza andando su <code>http://&lt;tuo-host&gt;:3000</code></p> <p>E assicurati di avere una seconda scheda aperta con l'interfaccia utente MinIO su <code>http://&lt;tuo-host&gt;:9001</code>. Ricorda che devi accedere con <code>WIS2BOX_STORAGE_USER</code> e <code>WIS2BOX_STORAGE_PASSWORD</code> definiti nel tuo file <code>wis2box.env</code>.</p>"},{"location":"it/practical-sessions/automating-data-ingestion/#esercizio-1-configurare-uno-script-python-per-inserire-dati-in-minio","title":"Esercizio 1: configurare uno script Python per inserire dati in MinIO","text":"<p>In questo esercizio utilizzeremo il client Python di MinIO per copiare dati in MinIO.</p> <p>MinIO fornisce un client Python che pu\u00f2 essere installato come segue:</p> <pre><code>pip3 install minio\n</code></pre> <p>Sulla tua VM studente il pacchetto 'minio' per Python sar\u00e0 gi\u00e0 installato.</p> <p>Vai alla directory <code>exercise-materials/data-ingest-exercises</code>; questa directory contiene uno script di esempio <code>copy_file_to_incoming.py</code> che utilizza il client Python di MinIO per copiare un file in MinIO.</p> <p>Prova a eseguire lo script per copiare il file di dati di esempio <code>csv-aws-example.csv</code> nel bucket <code>wis2box-incoming</code> in MinIO come segue:</p> <pre><code>cd ~/exercise-materials/data-ingest-exercises\npython3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>Note</p> <p>Riceverai un errore poich\u00e9 lo script non \u00e8 ancora configurato per accedere all'endpoint MinIO sul tuo wis2box.</p> <p>Lo script deve conoscere l'endpoint corretto per accedere a MinIO sul tuo wis2box. Se wis2box \u00e8 in esecuzione sul tuo host, l'endpoint MinIO \u00e8 disponibile su <code>http://&lt;tuo-host&gt;:9000</code>. Lo script deve anche essere aggiornato con la tua password di archiviazione e il percorso nel bucket MinIO per memorizzare i dati.</p> <p>Aggiorna lo script e inserisci i dati CSV</p> <p>Modifica lo script <code>copy_file_to_incoming.py</code> per risolvere gli errori, utilizzando uno dei seguenti metodi: - Dalla riga di comando: usa l'editor di testo <code>nano</code> o <code>vim</code> per modificare lo script - Utilizzando WinSCP: avvia una nuova connessione utilizzando il protocollo file <code>SCP</code> e le stesse credenziali del tuo client SSH. Naviga nella directory <code>exercise-materials/data-ingest-exercises</code> e modifica <code>copy_file_to_incoming.py</code> utilizzando l'editor di testo integrato</p> <p>Assicurati di:</p> <ul> <li>definire l'endpoint MinIO corretto per il tuo host</li> <li>fornire la password di archiviazione corretta per la tua istanza MinIO</li> <li>fornire il percorso corretto nel bucket MinIO per memorizzare i dati</li> </ul> <p>Riesegui lo script per inserire il file di dati di esempio <code>csv-aws-example.csv</code> in MinIO:</p> <pre><code>python3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>E assicurati che gli errori siano risolti.</p> <p>Puoi verificare che i dati siano stati caricati correttamente controllando l'interfaccia utente MinIO e verificando se i dati di esempio sono disponibili nella directory corretta nel bucket <code>wis2box-incoming</code>.</p> <p>Puoi utilizzare la dashboard Grafana per controllare lo stato del flusso di lavoro di ingestione dei dati.</p> <p>Infine, puoi utilizzare MQTT Explorer per verificare se sono state pubblicate notifiche per i dati che hai inserito. Dovresti vedere che i dati CSV sono stati trasformati in formato BUFR e che \u00e8 stata pubblicata una notifica di dati WIS2 con un URL \"canonico\" per consentire il download dei dati BUFR.</p>"},{"location":"it/practical-sessions/automating-data-ingestion/#esercizio-2-ingestione-di-dati-binari","title":"Esercizio 2: Ingestione di dati binari","text":"<p>Successivamente, proviamo a inserire dati binari in formato BUFR utilizzando il client Python di MinIO.</p> <p>wis2box pu\u00f2 inserire dati binari in formato BUFR utilizzando il plugin <code>wis2box.data.bufr4.ObservationDataBUFR</code> incluso in wis2box.</p> <p>Questo plugin divider\u00e0 il file BUFR in singoli messaggi BUFR e pubblicher\u00e0 ciascun messaggio sul broker MQTT. Se la stazione per il messaggio BUFR corrispondente non \u00e8 definita nei metadati della stazione wis2box, il messaggio non verr\u00e0 pubblicato.</p> <p>Poich\u00e9 hai utilizzato il modello <code>surface-based-observations/synop</code> nella sessione precedente, le tue mappature di dati includono il plugin <code>FM-12 data converted to BUFR</code> per le mappature del dataset. Questo plugin carica il modulo <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code> per inserire i dati.</p> <p>Ingestione di dati binari in formato BUFR</p> <p>Esegui il seguente comando per copiare il file di dati binari <code>bufr-example.bin</code> nel bucket <code>wis2box-incoming</code> in MinIO:</p> <pre><code>python3 copy_file_to_incoming.py bufr-example.bin\n</code></pre> <p>Controlla la dashboard Grafana e MQTT Explorer per vedere se i dati di test sono stati inseriti e pubblicati con successo e se vedi errori, prova a risolverli.</p> <p>Verifica l'ingestione dei dati</p> <p>Quanti messaggi sono stati pubblicati sul broker MQTT per questo campione di dati?</p> Clicca per rivelare la risposta <p>Se hai inserito e pubblicato con successo l'ultimo campione di dati, dovresti aver ricevuto 10 nuove notifiche sul broker MQTT wis2box. Ogni notifica corrisponde ai dati di una stazione per un timestamp di osservazione.</p> <p>Il plugin <code>wis2box.data.bufr4.ObservationDataBUFR</code> divide il file BUFR in singoli messaggi BUFR e pubblica un messaggio per ogni stazione e timestamp di osservazione.</p>"},{"location":"it/practical-sessions/automating-data-ingestion/#esercizio-3-ingestione-di-dati-synop-in-formato-ascii","title":"Esercizio 3: Ingestione di dati SYNOP in formato ASCII","text":"<p>Nella sessione precedente abbiamo utilizzato il modulo SYNOP in wis2box-webapp per inserire dati SYNOP in formato ASCII. Puoi anche inserire dati SYNOP in formato ASCII caricando i dati in MinIO.</p> <p>Nella sessione precedente dovresti aver creato un dataset che includeva il plugin 'FM-12 data converted to BUFR' per le mappature del dataset:</p> <p></p> <p>Questo plugin carica il modulo <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code> per inserire i dati.</p> <p>Prova a utilizzare il client Python di MinIO per inserire i dati di test <code>synop-202307.txt</code> e <code>synop-202308.txt</code> nella tua istanza wis2box.</p> <p>Nota che i 2 file contengono lo stesso contenuto, ma il nome del file \u00e8 diverso. Il nome del file viene utilizzato per determinare la data del campione di dati.</p> <p>Il plugin synop2bufr si basa su un modello di file per estrarre la data dal nome del file. Il primo gruppo nell'espressione regolare viene utilizzato per estrarre l'anno e il secondo gruppo viene utilizzato per estrarre il mese.</p> <p>Inserisci dati SYNOP FM-12 in formato ASCII</p> <p>Torna all'interfaccia MinIO nel tuo browser e naviga nel bucket <code>wis2box-incoming</code> e nel percorso in cui hai caricato i dati di test nell'esercizio precedente.</p> <p>Carica i nuovi file nel percorso corretto nel bucket <code>wis2box-incoming</code> in MinIO per attivare il flusso di lavoro di ingestione dei dati.</p> <p>Controlla la dashboard Grafana e MQTT Explorer per vedere se i dati di test sono stati inseriti e pubblicati con successo.</p> <p>Qual \u00e8 la differenza nel <code>properties.datetime</code> tra i due messaggi pubblicati sul broker MQTT?</p> Clicca per rivelare la risposta <p>Controlla le propriet\u00e0 delle ultime 2 notifiche in MQTT Explorer e noterai che una notifica ha:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230703T090000\",\n    \"datetime\": \"2023-07-03T09:00:00Z\",\n    ...\n</code></pre> <p>e l'altra notifica ha:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230803T090000\",\n    \"datetime\": \"2023-08-03T09:00:00Z\",\n    ...\n</code></pre> <p>Il nome del file \u00e8 stato utilizzato per determinare l'anno e il mese del campione di dati.</p>"},{"location":"it/practical-sessions/automating-data-ingestion/#esercizio-4-ingestione-di-dati-in-minio-utilizzando-sftp","title":"Esercizio 4: Ingestione di dati in MinIO utilizzando SFTP","text":"<p>I dati possono anche essere inseriti in MinIO tramite SFTP.</p> <p>Il servizio MinIO abilitato nello stack wis2box ha SFTP abilitato sulla porta 8022. Puoi accedere a MinIO tramite SFTP utilizzando le stesse credenziali dell'interfaccia utente MinIO. In questo esercizio utilizzeremo le credenziali di amministratore per il servizio MinIO come definito in <code>wis2box.env</code>, ma puoi anche creare utenti aggiuntivi nell'interfaccia utente MinIO.</p> <p>Per accedere a MinIO tramite SFTP puoi utilizzare qualsiasi software client SFTP. In questo esercizio utilizzeremo WinSCP, che \u00e8 un client SFTP gratuito per Windows.</p> <p>Utilizzando WinSCP, la tua connessione apparir\u00e0 come segue:</p> <p></p> <p>Per nome utente e password, utilizza i valori delle variabili di ambiente <code>WIS2BOX_STORAGE_USERNAME</code> e <code>WIS2BOX_STORAGE_PASSWORD</code> dal tuo file <code>wis2box.env</code>. Clicca su 'salva' per salvare la sessione e poi su 'login' per connetterti.</p> <p>Quando accedi vedrai i bucket MinIO <code>wis2box-incoming</code> e <code>wis2box-public</code> nella directory principale. Puoi caricare dati nel bucket <code>wis2box-incoming</code> per attivare il flusso di lavoro di ingestione dei dati.</p> <p>Clicca sul bucket <code>wis2box-incoming</code> per navigare in questo bucket, quindi fai clic con il tasto destro e seleziona Nuovo-&gt;Directory per creare una nuova directory nel bucket <code>wis2box-incoming</code>.</p> <p>Crea la directory not-a-valid-path e carica il file randomfile.txt in questa directory (puoi utilizzare qualsiasi file tu voglia).</p> <p>Controlla la dashboard Grafana sulla porta 3000 per vedere se \u00e8 stato attivato il flusso di lavoro di ingestione dei dati. Dovresti vedere:</p> <p>ERROR - Path validation error: Could not match http://minio:9000/wis2box-incoming/not-a-valid-path/randomfile.txt to dataset, path should include one of the following: ...</p> <p>L'errore indica che il file \u00e8 stato caricato su MinIO e il flusso di lavoro di ingestione dei dati \u00e8 stato attivato, ma poich\u00e9 il percorso non corrisponde a nessun dataset nell'istanza wis2box, la mappatura dei dati \u00e8 fallita.</p> <p>Puoi anche utilizzare <code>sftp</code> dalla riga di comando:</p> <p><pre><code>sftp -P 8022 -oBatchMode=no -o StrictHostKeyChecking=no &lt;mio-hostname-o-ip&gt;\n</code></pre> Accedi utilizzando le credenziali definite in <code>wis2box.env</code> per le variabili di ambiente <code>WIS2BOX_STORAGE_USERNAME</code> e `WIS2BO</p>"},{"location":"it/practical-sessions/bufr-command-line-tools/","title":"Lavorare con i dati BUFR","text":"<p>Risultati di apprendimento</p> <p>In questa sessione pratica verrai introdotto ad alcuni degli strumenti BUFR inclusi nel container wis2box-api che vengono utilizzati per trasformare i dati in formato BUFR e per leggere il contenuto codificato in BUFR.</p> <p>Imparerai:</p> <ul> <li>come ispezionare le intestazioni nel file BUFR utilizzando il comando <code>bufr_ls</code></li> <li>come estrarre e ispezionare i dati all'interno di un file bufr utilizzando <code>bufr_dump</code></li> <li>la struttura di base dei modelli bufr utilizzati in csv2bufr e come utilizzare lo strumento da riga di comando</li> <li>e come apportare modifiche di base ai modelli bufr e come aggiornare il wis2box per utilizzare la versione rivista</li> </ul>"},{"location":"it/practical-sessions/bufr-command-line-tools/#introduzione","title":"Introduzione","text":"<p>I plugin che producono notifiche con dati BUFR utilizzano processi nel wis2box-api per lavorare con i dati BUFR, ad esempio per trasformare i dati da CSV a BUFR o da BUFR a geojson.</p> <p>Il container wis2box-api include numerosi strumenti per lavorare con i dati BUFR.</p> <p>Questi includono gli strumenti sviluppati da ECMWF e inclusi nel software ecCodes, maggiori informazioni su questi possono essere  trovate sul sito web ecCodes.</p> <p>In questa sessione verrai introdotto a <code>bufr_ls</code> e <code>bufr_dump</code> dal pacchetto software ecCodes e alla configurazione avanzata dello strumento csv2bufr.</p>"},{"location":"it/practical-sessions/bufr-command-line-tools/#preparazione","title":"Preparazione","text":"<p>Per utilizzare gli strumenti da riga di comando BUFR dovrai essere connesso al container wis2box-api e, salvo diversa indicazione, tutti i comandi dovrebbero essere eseguiti su questo container. Avrai anche bisogno di avere MQTT Explorer aperto e connesso al tuo broker.</p> <p>Prima connettiti alla tua VM studente tramite il tuo client ssh e poi accedi al container wis2box-api:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login wis2box-api\n</code></pre> <p>Conferma che gli strumenti siano disponibili, iniziando con ecCodes:</p> <p><pre><code>bufr_dump -V\n</code></pre> Dovresti ottenere la seguente risposta:</p> <pre><code>ecCodes Version 2.28.0\n</code></pre> <p>Poi controlla csv2bufr:</p> <pre><code>csv2bufr --version\n</code></pre> <p>Dovresti ottenere la seguente risposta:</p> <pre><code>csv2bufr, version 0.7.4\n</code></pre> <p>Infine, crea una directory di lavoro in cui operare:</p> <pre><code>cd /data/wis2box\nmkdir -p working/bufr-cli\ncd working/bufr-cli\n</code></pre> <p>Ora sei pronto per iniziare a utilizzare gli strumenti BUFR.</p>"},{"location":"it/practical-sessions/bufr-command-line-tools/#utilizzo-degli-strumenti-da-riga-di-comando-bufr","title":"Utilizzo degli strumenti da riga di comando BUFR","text":""},{"location":"it/practical-sessions/bufr-command-line-tools/#esercizio-1-bufr_ls","title":"Esercizio 1 - bufr_ls","text":"<p>In questo primo esercizio utilizzerai il comando <code>bufr_ls</code> per ispezionare le intestazioni di un file BUFR e determinare il  contenuto del file. Le seguenti intestazioni sono incluse in un file BUFR:</p> intestazione chiave ecCodes descrizione centro di origine/generazione centre Il centro di origine/generazione dei dati sotto-centro di origine/generazione bufrHeaderSubCentre Il sotto-centro di origine/generazione dei dati Numero di sequenza di aggiornamento updateSequenceNumber Se questa \u00e8 la prima versione dei dati (0) o un aggiornamento (&gt;0) Categoria di dati dataCategory Il tipo di dati contenuti nel messaggio BUFR, es. dati di superficie. Vedi BUFR Table A Sottocategoria internazionale di dati internationalDataSubCategory Il sottotipo di dati contenuti nel messaggio BUFR, es. dati di superficie. Vedi Common Code Table C-13 Anno typicalYear (typicalDate) Tempo pi\u00f9 tipico per i contenuti del messaggio BUFR Mese typicalMonth (typicalDate) Tempo pi\u00f9 tipico per i contenuti del messaggio BUFR Giorno typicalDay (typicalDate) Tempo pi\u00f9 tipico per i contenuti del messaggio BUFR Ora typicalHour (typicalTime) Tempo pi\u00f9 tipico per i contenuti del messaggio BUFR Minuto typicalMinute (typicalTime) Tempo pi\u00f9 tipico per i contenuti del messaggio BUFR Descrittori BUFR unexpandedDescriptors Elenco di uno o pi\u00f9 descrittori BUFR che definiscono i dati contenuti nel file <p>Scarica il file di esempio direttamente nel container wis2box-management utilizzando il seguente comando:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex1.bufr4 --output bufr-cli-ex1.bufr4\n</code></pre> <p>Ora usa il seguente comando per eseguire <code>bufr_ls</code> su questo file:</p> <pre><code>bufr_ls bufr-cli-ex1.bufr4\n</code></pre> <p>Dovresti vedere il seguente output:</p> <pre><code>bufr-cli-ex1.bufr4\ncentre                     masterTablesVersionNumber  localTablesVersionNumber   typicalDate                typicalTime                numberOfSubsets\ncnmc                       29                         0                          20231002                   000000                     1\n1 of 1 messages in bufr-cli-ex1.bufr4\n\n1 of 1 total messages in 1 files\n</code></pre> <p>Da solo, questo output non \u00e8 molto informativo, con solo informazioni limitate sul contenuto del file.</p> <p>L'output predefinito non fornisce informazioni sul tipo di osservazione o dati ed \u00e8 in un formato che non \u00e8 molto facile da leggere. Tuttavia, varie opzioni possono essere passate a <code>bufr_ls</code> per modificare sia il formato che i campi di intestazione  stampati.</p> <p>Usa <code>bufr_ls</code> senza argomenti per visualizzare le opzioni:</p> <pre><code>bufr_ls\n</code></pre> <p>Dovresti vedere il seguente output:</p> <pre><code>NAME    bufr_ls\n\nDESCRIPTION\n        List content of BUFR files printing values of some header keys.\n        Only scalar keys can be printed.\n        It does not fail when a key is not found.\n\nUSAGE\n        bufr_ls [options] bufr_file bufr_file ...\n\nOPTIONS\n        -p key[:{s|d|i}],key[:{s|d|i}],...\n                Declaration of keys to print.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be requested. Default type is string.\n        -F format\n                C style format for floating-point values.\n        -P key[:{s|d|i}],key[:{s|d|i}],...\n                As -p adding the declared keys to the default list.\n        -w key[:{s|d|i}]{=|!=}value,key[:{s|d|i}]{=|!=}value,...\n                Where clause.\n                Messages are processed only if they match all the key/value constraints.\n                A valid constraint is of type key=value or key!=value.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be specified. Default type is string.\n                In the value you can also use the forward-slash character '/' to specify an OR condition (i.e. a logical disjunction)\n                Note: only one -w clause is allowed.\n        -j      JSON output\n        -s key[:{s|d|i}]=value,key[:{s|d|i}]=value,...\n                Key/values to set.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be defined. By default the native type is set.\n        -n namespace\n                All the keys belonging to the given namespace are printed.\n        -m      Mars keys are printed.\n        -V      Version.\n        -W width\n                Minimum width of each column in output. Default is 10.\n        -g      Copy GTS header.\n        -7      Does not fail when the message has wrong length\n\nSEE ALSO\n        Full documentation and examples at:\n        &lt;https://confluence.ecmwf.int/display/ECC/bufr_ls&gt;\n</code></pre> <p>Ora esegui lo stesso comando sul file di esempio ma visualizza le informazioni in JSON.</p> <p>Question</p> <p>Quale flag passi al comando <code>bufr_ls</code> per visualizzare l'output in formato JSON?</p> Clicca per rivelare la risposta <p>Puoi cambiare il formato di output in json usando il flag <code>-j</code>, cio\u00e8 <code>bufr_ls -j &lt;input-file&gt;</code>. Questo pu\u00f2 essere pi\u00f9 leggibile del formato di output predefinito. Vedi l'esempio di output qui sotto:</p> <pre><code>{ \"messages\" : [\n  {\n    \"centre\": \"cnmc\",\n    \"masterTablesVersionNumber\": 29,\n    \"localTablesVersionNumber\": 0,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\",\n    \"numberOfSubsets\": 1\n  }\n]}\n</code></pre> <p>Quando si esamina un file BUFR, spesso vogliamo determinare il tipo di dati contenuti nel file e la data/ora tipica dei dati nel file. Queste informazioni possono essere elencate utilizzando il flag <code>-p</code> per selezionare le intestazioni da visualizzare. \u00c8 possibile includere pi\u00f9 intestazioni utilizzando un elenco separato da virgole.</p> <p>Utilizzando il comando <code>bufr_ls</code>, ispeziona il file di test e identifica il tipo di dati contenuti nel file e la data e l'ora tipiche per quei dati.</p> Hint <p>Le chiavi ecCodes sono fornite nella tabella sopra. Possiamo usare quanto segue per elencare dataCategory e internationalDataSubCategory dei dati BUFR:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory bufr-cli-ex1.bufr4\n</code></pre> <p>\u00c8 possibile aggiungere ulteriori chiavi secondo necessit\u00e0.</p> <p>Question</p> <p>Che tipo di dati (categoria di dati e sottocategoria) sono contenuti nel file? Qual \u00e8 la data e l'ora tipica per i dati?</p> Clicca per rivelare la risposta <p>Il comando che devi eseguire dovrebbe essere simile a:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory,typicalDate,typicalTime -j bufr-cli-ex1.bufr4\n</code></pre> <p>Potresti avere chiavi aggiuntive, o aver elencato anno, mese, giorno ecc. individualmente. L'output dovrebbe essere simile a quello sotto, a seconda che tu abbia selezionato JSON o output predefinito.</p> <pre><code>{ \"messages\" : [\n  {\n    \"dataCategory\": 2,\n    \"internationalDataSubCategory\": 4,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\"\n  }\n]}\n</code></pre> <p>Da questo vediamo che:</p> <ul> <li>La categoria di dati \u00e8 2, dalla BUFR Table A   possiamo vedere che questo file contiene dati di \"Sondaggi verticali (diversi da satellite)\".</li> <li>La sottocategoria internazionale \u00e8 4, che indica    \"Rapporti di temperatura/umidit\u00e0/vento in quota da stazioni terrestri fisse (TEMP)\". Questa informazione pu\u00f2 essere cercata   nella Common Code Table C-13 (riga 33). Nota la combinazione   di categoria e sottocategoria.</li> <li>La data e l'ora tipiche sono rispettivamente 2023/10/02 e 00:00:00z.</li> </ul>"},{"location":"it/practical-sessions/bufr-command-line-tools/#esercizio-2-bufr_dump","title":"Esercizio 2 - bufr_dump","text":"<p>Il comando <code>bufr_dump</code> pu\u00f2 essere utilizzato per elencare ed esaminare il contenuto di un file BUFR, inclusi i dati stessi.</p> <p>In questo esercizio utilizzeremo un file BUFR che \u00e8 lo stesso che hai creato durante la sessione pratica iniziale di csv2bufr utilizzando wis2box-webapp.</p> <p>Scarica il file di esempio nel container wis2box management direttamente con il seguente comando:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex2.bufr4 --output bufr-cli-ex2.bufr4\n</code></pre> <p>Ora esegui il comando <code>bufr_dump</code> sul file, utilizzando il flag <code>-p</code> per visualizzare i dati in testo semplice (formato chiave=valore):</p> <pre><code>bufr_dump -p bufr-cli-ex2.bufr4\n</code></pre> <p>Dovresti vedere circa 240 chiavi in output, molte delle quali mancanti. Questo \u00e8 tipico con dati del mondo reale poich\u00e9 non tutte le chiavi eccodes sono popolate con dati riportati.</p> <p>Hint</p> <p>I valori mancanti possono essere filtrati utilizzando strumenti come <code>grep</code>: <pre><code>bufr_dump -p bufr-cli-ex2.bufr4 | grep -v MISSING\n</code></pre></p> <p>Il file BUFR di esempio per questo esercizio proviene dalla sessione pratica csv2bufr. Scarica il file CSV originale nella tua posizione corrente come segue:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/csv2bufr-ex1.csv --output csv2bufr-ex1.csv\n</code></pre> <p>E visualizza il contenuto del file con:</p> <pre><code>more csv2bufr-ex1.csv\n</code></pre> <p>Question</p> <p>Usa il seguente comando per visualizzare la colonna 18 nel file CSV e troverai la pressione a livello del mare riportata (msl_pressure):</p> <pre><code>more csv2bufr-ex1.csv | cut -d ',' -f 18\n</code></pre> <p>Quale chiave nell'output BUFR corrisponde alla pressione a livello del mare?</p> Hint <p>Strumenti come <code>grep</code> possono essere utilizzati in combinazione con <code>bufr_dump</code>. Per esempio:</p> <p>```{.copy} bufr_dump -p bufr-cli-ex2.bufr4 </p>"},{"location":"it/practical-sessions/configuring-station-metadata/","title":"Configurazione dei metadati della stazione","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>creare un token di autorizzazione per l'endpoint <code>collections/stations</code></li> <li>aggiungere metadati della stazione a wis2box</li> <li>aggiornare/eliminare i metadati della stazione utilizzando wis2box-webapp</li> </ul>"},{"location":"it/practical-sessions/configuring-station-metadata/#introduzione","title":"Introduzione","text":"<p>Per la condivisione di dati a livello internazionale tra i Membri dell'OMM, \u00e8 importante avere una comprensione comune delle stazioni che producono i dati. Il Sistema Globale Integrato di Osservazione dell'OMM (WIGOS) fornisce un quadro per l'integrazione dei sistemi di osservazione e dei sistemi di gestione dei dati. L'Identificatore di Stazione WIGOS (WSI) viene utilizzato come riferimento univoco della stazione che ha prodotto uno specifico set di dati di osservazione.</p> <p>wis2box ha una raccolta di metadati delle stazioni che viene utilizzata per descrivere le stazioni che producono i dati di osservazione e dovrebbe essere recuperata da OSCAR/Surface. I metadati delle stazioni in wis2box sono utilizzati dagli strumenti di trasformazione BUFR per verificare che i dati di input contengano un Identificatore di Stazione WIGOS (WSI) valido e per fornire una mappatura tra il WSI e i metadati della stazione.</p>"},{"location":"it/practical-sessions/configuring-station-metadata/#creare-un-token-di-autorizzazione-per-collectionsstations","title":"Creare un token di autorizzazione per collections/stations","text":"<p>Per modificare le stazioni tramite wis2box-webapp dovrai prima creare un token di autorizzazione.</p> <p>Accedi alla tua VM studente e assicurati di essere nella directory <code>wis2box-1.0.0rc1</code>:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Quindi accedi al container wis2box-management con il seguente comando:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>All'interno del container wis2box-management puoi creare un token di autorizzazione per un endpoint specifico utilizzando il comando: <code>wis2box auth add-token --path &lt;my-endpoint&gt;</code>.</p> <p>Ad esempio, per utilizzare un token generato automaticamente casuale per l'endpoint <code>collections/stations</code>:</p> <pre><code>wis2box auth add-token --path collections/stations\n</code></pre> <p>L'output sar\u00e0 simile a questo:</p> <pre><code>Continue with token: 7ca20386a131f0de384e6ffa288eb1ae385364b3694e47e3b451598c82e899d1 [y/N]? y\nToken successfully created\n</code></pre> <p>Oppure, se vuoi definire il tuo token per l'endpoint <code>collections/stations</code>, puoi utilizzare il seguente esempio:</p> <pre><code>wis2box auth add-token --path collections/stations DataIsMagic\n</code></pre> <p>Output:</p> <pre><code>Continue with token: DataIsMagic [y/N]? y\nToken successfully created\n</code></pre> <p>Per favore crea un token di autorizzazione per l'endpoint <code>collections/stations</code> utilizzando le istruzioni sopra.</p>"},{"location":"it/practical-sessions/configuring-station-metadata/#aggiungere-metadati-della-stazione-utilizzando-wis2box-webapp","title":"Aggiungere metadati della stazione utilizzando wis2box-webapp","text":"<p>wis2box-webapp fornisce un'interfaccia grafica utente per modificare i metadati della stazione.</p> <p>Apri wis2box-webapp nel tuo browser navigando su <code>http://&lt;tuo-host&gt;/wis2box-webapp</code>:</p> <p></p> <p>E seleziona stazioni:</p> <p></p> <p>Quando fai clic su 'add new station' ti viene chiesto di fornire l'identificatore della stazione WIGOS per la stazione che desideri aggiungere:</p> <p></p> <p>Aggiungi metadati della stazione per 3 o pi\u00f9 stazioni</p> <p>Per favore aggiungi tre o pi\u00f9 stazioni alla collezione di metadati delle stazioni del tuo wis2box.</p> <p>Utilizza stazioni del tuo paese se possibile, specialmente se hai portato i tuoi dati.</p> <p>Se il tuo paese non ha stazioni in OSCAR/Surface, puoi utilizzare le seguenti stazioni per lo scopo di questo esercizio:</p> <ul> <li>0-20000-0-91334</li> <li>0-20000-0-96323 (nota l'elevazione della stazione mancante in OSCAR)</li> <li>0-20000-0-96749 (nota l'elevazione della stazione mancante in OSCAR)</li> </ul> <p>Quando fai clic su search, i dati della stazione vengono recuperati da OSCAR/Surface, tieni presente che questo pu\u00f2 richiedere alcuni secondi.</p> <p>Rivedi i dati restituiti da OSCAR/Surface e aggiungi i dati mancanti dove necessario. Seleziona un argomento per la stazione e fornisci il tuo token di autorizzazione per l'endpoint <code>collections/stations</code> e fai clic su 'save':</p> <p></p> <p></p> <p>Torna all'elenco delle stazioni e vedrai la stazione che hai aggiunto:</p> <p></p> <p>Ripeti questo processo finch\u00e9 non hai configurato almeno 3 stazioni.</p> <p>Derivare informazioni sull'elevazione mancanti</p> <p>Se l'elevazione della tua stazione \u00e8 mancante, ci sono servizi online per aiutare a cercare l'elevazione utilizzando dati di elevazione aperti. Un esempio \u00e8 l'API Open Topo Data.</p> <p>Ad esempio, per ottenere l'elevazione alla latitudine -6.15558 e longitudine 106.84204, puoi copiare-incollare il seguente URL in una nuova scheda del browser:</p> <pre><code>https://api.opentopodata.org/v1/aster30m?locations=-6.15558,106.84204\n</code></pre> <p>Output:</p> <pre><code>{\n  \"results\": [\n    {\n      \"dataset\": \"aster30m\", \n      \"elevation\": 7.0, \n      \"location\": {\n        \"lat\": -6.15558, \n        \"lng\": 106.84204\n      }\n    }\n  ], \n  \"status\": \"OK\"\n}\n</code></pre>"},{"location":"it/practical-sessions/configuring-station-metadata/#revisione-dei-metadati-della-stazione","title":"Revisione dei metadati della stazione","text":"<p>I metadati della stazione sono memorizzati nel backend di wis2box e resi disponibili tramite wis2box-api.</p> <p>Se apri un browser e navighi su <code>http://&lt;tuo-host&gt;/oapi/collections/stations/items</code> vedrai i metadati della stazione che hai aggiunto:</p> <p></p> <p>Revisione dei metadati della stazione</p> <p>Verifica che le stazioni che hai aggiunto siano associate al tuo dataset visitando <code>http://&lt;tuo-host&gt;/oapi/collections/stations/items</code> nel tuo browser.</p> <p>Hai anche la possibilit\u00e0 di visualizzare/aggiornare/eliminare la stazione in wis2box-webapp. Nota che \u00e8 necessario fornire il token di autorizzazione per l'endpoint <code>collections/stations</code> per aggiornare/eliminare la stazione.</p> <p>Aggiornare/eliminare i metadati della stazione</p> <p>Prova a vedere se puoi aggiornare/eliminare i metadati della stazione per una delle stazioni che hai aggiunto utilizzando wis2box-webapp.</p>"},{"location":"it/practical-sessions/configuring-station-metadata/#caricamento-in-blocco-dei-metadati-della-stazione","title":"Caricamento in blocco dei metadati della stazione","text":"<p>Nota che wis2box ha anche la capacit\u00e0 di eseguire il caricamento \"in blocco\" dei metadati della stazione da un file CSV utilizzando la riga di comando nel container wis2box-management.</p> <pre><code>python3 wis2box-ctl.py login\nwis2box metadata station publish-collection -p /data/wis2box/metadata/station/station_list.csv -th origin/a/wis2/centre-id/weather/surface-based-observations/synop\n</code></pre> <p>Questo ti permette di caricare un gran numero di stazioni contemporaneamente e associarle a un argomento specifico.</p> <p>Puoi creare il file CSV utilizzando Excel o un editor di testo e quindi caricarlo su wis2box-host-datadir per renderlo disponibile al container wis2box-management nella directory <code>/data/wis2box/</code>.</p> <p>Dopo aver fatto un caricamento in blocco di stazioni, si consiglia di rivedere le stazioni in wis2box-webapp per assicurarsi che i dati siano stati caricati correttamente.</p> <p>Consulta la documentazione ufficiale di wis2box per ulteriori informazioni su come utilizzare questa funzionalit\u00e0.</p>"},{"location":"it/practical-sessions/configuring-station-metadata/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>creare un token di autorizzazione per l'endpoint <code>collections/stations</code> da utilizzare con wis2box-webapp</li> <li>aggiungere metadati della stazione a wis2box utilizzando wis2box-webapp</li> <li>visualizzare/aggiornare/eliminare i metadati della stazione utilizzando wis2box-webapp</li> </ul>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/","title":"Configurazione dei dataset in wis2box","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>creare un nuovo dataset</li> <li>creare metadati di scoperta per un dataset</li> <li>configurare le mappature dei dati per un dataset</li> <li>pubblicare una notifica WIS2 con un record WCMP2</li> <li>aggiornare e ripubblicare il tuo dataset</li> </ul>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#introduzione","title":"Introduzione","text":"<p>wis2box utilizza dataset che sono associati a metadati di scoperta e mappature di dati.</p> <p>I metadati di scoperta vengono utilizzati per creare un record WCMP2 (WMO Core Metadata Profile 2) che viene condiviso utilizzando una notifica WIS2 pubblicata sul tuo wis2box-broker.</p> <p>Le mappature dei dati vengono utilizzate per associare un plugin di dati ai tuoi dati di input, consentendo ai tuoi dati di essere trasformati prima di essere pubblicati utilizzando la notifica WIS2.</p> <p>Questa sessione ti guider\u00e0 attraverso la creazione di un nuovo dataset, la creazione di metadati di scoperta e la configurazione delle mappature dei dati. Esaminerai il tuo dataset nel wis2box-api e rivedrai la notifica WIS2 per i tuoi metadati di scoperta.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#preparazione","title":"Preparazione","text":"<p>Connettiti al tuo broker utilizzando MQTT Explorer.</p> <p>Invece di utilizzare le credenziali del tuo broker interno, utilizza le credenziali pubbliche <code>everyone/everyone</code>:</p> <p></p> <p>Note</p> <p>Non \u00e8 mai necessario condividere le credenziali del tuo broker interno con utenti esterni. L'utente 'everyone' \u00e8 un utente pubblico per consentire la condivisione delle notifiche WIS2.</p> <p>Le credenziali <code>everyone/everyone</code> hanno accesso in sola lettura all'argomento 'origin/a/wis2/#'. Questo \u00e8 l'argomento in cui vengono pubblicate le notifiche WIS2. Il Global Broker pu\u00f2 sottoscriversi con queste credenziali pubbliche per ricevere le notifiche.</p> <p>L'utente 'everyone' non vedr\u00e0 argomenti interni n\u00e9 potr\u00e0 pubblicare messaggi.</p> <p>Apri un browser e apri una pagina su <code>http://&lt;tuo-host&gt;/wis2box-webapp</code>. Assicurati di aver effettuato l'accesso e di poter accedere alla pagina 'dataset editor'.</p> <p>Consulta la sezione su Inizializzazione di wis2box se hai bisogno di ricordare come connetterti al broker o accedere al wis2box-webapp.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#creare-un-token-di-autorizzazione-per-processeswis2box","title":"Creare un token di autorizzazione per processes/wis2box","text":"<p>Avrai bisogno di un token di autorizzazione per l'endpoint 'processes/wis2box' per pubblicare il tuo dataset.</p> <p>Per creare un token di autorizzazione, accedi alla tua VM di formazione tramite SSH e utilizza i seguenti comandi per accedere al container wis2box-management:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Quindi esegui il seguente comando per creare un token di autorizzazione generato casualmente per l'endpoint 'processes/wis2box':</p> <pre><code>wis2box auth add-token --path processes/wis2box\n</code></pre> <p>Puoi anche creare un token con un valore specifico fornendo il token come argomento al comando:</p> <pre><code>wis2box auth add-token --path processes/wis2box MyS3cretToken\n</code></pre> <p>Assicurati di copiare il valore del token e di conservarlo sul tuo computer locale, poich\u00e9 ne avrai bisogno in seguito.</p> <p>Una volta ottenuto il token, puoi uscire dal container wis2box-management:</p> <pre><code>exit\n</code></pre>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#creazione-di-un-nuovo-dataset-nel-wis2box-webapp","title":"Creazione di un nuovo dataset nel wis2box-webapp","text":"<p>Naviga alla pagina 'dataset editor' nel wis2box-webapp della tua istanza wis2box andando su <code>http://&lt;tuo-host&gt;/wis2box-webapp</code> e selezionando 'dataset editor' dal menu sul lato sinistro.</p> <p>Nella pagina 'dataset editor', sotto la scheda 'Datasets', fai clic su \"Create New ...\":</p> <p></p> <p>Apparir\u00e0 una finestra pop-up, che ti chieder\u00e0 di fornire:</p> <ul> <li>Centre ID: questo \u00e8 l'acronimo dell'agenzia (in minuscolo e senza spazi), come specificato dal Membro WMO, che identifica il centro dati responsabile della pubblicazione dei dati.</li> <li>Data Type: Il tipo di dati per cui stai creando metadati. Puoi scegliere tra l'utilizzo di un modello predefinito o selezionare 'other'. Se viene selezionato 'other', dovranno essere compilati manualmente pi\u00f9 campi.</li> </ul> <p>Centre ID</p> <p>Il tuo centre-id dovrebbe iniziare con il TLD del tuo paese, seguito da un trattino (<code>-</code>) e un nome abbreviato della tua organizzazione (ad esempio <code>fr-meteofrance</code>). Il centre-id deve essere in minuscolo e utilizzare solo caratteri alfanumerici. L'elenco a discesa mostra tutti i centre-id attualmente registrati su WIS2 e qualsiasi centre-id che hai gi\u00e0 creato in wis2box.</p> <p>Modelli di tipo di dati</p> <p>Il campo Data Type ti consente di selezionare da un elenco di modelli disponibili nell'editor di dataset wis2box-webapp. Un modello precompiler\u00e0 il modulo con valori predefiniti suggeriti appropriati per il tipo di dati. Ci\u00f2 include titolo e parole chiave suggeriti per i metadati e plugin di dati preconfigurati. L'argomento sar\u00e0 fissato all'argomento predefinito per il tipo di dati.</p> <p>Ai fini della formazione utilizzeremo il tipo di dati weather/surface-based-observations/synop che include plugin di dati che garantiscono che i dati vengano trasformati in formato BUFR prima di essere pubblicati.</p> <p>Se desideri pubblicare avvisi CAP utilizzando wis2box, utilizza il modello weather/advisories-warnings. Questo modello include un plugin di dati che verifica che i dati di input siano un avviso CAP valido prima della pubblicazione. Per creare avvisi CAP e pubblicarli tramite wis2box puoi utilizzare CAP Composer.</p> <p>Scegli un centre-id appropriato per la tua organizzazione.</p> <p>Per Data Type, seleziona weather/surface-based-observations/synop:</p> <p></p> <p>Fai clic su continue to form per procedere, ti verr\u00e0 ora presentato il Dataset Editor Form.</p> <p>Poich\u00e9 hai selezionato il tipo di dati weather/surface-based-observations/synop, il modulo sar\u00e0 precompilato con alcuni valori iniziali relativi a questo tipo di dati.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#creazione-di-metadati-di-scoperta","title":"Creazione di metadati di scoperta","text":"<p>Il Dataset Editor Form ti consente di fornire i Metadati di Scoperta per il tuo dataset che il container wis2box-management utilizzer\u00e0 per pubblicare un record WCMP2.</p> <p>Poich\u00e9 hai selezionato il tipo di dati 'weather/surface-based-observations/synop', il modulo sar\u00e0 precompilato con alcuni valori predefiniti.</p> <p>Assicurati di sostituire il 'Local ID' generato automaticamente con un nome descrittivo per il tuo dataset, ad esempio 'synop-dataset-wis2training':</p> <p></p> <p>Rivedi il titolo e le parole chiave, aggiornali se necessario e fornisci una descrizione per il tuo dataset.</p> <p>Nota che ci sono opzioni per modificare la 'WMO Data Policy' da 'core' a 'recommended' o per modificare il tuo Metadata Identifier predefinito, mantieni data-policy come 'core' e utilizza il Metadata Identifier predefinito.</p> <p>Successivamente, rivedi la sezione che definisce le tue 'Temporal Properties' e 'Spatial Properties'. Puoi regolare il riquadro di delimitazione aggiornando i campi 'North Latitude', 'South Latitude', 'East Longitude' e 'West Longitude':</p> <p></p> <p>Successivamente, compila la sezione che definisce le 'Contact Information of the Data Provider':</p> <p></p> <p>Infine, compila la sezione che definisce le 'Data Quality Information':</p> <p>Una volta completata la compilazione di tutte le sezioni, fai clic su 'VALIDATE FORM' e controlla il modulo per eventuali errori:</p> <p></p> <p>Se ci sono errori, correggili e fai di nuovo clic su 'VALIDATE FORM'.</p> <p>Assicurati di non avere errori e di ottenere un'indicazione pop-up che il tuo modulo \u00e8 stato convalidato:</p> <p></p> <p>Successivamente, prima di inviare il tuo dataset, rivedi le mappature dei dati per il tuo dataset.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#configurazione-delle-mappature-dei-dati","title":"Configurazione delle mappature dei dati","text":"<p>Poich\u00e9 hai utilizzato un modello per creare il tuo dataset, le mappature del dataset sono state precompilate con i plugin predefiniti per il tipo di dati 'weather/surface-based-observations/synop'. I plugin di dati vengono utilizzati nel wis2box per trasformare i dati prima che vengano pubblicati utilizzando la notifica WIS2.</p> <p></p> <p>Nota che puoi fare clic sul pulsante \"update\" per modificare le impostazioni del plugin come l'estensione del file e il pattern del file, puoi lasciare le impostazioni predefinite per ora. In una sessione successiva, imparerai di pi\u00f9 su BUFR e sulla trasformazione dei dati in formato BUFR.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#invio-del-tuo-dataset","title":"Invio del tuo dataset","text":"<p>Infine, puoi fare clic su 'submit' per pubblicare il tuo dataset.</p> <p>Dovrai fornire il token di autorizzazione per 'processes/wis2box' che hai creato in precedenza. Se non l'hai fatto, puoi creare un nuovo token seguendo le istruzioni nella sezione di preparazione.</p> <p>Verifica di ricevere il seguente messaggio dopo aver inviato il tuo dataset, che indica che il dataset \u00e8 stato inviato con successo:</p> <p></p> <p>Dopo aver fatto clic su 'OK', verrai reindirizzato alla home page dell'Editor di Dataset. Ora, se fai clic sulla scheda 'Dataset', dovresti vedere il tuo nuovo dataset elencato:</p> <p></p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#revisione-della-notifica-wis2-per-i-tuoi-metadati-di-scoperta","title":"Revisione della notifica WIS2 per i tuoi metadati di scoperta","text":"<p>Vai su MQTT Explorer, se eri connesso al broker, dovresti vedere una nuova notifica WIS2 pubblicata sull'argomento <code>origin/a/wis2/&lt;tuo-centre-id&gt;/metadata</code>:</p> <p></p> <p>Ispeziona il contenuto della notifica WIS2 che hai pubblicato. Dovresti vedere un JSON con una struttura corrispondente al formato WIS Notification Message (WNM).</p> <p>Question</p> <p>Su quale argomento viene pubblicata la notifica WIS2?</p> Clicca per rivelare la risposta <p>La notifica WIS2 viene pubblicata sull'argomento <code>origin/a/wis2/&lt;tuo-centre-id&gt;/metadata</code>.</p> <p>Question</p> <p>Prova a trovare il titolo, la descrizione e le parole chiave che hai fornito nei metadati di scoperta nella notifica WIS2. Riesci a trovarli?</p> Clicca per rivelare la risposta <p>Nota che il titolo, la descrizione e le parole chiave che hai fornito nei metadati di scoperta non sono presenti nel payload della notifica WIS2!</p> <p>Invece, prova a cercare il link canonico nella sezione \"links\" nella notifica WIS2:</p> <p></p> <p>La notifica WIS2 contiene un link canonico al record WCMP2 che \u00e8 stato pubblicato. Se copi e incolli questo link in un browser, scaricherai il record WCMP2 e vedrai il titolo, la descrizione e le parole chiave che hai fornito.</p>"},{"location":"it/practical-sessions/configuring-wis2box-datasets/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>creare un nuovo dataset</li> <li>definire i tuoi metadati di scoperta</li> <li>rivedere le tue mappature dei dati</li> <li>pubblicare metadati di scoperta</li> <li>rivedere la notifica WIS2 per i tuoi metadati di scoperta</li> </ul>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/","title":"Connessione a WIS2 tramite MQTT","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>connetterti al Broker Globale WIS2 utilizzando MQTT Explorer</li> <li>esaminare la struttura dei topic WIS2</li> <li>esaminare la struttura dei messaggi di notifica WIS2</li> </ul>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#introduzione","title":"Introduzione","text":"<p>WIS2 utilizza il protocollo MQTT per pubblicizzare la disponibilit\u00e0 di dati meteorologici/climatici/idrici. Il Broker Globale WIS2 si sottoscrive a tutti i Nodi WIS2 nella rete e ripubblica i messaggi che riceve. La Global Cache si sottoscrive al Broker Globale, scarica i dati nel messaggio e poi ripubblica il messaggio sul topic <code>cache</code> con un nuovo URL. Il Catalogo Globale di Scoperta pubblica i metadati di scoperta dal Broker e fornisce un'API di ricerca.</p> <p>Questo \u00e8 un esempio della struttura del messaggio di notifica WIS2 per un messaggio ricevuto sul topic <code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code>:</p> <pre><code>{\n  \"id\": \"59f9b013-c4b3-410a-a52d-fff18f3f1b47\",\n  \"type\": \"Feature\",\n  \"version\": \"v04\",\n  \"geometry\": {\n    \"coordinates\": [\n      -38.69389,\n      -17.96472,\n      60\n    ],\n    \"type\": \"Point\"\n  },\n  \"properties\": {\n    \"data_id\": \"br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000\",\n    \"datetime\": \"2024-08-15T06:00:00Z\",\n    \"pubtime\": \"2024-08-15T09:52:02Z\",\n    \"integrity\": {\n      \"method\": \"sha512\",\n      \"value\": \"TBuWycx/G0lIiTo47eFPBViGutxcIyk7eikppAKPc4aHgOmTIS5Wb9+0v3awMOyCgwpFhTruRRCVReMQMp5kYw==\"\n    },\n    \"content\": {\n      \"encoding\": \"base64\",\n      \"value\": \"QlVGUgAA+gQAABYAACsAAAAAAAIAHAAH6AgPBgAAAAALAAABgMGWx1AAAM0ABOIAAAODM0OTkAAAAAAAAAAAAAAKb5oKEpJ6YkJ6mAAAAAAAAAAAAAAAAv0QeYA29WQa87ZhH4CQP//z+P//BD////+ASznXuUb///8MgAS3/////8X///e+AP////AB/+R/yf////////////////////6/1/79H/3///gEt////////4BLP6QAf/+/pAB//4H0YJ/YeAh/f2///7TH/////9+j//f///////////////////v0f//////////////////////wNzc3Nw==\",\n      \"size\": 250\n    },\n    \"wigos_station_identifier\": \"0-76-2-2900801000W83499\"\n  },\n  \"links\": [\n    {\n      \"rel\": \"canonical\",\n      \"type\": \"application/bufr\",\n      \"href\": \"http://wis2bra.inmet.gov.br/data/2024-08-15/wis/br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000.bufr4\",\n      \"length\": 250\n    }\n  ]\n}\n</code></pre> <p>In questa sessione pratica imparerai come utilizzare lo strumento MQTT Explorer per configurare una connessione client MQTT a un Broker Globale WIS2 e visualizzare i messaggi di notifica WIS2.</p> <p>MQTT Explorer \u00e8 uno strumento utile per navigare ed esaminare la struttura dei topic per un determinato broker MQTT e rivedere i dati pubblicati.</p> <p>Nota che MQTT \u00e8 principalmente utilizzato per la comunicazione \"macchina-macchina\"; ci\u00f2 significa che normalmente ci sarebbe un client che analizza automaticamente i messaggi man mano che vengono ricevuti. Per lavorare con MQTT in modo programmatico (ad esempio, in Python), puoi utilizzare librerie client MQTT come paho-mqtt per connetterti a un broker MQTT ed elaborare i messaggi in arrivo. Esistono numerosi software client e server MQTT, a seconda dei tuoi requisiti e dell'ambiente tecnico.</p>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#utilizzo-di-mqtt-explorer-per-connettersi-al-broker-globale","title":"Utilizzo di MQTT Explorer per connettersi al Broker Globale","text":"<p>Per visualizzare i messaggi pubblicati da un Broker Globale WIS2 puoi utilizzare \"MQTT Explorer\" che pu\u00f2 essere scaricato dal sito web di MQTT Explorer.</p> <p>Apri MQTT Explorer e aggiungi una nuova connessione al Broker Globale ospitato da MeteoFrance utilizzando i seguenti dettagli:</p> <ul> <li>host: globalbroker.meteo.fr</li> <li>porta: 8883</li> <li>nome utente: everyone</li> <li>password: everyone</li> </ul> <p></p> <p>Clicca sul pulsante 'ADVANCED', rimuovi i topic preconfigurati e aggiungi i seguenti topic a cui sottoscriverti:</p> <ul> <li><code>origin/a/wis2/#</code></li> </ul> <p></p> <p>Note</p> <p>Quando configuri le sottoscrizioni MQTT puoi utilizzare i seguenti caratteri jolly:</p> <ul> <li>Livello singolo (+): un carattere jolly a livello singolo sostituisce un livello di topic</li> <li>Multi-livello (#): un carattere jolly multi-livello sostituisce pi\u00f9 livelli di topic</li> </ul> <p>In questo caso <code>origin/a/wis2/#</code> si sottoscriver\u00e0 a tutti i topic sotto il topic <code>origin/a/wis2</code>.</p> <p>Clicca su 'BACK', poi 'SAVE' per salvare i dettagli della connessione e della sottoscrizione. Quindi clicca su 'CONNECT':</p> <p>I messaggi dovrebbero iniziare ad apparire nella tua sessione MQTT Explorer come segue:</p> <p></p> <p>Ora sei pronto per iniziare a esplorare i topic WIS2 e la struttura dei messaggi.</p>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#esercizio-1-esaminare-la-struttura-dei-topic-wis2","title":"Esercizio 1: Esaminare la struttura dei topic WIS2","text":"<p>Usa MQTT per navigare nella struttura dei topic sotto i topic <code>origin</code>.</p> <p>Question</p> <p>Come possiamo distinguere il centro WIS che ha pubblicato i dati?</p> Clicca per rivelare la risposta <p>Puoi cliccare sul lato sinistro della finestra in MQTT Explorer per espandere la struttura dei topic.</p> <p>Possiamo distinguere il centro WIS che ha pubblicato i dati guardando il quarto livello della struttura del topic. Ad esempio, il seguente topic:</p> <p><code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code></p> <p>ci dice che i dati sono stati pubblicati da un centro WIS con l'ID centro <code>br-inmet</code>, che \u00e8 l'ID centro per l'Instituto Nacional de Meteorologia - INMET, Brasile.</p> <p>Question</p> <p>Come possiamo distinguere tra i messaggi pubblicati dai centri WIS che ospitano un gateway GTS-to-WIS2 e i messaggi pubblicati dai centri WIS che ospitano un nodo WIS2?</p> Clicca per rivelare la risposta <p>Possiamo distinguere i messaggi provenienti dal gateway GTS-to-WIS2 guardando l'ID centro nella struttura del topic. Ad esempio, il seguente topic:</p> <p><code>origin/a/wis2/de-dwd-gts-to-wis2/data/core/I/S/A/I/01/sbbr</code></p> <p>ci dice che i dati sono stati pubblicati dal gateway GTS-to-WIS2 ospitato dal Deutscher Wetterdienst (DWD), Germania. Il gateway GTS-to-WIS2 \u00e8 un tipo speciale di pubblicatore di dati che pubblica dati dal Global Telecommunication System (GTS) a WIS2. La struttura del topic \u00e8 composta dalle intestazioni TTAAii CCCC per i messaggi GTS.</p>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#esercizio-2-esaminare-la-struttura-dei-messaggi-wis2","title":"Esercizio 2: Esaminare la struttura dei messaggi WIS2","text":"<p>Disconnettiti da MQTT Explorer e aggiorna le sezioni 'Advanced' per modificare la sottoscrizione come segue:</p> <ul> <li><code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> <li><code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> </ul> <p></p> <p>Note</p> <p>Il carattere jolly <code>+</code> viene utilizzato per sottoscriversi a tutti i centri WIS.</p> <p>Riconnettiti al Broker Globale e attendi che appaiano i messaggi.</p> <p>Puoi visualizzare il contenuto del messaggio WIS2 nella sezione \"Value\" sul lato destro. Prova a espandere la struttura del topic per vedere i diversi livelli del messaggio fino a raggiungere l'ultimo livello ed esaminare il contenuto di uno dei messaggi.</p> <p>Question</p> <p>Come possiamo identificare il timestamp di pubblicazione dei dati? E come possiamo identificare il timestamp di raccolta dei dati?</p> Clicca per rivelare la risposta <p>Il timestamp di pubblicazione dei dati \u00e8 contenuto nella sezione <code>properties</code> del messaggio con una chiave <code>pubtime</code>.</p> <p>Il timestamp di raccolta dei dati \u00e8 contenuto nella sezione <code>properties</code> del messaggio con una chiave <code>datetime</code>.</p> <p></p> <p>Question</p> <p>Come possiamo scaricare i dati dall'URL fornito nel messaggio?</p> Clicca per rivelare la risposta <p>L'URL \u00e8 contenuto nella sezione <code>links</code> con <code>rel=\"canonical\"</code> e definito dalla chiave <code>href</code>.</p> <p>Puoi copiare l'URL e incollarlo in un browser web per scaricare i dati.</p>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#esercizio-3-esaminare-la-differenza-tra-i-topic-origin-e-cache","title":"Esercizio 3: Esaminare la differenza tra i topic 'origin' e 'cache'","text":"<p>Assicurati di essere ancora connesso al Broker Globale utilizzando le sottoscrizioni ai topic <code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code> e <code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code> come descritto nell'Esercizio 2.</p> <p>Cerca di identificare un messaggio per lo stesso ID centro pubblicato sia sui topic <code>origin</code> che <code>cache</code>.</p> <p>Question</p> <p>Qual \u00e8 la differenza tra i messaggi pubblicati sui topic <code>origin</code> e <code>cache</code>?</p> Clicca per rivelare la risposta <p>I messaggi pubblicati sui topic <code>origin</code> sono i messaggi originali che il Broker Globale ripubblica dai Nodi WIS2 nella rete.</p> <p>I messaggi pubblicati sui topic <code>cache</code> sono i messaggi per i dati che sono stati scaricati dalla Global Cache. Se controlli il contenuto del messaggio dal topic che inizia con <code>cache</code>, vedrai che il link 'canonical' \u00e8 stato aggiornato con un nuovo URL.</p> <p>Ci sono pi\u00f9 Global Cache nella rete WIS2, quindi riceverai un messaggio da ciascuna Global Cache che ha scaricato il messaggio.</p> <p>La Global Cache scaricher\u00e0 e ripubblicher\u00e0 solo i messaggi che sono stati pubblicati nella gerarchia di topic <code>../data/core/...</code>.</p>"},{"location":"it/practical-sessions/connecting-to-wis2-over-mqtt/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato:</p> <ul> <li>come sottoscriverti ai servizi del Broker Globale WIS2 utilizzando MQTT Explorer</li> <li>la struttura dei topic WIS2</li> <li>la struttura dei messaggi di notifica WIS2</li> <li>la differenza tra dati core e raccomandati</li> <li>la struttura dei topic utilizzata dal gateway GTS-to-WIS2</li> <li>la differenza tra i messaggi del Broker Globale pubblicati sui topic <code>origin</code> e <code>cache</code></li> </ul>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/","title":"Conversione dei dati CSV in BUFR","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>utilizzare l'interfaccia MinIO per caricare file di dati CSV di input e monitorare il risultato</li> <li>conoscere il formato dei dati CSV da utilizzare con il modello BUFR predefinito per stazioni meteorologiche automatiche</li> <li>utilizzare l'editor di dataset nella webapp wis2box per creare un dataset per la pubblicazione di messaggi DAYCLI</li> <li>conoscere il formato dei dati CSV da utilizzare con il modello BUFR DAYCLI</li> <li>utilizzare la webapp wis2box per validare e convertire dati di esempio per stazioni AWS in BUFR (opzionale)</li> </ul>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#introduzione","title":"Introduzione","text":"<p>I file di dati con valori separati da virgole (CSV) sono spesso utilizzati per registrare dati osservativi e altri dati in formato tabellare.  La maggior parte dei data logger utilizzati per registrare l'output dei sensori \u00e8 in grado di esportare le osservazioni in file delimitati, incluso il formato CSV. Analogamente, quando i dati vengono inseriti in un database, \u00e8 facile esportare i dati richiesti in file formattati CSV.  Per facilitare lo scambio di dati originariamente memorizzati in formati di dati tabulari, \u00e8 stato implementato un convertitore da CSV a BUFR nel  wis2box utilizzando lo stesso software utilizzato per la conversione da SYNOP a BUFR.</p> <p>In questa sessione imparerai a utilizzare il convertitore csv2bufr nel wis2box per i seguenti modelli integrati:</p> <ul> <li>AWS (aws-template.json): Modello di mappatura per convertire dati CSV da file semplificato di stazione meteorologica automatica alla sequenza BUFR 301150, 307096\"</li> <li>DayCLI (daycli-template.json): Modello di mappatura per convertire dati climatici giornalieri CSV alla sequenza BUFR 307075</li> </ul>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#preparazione","title":"Preparazione","text":"<p>Assicurati che wis2box-stack sia stato avviato con <code>python3 wis2box.py start</code></p> <p>Assicurati di avere un browser web aperto con l'interfaccia MinIO per la tua istanza andando su <code>http://&lt;tuo-host&gt;:9000</code> Se non ricordi le tue credenziali MinIO, puoi trovarle nel file <code>wis2box.env</code> nella directory <code>wis2box-1.0.0rc1</code> sulla tua VM studente.</p> <p>Assicurati di avere MQTT Explorer aperto e connesso al tuo broker utilizzando le credenziali <code>everyone/everyone</code>.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#esercizio-1-utilizzo-di-csv2bufr-con-il-modello-aws","title":"Esercizio 1: Utilizzo di csv2bufr con il modello 'AWS'","text":"<p>Il modello 'AWS' fornisce un modello di mappatura predefinito per convertire dati CSV dalle stazioni AWS a supporto dei requisiti di segnalazione GBON.</p> <p>La descrizione del modello AWS pu\u00f2 essere trovata qui.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#revisione-dei-dati-di-input-aws-example","title":"Revisione dei dati di input aws-example","text":"<p>Scarica l'esempio per questo esercizio dal link sottostante:</p> <p>aws-example.csv</p> <p>Apri il file scaricato in un editor e ispeziona il contenuto:</p> <p>Question</p> <p>Esaminando i campi di data, ora e identificazione (identificatori WIGOS e tradizionali) cosa  noti? Come verrebbe rappresentata la data odierna?</p> Clicca per rivelare la risposta <p>Ogni colonna contiene un singolo pezzo di informazione. Ad esempio, la data \u00e8 suddivisa in anno, mese e giorno, rispecchiando come i dati sono memorizzati in BUFR. La data odierna sarebbe  suddivisa nelle colonne \"year\", \"month\" e \"day\". Analogamente, l'ora deve essere suddivisa in \"hour\" e \"minute\" e l'identificatore della stazione WIGOS nei suoi rispettivi componenti.</p> <p>Question</p> <p>Guardando il file di dati, come vengono codificati i dati mancanti?</p> Clicca per rivelare la risposta <p>I dati mancanti all'interno del file sono rappresentati da celle vuote. In un file CSV questo sarebbe codificato come <code>,,</code>. Nota che questa \u00e8 una cella vuota e non codificata come una stringa di lunghezza zero,  ad esempio <code>,\"\",</code>.</p> <p>Dati mancanti</p> <p>\u00c8 riconosciuto che i dati possono mancare per vari motivi, sia a causa di guasti dei sensori  sia perch\u00e9 il parametro non viene osservato. In questi casi, i dati mancanti possono essere codificati come nella risposta sopra, gli altri dati nel rapporto rimangono validi.</p> <p>Question</p> <p>Quali sono gli identificatori di stazione WIGOS per le stazioni che riportano dati nel file di esempio? Come sono definiti nel file di input?</p> Clicca per rivelare la risposta <p>L'identificatore di stazione WIGOS \u00e8 definito da 4 colonne separate nel file:</p> <ul> <li>wsi_series: Serie identificativa WIGOS</li> <li>wsi_issuer: Emittente dell'identificatore WIGOS</li> <li>wsi_issue_number: Numero di emissione WIGOS</li> <li>wsi_local: Identificatore locale WIGOS</li> </ul> <p>Gli identificatori di stazione WIGOS utilizzati nel file di esempio sono <code>0-20000-0-60351</code>, <code>0-20000-0-60355</code> e <code>0-20000-0-60360</code>.  </p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#aggiorna-il-file-di-esempio","title":"Aggiorna il file di esempio","text":"<p>Aggiorna il file di esempio che hai scaricato per utilizzare la data e l'ora odierne e cambia gli identificatori di stazione WIGOS per utilizzare le stazioni che hai registrato nella webapp wis2box.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#carica-i-dati-su-minio-e-controlla-il-risultato","title":"Carica i dati su MinIO e controlla il risultato","text":"<p>Naviga nell'interfaccia MinIO e accedi utilizzando le credenziali dal file <code>wis2box.env</code>.</p> <p>Naviga in wis2box-incoming e clicca sul pulsante \"Create new path\":</p> <p></p> <p>Crea una nuova cartella nel bucket MinIO che corrisponda all'ID del dataset che hai creato con il modello='weather/surface-weather-observations/synop':</p> <p></p> <p>Carica il file di esempio che hai scaricato nella cartella che hai creato nel bucket MinIO:</p> <p></p> <p>Controlla il dashboard Grafana su <code>http://&lt;tuo-host&gt;:3000</code> per vedere se ci sono AVVISI o ERRORI. Se ne vedi, prova a correggerli e ripeti l'esercizio.</p> <p>Controlla MQTT Explorer per vedere se ricevi notifiche di dati WIS2.</p> <p>Se hai caricato correttamente i dati, dovresti vedere 3 notifiche in MQTT explorer sul topic <code>origin/a/wis2/&lt;centre-id&gt;/data/weather/surface-weather-observations/synop</code> per le 3 stazioni per cui hai riportato dati:</p> <p></p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#esercizio-2-utilizzo-del-modello-daycli","title":"Esercizio 2 - Utilizzo del modello 'DayCLI'","text":"<p>Nell'esercizio precedente abbiamo utilizzato il dataset che hai creato con Data-type='weather/surface-weather-observations/synop', che ha preconfigurato il modello di conversione da CSV a BUFR al modello AWS.</p> <p>Nel prossimo esercizio utilizzeremo il modello 'DayCLI' per convertire dati climatici giornalieri in BUFR.</p> <p>La descrizione del modello DAYCLI pu\u00f2 essere trovata qui.</p> <p>Sul modello DAYCLI</p> <p>Si prega di notare che la sequenza BUFR DAYCLI sar\u00e0 aggiornata durante il 2025 per includere informazioni aggiuntive e flag QC rivisti. Il modello DAYCLI incluso nel wis2box sar\u00e0 aggiornato per riflettere queste modifiche. La WMO comunicher\u00e0 quando il software wis2box sar\u00e0 aggiornato per includere il nuovo modello DAYCLI, per consentire agli utenti di aggiornare i loro sistemi di conseguenza.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#creazione-di-un-dataset-wis2box-per-la-pubblicazione-di-messaggi-daycli","title":"Creazione di un dataset wis2box per la pubblicazione di messaggi DAYCLI","text":"<p>Vai all'editor di dataset nella webapp wis2box e crea un nuovo dataset. Usa lo stesso centre-id delle sessioni pratiche precedenti e seleziona Data Type='climate/surface-based-observations/daily':</p> <p></p> <p>Clicca su \"CONTINUE TO FORM\" e aggiungi una descrizione per il tuo dataset, imposta il riquadro di delimitazione e fornisci le informazioni di contatto per il dataset. Una volta completata la compilazione di tutte le sezioni, clicca su 'VALIDATE FORM' e controlla il modulo.</p> <p>Rivedi i plugin di dati per i dataset. Clicca su \"UPDATE\" accanto al plugin con nome \"CSV data converted to BUFR\" e vedrai che il modello \u00e8 impostato su DayCLI:</p> <p></p> <p>Chiudi la configurazione del plugin e invia il modulo utilizzando il token di autenticazione che hai creato nella sessione pratica precedente.</p> <p>Ora dovresti avere un secondo dataset nella webapp wis2box configurato per utilizzare il modello DAYCLI per convertire dati CSV in BUFR.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#revisione-dei-dati-di-input-daycli-example","title":"Revisione dei dati di input daycli-example","text":"<p>Scarica l'esempio per questo esercizio dal link sottostante:</p> <p>daycli-example.csv</p> <p>Apri il file scaricato in un editor e ispeziona il contenuto:</p> <p>Question</p> <p>Quali variabili aggiuntive sono incluse nel modello daycli?</p> Clicca per rivelare la risposta <p>Il modello daycli include importanti metadati sul posizionamento degli strumenti e sulle classificazioni di qualit\u00e0 delle misurazioni per temperatura e umidit\u00e0, flag di controllo qualit\u00e0 e informazioni su come \u00e8 stata calcolata la temperatura media giornaliera.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#aggiorna-il-file-di-esempio_1","title":"Aggiorna il file di esempio","text":"<p>Il file di esempio contiene una riga di dati per ogni giorno del mese e riporta dati per una stazione. Aggiorna il file di esempio che hai scaricato per utilizzare la data e l'ora odierne e cambia gli identificatori di stazione WIGOS per utilizzare una stazione che hai registrato nella webapp wis2box.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#carica-i-dati-su-minio-e-controlla-il-risultato_1","title":"Carica i dati su MinIO e controlla il risultato","text":"<p>Come prima, dovrai caricare i dati nel bucket 'wis2box-incoming' in MinIO per essere elaborati dal convertitore csv2bufr. Questa volta dovrai creare una nuova cartella nel bucket MinIO che corrisponda all'ID del dataset che hai creato con il modello='climate/surface-based-observations/daily', che sar\u00e0 diverso dall'ID del dataset che hai utilizzato nell'esercizio precedente:</p> <p></p> <p>Dopo aver caricato i dati, verifica che non ci siano AVVISI o ERRORI nel dashboard Grafana e controlla MQTT Explorer per vedere se ricevi notifiche di dati WIS2.</p> <p>Se hai caricato correttamente i dati, dovresti vedere 30 notifiche in MQTT explorer sul topic <code>origin/a/wis2/&lt;centre-id&gt;/data/climate/surface-based-observations/daily</code> per i 30 giorni del mese per cui hai riportato dati:</p> <p></p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#esercizio-3-utilizzo-del-modulo-csv-nella-webapp-wis2box-opzionale","title":"Esercizio 3 - utilizzo del modulo CSV nella webapp wis2box (opzionale)","text":"<p>L'applicazione web wis2box fornisce un'interfaccia per caricare dati CSV e convertirli in BUFR prima di pubblicarli su WIS2, utilizzando il modello AWS.</p> <p>L'uso di questo modulo \u00e8 destinato a scopi di debug e validazione; il metodo di invio consigliato per la pubblicazione di dati dalle stazioni meteorologiche automatiche \u00e8 configurare un processo che carichi automaticamente i dati nel bucket MinIO.</p>"},{"location":"it/practical-sessions/converting-csv-data-to-bufr/#utilizzo-del-modulo-csv-nellapplicazione-web-wis2box","title":"Utilizzo del modulo CSV nell'applicazione web wis2box","text":"<p>Naviga al modulo CSV nell'applicazione web wis2box  (<code>http://&lt;nome-tuo-host&gt;/wis2box-webapp/csv2bufr_form</code>). Usa il file aws-example.csv per questo esercizio. Ora dovresti essere in grado di cliccare su \"next\" per visualizzare in anteprima e validare il file.</p> <p></p> <p>Cliccando sul pulsante \"next\" si carica il file nel browser e si convalida il contenuto rispetto a uno schema predefinito.  Nessun dato \u00e8 ancora stato convertito o pubblicato. Nella scheda di anteprima/convalida dovresti vedere un elenco di avvisi  sui dati mancanti, ma in questo esercizio possono essere ignorati. </p> <p></p> <p>Clicca su next per procedere e ti verr\u00e0 chiesto di fornire un ID dataset per i dati da pubblicare. Seleziona l'ID dataset che hai creato in precedenza e clicca su next.</p> <p>Ora dovresti essere su una pagina di autorizzazione dove ti verr\u00e0 chiesto di inserire il token <code>processes/wis2box</code>  che hai creato in precedenza. Inserisci questo token e clicca sul toggle \"Publish on WIS2\" per assicurarti  che \"Publish to WIS2\" sia selezionato (vedi screenshot sotto).</p> <p></p> <p>Clicca su \"next\"</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/","title":"Conversione dei dati SYNOP in BUFR utilizzando wis2box-webapp","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>inviare bollettini FM-12 SYNOP validi tramite l'applicazione web wis2box per la conversione in BUFR e lo scambio su WIS2.0</li> <li>convalidare, diagnosticare e correggere semplici errori di codifica in un bollettino FM-12 SYNOP prima della conversione del formato e dello scambio</li> <li>assicurare che i metadati della stazione richiesti siano disponibili nel wis2box</li> <li>confermare e ispezionare i bollettini convertiti con successo</li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#introduzione","title":"Introduzione","text":"<p>Per consentire agli osservatori manuali di inviare dati direttamente al WIS2.0, il wis2box-webapp ha un modulo per convertire i bollettini FM-12 SYNOP in BUFR. Il modulo consente inoltre agli utenti di diagnosticare e correggere semplici errori di codifica nel bollettino FM-12 SYNOP prima della conversione del formato e dello scambio, e di ispezionare i dati BUFR risultanti.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#preparazione","title":"Preparazione","text":"<p>Prerequisiti</p> <ul> <li>Assicurati che il tuo wis2box sia stato configurato e avviato.</li> <li>Apri un terminale e connettiti alla tua VM studente utilizzando SSH.</li> <li>Connettiti al broker MQTT della tua istanza wis2box utilizzando MQTT Explorer.</li> <li>Apri l'applicazione web wis2box (<code>http://&lt;tuo-nome-host&gt;/wis2box-webapp</code>) e assicurati di aver effettuato l'accesso.</li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#utilizzo-di-wis2box-webapp-per-convertire-fm-12-synop-in-bufr","title":"Utilizzo di wis2box-webapp per convertire FM-12 SYNOP in BUFR","text":""},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#esercizio-1-utilizzo-di-wis2box-webapp-per-convertire-fm-12-synop-in-bufr","title":"Esercizio 1 - utilizzo di wis2box-webapp per convertire FM-12 SYNOP in BUFR","text":"<p>Assicurati di avere il token di autenticazione per \"processes/wis2box\" che hai generato nell'esercizio precedente e di essere connesso al tuo broker wis2box in MQTT Explorer.</p> <p>Copia il seguente messaggio:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n</code></pre> <p>Apri l'applicazione web wis2box e naviga alla pagina synop2bufr utilizzando il menu di navigazione a sinistra e procedi come segue:</p> <ul> <li>Incolla il contenuto che hai copiato nella casella di inserimento testo.</li> <li>Seleziona il mese e l'anno utilizzando il selettore di data, supponi il mese corrente per questo esercizio.</li> <li>Seleziona un argomento dal menu a discesa (le opzioni si basano sui dataset configurati nel wis2box).</li> <li>Inserisci il token di autenticazione \"processes/wis2box\" che hai generato in precedenza</li> <li>Assicurati che \"Pubblica su WIS2\" sia attivato</li> <li>Clicca su \"INVIA\"</li> </ul> <p></p> <p>Clicca su invia. Riceverai un messaggio di avviso poich\u00e9 la stazione non \u00e8 registrata nel wis2box. Vai all'editor delle stazioni e importa la seguente stazione:</p> <pre><code>0-20000-0-15015\n</code></pre> <p>Assicurati che la stazione sia associata all'argomento selezionato nel passaggio precedente e poi torna alla pagina synop2bufr e ripeti il processo con gli stessi dati di prima.</p> <p>Question</p> <p>Come puoi vedere il risultato della conversione da FM-12 SYNOP a BUFR?</p> Clicca per rivelare la risposta <p>La sezione dei risultati della pagina mostra Avvisi, Errori e File BUFR di output.</p> <p>Clicca su \"File BUFR di output\" per vedere un elenco dei file che sono stati generati. Dovresti vedere un file elencato.</p> <p>Il pulsante di download consente di scaricare i dati BUFR direttamente sul tuo computer.</p> <p>Il pulsante di ispezione esegue un processo per convertire ed estrarre i dati da BUFR.</p> <p></p> <p>Question</p> <p>I dati di input FM-12 SYNOP non includevano la posizione della stazione, l'elevazione o l'altezza del barometro.  Conferma che questi siano nei dati BUFR di output, da dove provengono?</p> Clicca per rivelare la risposta <p>Cliccando sul pulsante di ispezione dovrebbe apparire una finestra di dialogo come quella mostrata di seguito.</p> <p></p> <p>Questo include la posizione della stazione mostrata su una mappa e i metadati di base, nonch\u00e9 le osservazioni nel messaggio.</p> <p>Come parte della trasformazione da FM-12 SYNOP a BUFR, sono stati aggiunti metadati aggiuntivi al file BUFR.</p> <p>Il file BUFR pu\u00f2 anche essere ispezionato scaricando il file e convalidandolo utilizzando uno strumento come il validatore BUFR ecCodes di ECMWF.</p> <p>Vai su MQTT Explorer e controlla l'argomento delle notifiche WIS2 per vedere le notifiche WIS2 che sono state pubblicate.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#esercizio-2-comprensione-dellelenco-delle-stazioni","title":"Esercizio 2 - comprensione dell'elenco delle stazioni","text":"<p>Per questo prossimo esercizio convertirai un file contenente pi\u00f9 rapporti, vedi i dati di seguito:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>Basandoti sull'esercizio precedente, guarda il messaggio FM-12 SYNOP e prevedi quanti messaggi BUFR di output saranno generati. </p> <p>Ora copia e incolla questo messaggio nel modulo SYNOP e invia i dati.</p> <p>Il numero di messaggi generati corrisponde alla tua aspettativa e se no, perch\u00e9?</p> Clicca per rivelare la risposta <p>Potresti aver previsto che sarebbero stati generati tre messaggi BUFR, uno per ogni rapporto meteorologico. Tuttavia, invece hai ricevuto 2 avvisi e solo un file BUFR.</p> <p>Affinch\u00e9 un rapporto meteorologico venga convertito in BUFR, sono necessari i metadati di base contenuti nell'elenco delle stazioni. Mentre l'esempio sopra include tre rapporti meteorologici, due delle tre stazioni che riportano non erano registrate nel tuo wis2box. </p> <p>Di conseguenza, solo uno dei tre rapporti meteorologici ha generato un file BUFR e una notifica WIS2 \u00e8 stata pubblicata. Gli altri due rapporti meteorologici sono stati ignorati e sono stati generati avvisi.</p> <p>Hint</p> <p>Prendi nota della relazione tra l'Identificatore WIGOS e l'identificatore tradizionale della stazione incluso nell'output BUFR. In molti casi, per le stazioni elencate nel WMO-No. 9 Volume A al momento della migrazione agli identificatori di stazione WIGOS, l'identificatore della stazione WIGOS \u00e8 dato dall'identificatore tradizionale della stazione con <code>0-20000-0</code> anteposto, ad esempio <code>15015</code> \u00e8 diventato <code>0-20000-0-15015</code>.</p> <p>Utilizzando la pagina dell'elenco delle stazioni, importa le seguenti stazioni:</p> <pre><code>0-20000-0-15020\n0-20000-0-15090\n</code></pre> <p>Assicurati che le stazioni siano associate all'argomento selezionato nell'esercizio precedente e poi torna alla pagina synop2bufr e ripeti il processo.</p> <p>Ora dovrebbero essere generati tre file BUFR e non dovrebbero esserci avvisi o errori elencati nell'applicazione web.</p> <p>Oltre alle informazioni di base sulla stazione, metadati aggiuntivi come l'elevazione della stazione sul livello del mare e l'altezza del barometro sul livello del mare sono necessari per la codifica in BUFR. I campi sono inclusi nelle pagine dell'elenco delle stazioni e dell'editor delle stazioni.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#esercizio-3-debug","title":"Esercizio 3 - debug","text":"<p>In questo ultimo esercizio identificherai e correggerai due dei problemi pi\u00f9 comuni incontrati quando si utilizza questo strumento per convertire FM-12 SYNOP in BUFR.</p> <p>I dati di esempio sono mostrati nella casella sottostante, esamina i dati e cerca di risolvere eventuali problemi che potrebbero esserci prima di inviare i dati attraverso l'applicazione web.</p> <p>Hint</p> <p>Puoi modificare i dati nella casella di inserimento sulla pagina dell'applicazione web. Se ti sfugge qualche problema, questi dovrebbero essere rilevati e evidenziati come avviso o errore una volta che il pulsante di invio \u00e8 stato cliccato.</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>Quali problemi ti aspettavi di incontrare durante la conversione dei dati in BUFR e come li hai superati? Ci sono stati problemi che non ti aspettavi?</p> Clicca per rivelare la risposta <p>In questo primo esempio il simbolo \"fine del testo\" (=), o delimitatore di record, manca tra il primo e il secondo rapporto meteorologico. Di conseguenza, le righe 2 e 3 vengono trattate come un unico rapporto, portando a errori nell'analisi del messaggio.</p> <p>Il secondo esempio qui sotto contiene diversi problemi comuni trovati nei rapporti FM-12 SYNOP. Esamina i dati e cerca di identificare i problemi, quindi invia i dati corretti attraverso l'applicazione web.</p> <pre><code>AAXX 27031\n15020 02997 23104 10/30 21075 30177 40377 580200 60001 81041=\n</code></pre> <p>Question</p> <p>Quali problemi hai trovato e come li hai risolti?</p> Clicca per rivelare la risposta <p>Ci sono due problemi nel rapporto meteorologico. </p> <p>Il primo, nel gruppo della temperatura dell'aria con segno, ha il carattere delle decine impostato come mancante (/), portando a un gruppo non valido. In questo esempio sappiamo che la temperatura \u00e8 di 13,0 gradi Celsius (dagli esempi precedenti) e quindi questo problema pu\u00f2 essere corretto. Operativamente, il valore corretto dovrebbe essere confermato con l'osservatore.</p> <p>Il secondo problema si verifica nel gruppo 5 dove c'\u00e8 un carattere aggiuntivo, con il carattere finale duplicato. Questo problema pu\u00f2 essere risolto rimuovendo il carattere extra.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#pulizia","title":"Pulizia","text":"<p>Durante gli esercizi in questa sessione avrai importato diversi file nel tuo elenco di stazioni. Naviga alla pagina dell'elenco delle stazioni e clicca sulle icone del cestino per eliminare le stazioni. Potrebbe essere necessario aggiornare la pagina per far rimuovere le stazioni dall'elenco dopo l'eliminazione.</p> <p></p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr-form/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato:</p> <ul> <li>come lo strumento synop2bufr pu\u00f2 essere utilizzato per convertire i rapporti FM-12 SYNOP in BUFR;</li> <li>come inviare un rapporto FM-12 SYNOP attraverso la web-app;</li> <li>come diagnosticare e correggere semplici errori in un rapporto FM-12 SYNOP;</li> <li>l'importanza di registrare le stazioni nel wis2box (e in OSCAR/Surface);</li> <li>e l'uso del pulsante di ispezione per visualizzare il contenuto dei dati BUFR.</li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/","title":"Conversione dei dati SYNOP in BUFR dalla riga di comando","text":"<p>Risultati di apprendimento</p> <p>Al termine di questa sessione pratica, sarai in grado di:</p> <ul> <li>utilizzare lo strumento synop2bufr per convertire i report SYNOP FM-12 in BUFR;</li> <li>diagnosticare e correggere semplici errori di codifica nei report SYNOP FM-12 prima della conversione di formato;</li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#introduzione","title":"Introduzione","text":"<p>I report meteorologici di superficie dalle stazioni terrestri sono stati storicamente riportati ogni ora o nelle ore  sinottiche principali (00, 06, 12 e 18 UTC) e intermedie (03, 09, 15, 21 UTC). Prima della migrazione a BUFR, questi report erano codificati nel formato testuale FM-12 SYNOP. Sebbene la migrazione a BUFR fosse programmata per essere completata entro il 2012, un gran numero di report viene ancora scambiato nel formato  FM-12 SYNOP tradizionale. Ulteriori informazioni sul formato FM-12 SYNOP si possono trovare nel Manuale WMO sui Codici,  Volume I.1 (WMO-No. 306, Volume I.1).</p> <p>Manuale WMO sui Codici, Volume I.1</p> <p>Per facilitare il completamento della migrazione a BUFR, sono stati sviluppati alcuni strumenti per codificare i report FM-12 SYNOP in BUFR. In questa sessione imparerai come utilizzare questi strumenti e la relazione tra le informazioni contenute nei report FM-12 SYNOP e i messaggi BUFR.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#preparazione","title":"Preparazione","text":"<p>Prerequisiti</p> <ul> <li>Assicurati che il tuo wis2box sia stato configurato e avviato.</li> <li>Conferma lo stato visitando l'API wis2box (<code>http://&lt;nome-host&gt;/oapi</code>) e verificando che l'API sia in esecuzione.</li> <li>Assicurati di leggere le sezioni synop2bufr primer ed ecCodes primer prima di iniziare gli esercizi.</li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#synop2bufr-primer","title":"synop2bufr primer","text":"<p>Di seguito sono riportati i comandi e le configurazioni essenziali di <code>synop2bufr</code>:</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#transform","title":"transform","text":"<p>La funzione <code>transform</code> converte un messaggio SYNOP in BUFR:</p> <pre><code>synop2bufr data transform --metadata mio_file.csv --output-dir ./mia_directory --year anno_messaggio --month mese_messaggio mio_SYNOP.txt\n</code></pre> <p>Nota che se i parametri metadata, output directory, year e month non sono specificati, assumeranno i loro valori predefiniti:</p> Opzione Predefinito --metadata station_list.csv --output-dir La directory di lavoro corrente. --year L'anno corrente. --month Il mese corrente. <p>Note</p> <p>Bisogna fare attenzione utilizzando l'anno e il mese predefiniti, poich\u00e9 il giorno del mese specificato nel report potrebbe non corrispondere (ad esempio, giugno non ha 31 giorni).</p> <p>Negli esempi, l'anno e il mese non sono forniti, quindi sentiti libero di specificare una data tu stesso o utilizzare i valori predefiniti.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#eccodes-primer","title":"ecCodes primer","text":"<p>ecCodes fornisce sia strumenti da riga di comando sia la possibilit\u00e0 di essere integrato nelle tue applicazioni. Di seguito sono riportati alcuni utili strumenti da riga di comando per lavorare con i dati BUFR.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#bufr_dump","title":"bufr_dump","text":"<p>Il comando <code>bufr_dump</code> \u00e8 uno strumento generico per le informazioni BUFR. Ha molte opzioni, ma le seguenti saranno le pi\u00f9 applicabili agli esercizi:</p> <pre><code>bufr_dump -p mio_bufr.bufr4\n</code></pre> <p>Questo mostrer\u00e0 il contenuto BUFR sullo schermo. Se sei interessato ai valori assunti da una variabile in particolare, usa il comando <code>egrep</code>:</p> <pre><code>bufr_dump -p mio_bufr.bufr4 | egrep -i temperature\n</code></pre> <p>Questo mostrer\u00e0 le variabili relative alla temperatura nei tuoi dati BUFR. Se vuoi farlo per pi\u00f9 tipi di variabili, filtra l'output usando una pipe (<code>|</code>):</p> <pre><code>bufr_dump -p mio_bufr.bufr4 | egrep -i 'temperature|wind'\n</code></pre>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#conversione-di-fm-12-synop-in-bufr-utilizzando-synop2bufr-dalla-riga-di-comando","title":"Conversione di FM-12 SYNOP in BUFR utilizzando synop2bufr dalla riga di comando","text":"<p>La libreria eccodes e il modulo synop2bufr sono installati nel container wis2box-api. Per fare i prossimi esercizi, copieremo la directory synop2bufr-exercises nel container wis2box-api ed eseguiremo gli esercizi da l\u00ec.</p> <pre><code>docker cp ~/exercise-materials/synop2bufr-exercises wis2box-api:/root\n</code></pre> <p>Ora possiamo entrare nel container ed eseguire gli esercizi:</p> <pre><code>docker exec -it wis2box-api /bin/bash\n</code></pre>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#esercizio-1","title":"Esercizio 1","text":"<p>Naviga nella directory <code>/root/synop2bufr-exercises/ex_1</code> e ispeziona il file di messaggio SYNOP message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_1\nmore message.txt\n</code></pre> <p>Question</p> <p>Quanti report SYNOP ci sono in questo file?</p> Clicca per rivelare la risposta <p>C'\u00e8 1 report SYNOP, poich\u00e9 c'\u00e8 solo 1 delimitatore (=) alla fine del messaggio.</p> <p>Ispeziona l'elenco delle stazioni:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Quante stazioni sono elencate nella lista delle stazioni?</p> Clicca per rivelare la risposta <p>C'\u00e8 1 stazione, il file station_list.csv contiene una riga di metadati della stazione.</p> <p>Question</p> <p>Prova a convertire <code>message.txt</code> in formato BUFR.</p> Clicca per rivelare la risposta <p>Per convertire il messaggio SYNOP in formato BUFR, usa il seguente comando:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Tip</p> <p>Vedi la sezione synop2bufr primer.</p> <p>Ispeziona i dati BUFR risultanti utilizzando <code>bufr_dump</code>.</p> <p>Question</p> <p>Trova come confrontare i valori di latitudine e longitudine con quelli nell'elenco delle stazioni.</p> Clicca per rivelare la risposta <p>Per confrontare i valori di latitudine e longitudine nei dati BUFR con quelli nell'elenco delle stazioni, usa il seguente comando:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'latitude|longitude'\n</code></pre> <p>Questo mostrer\u00e0 i valori di latitudine e longitudine nei dati BUFR.</p> <p>Tip</p> <p>Vedi la sezione ecCodes primer.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#esercizio-2","title":"Esercizio 2","text":"<p>Naviga nella directory <code>exercise-materials/synop2bufr-exercises/ex_2</code> e ispeziona il file di messaggio SYNOP message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_2\nmore message.txt\n</code></pre> <p>Question</p> <p>Quanti report SYNOP ci sono in questo file?</p> Clicca per rivelare la risposta <p>Ci sono 3 report SYNOP, poich\u00e9 ci sono 3 delimitatori (=) alla fine del messaggio.</p> <p>Ispeziona l'elenco delle stazioni:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Quante stazioni sono elencate nella lista delle stazioni?</p> Clicca per rivelare la risposta <p>Ci sono 3 stazioni, il file station_list.csv contiene tre righe di metadati delle stazioni.</p> <p>Question</p> <p>Converti <code>message.txt</code> in formato BUFR.</p> Clicca per rivelare la risposta <p>Per convertire il messaggio SYNOP in formato BUFR, usa il seguente comando:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Question</p> <p>In base ai risultati degli esercizi in questo e nel precedente esercizio, come prevederesti il numero di file BUFR risultanti in base al numero di report SYNOP e stazioni elencate nel file di metadati delle stazioni?</p> Clicca per rivelare la risposta <p>Per vedere i file BUFR prodotti, esegui il seguente comando:</p> <pre><code>ls -l *.bufr4\n</code></pre> <p>Il numero di file BUFR prodotti sar\u00e0 uguale al numero di report SYNOP nel file di messaggio.</p> <p>Ispeziona i dati BUFR risultanti utilizzando <code>bufr_dump</code>.</p> <p>Question</p> <p>Come puoi controllare l'ID della stazione WIGOS codificato all'interno dei dati BUFR di ciascun file prodotto?</p> Clicca per rivelare la risposta <p>Questo pu\u00f2 essere fatto utilizzando i seguenti comandi:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15020_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15090_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <p>Nota che se hai una directory con solo questi 3 file BUFR, puoi usare i caratteri jolly di Linux come segue:</p> <pre><code>bufr_dump -p *.bufr4 | egrep -i 'wigos'\n</code></pre>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#esercizio-3","title":"Esercizio 3","text":"<p>Naviga nella directory <code>exercise-materials/synop2bufr-exercises/ex_3</code> e ispeziona il file di messaggio SYNOP message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_3\nmore message.txt\n</code></pre> <p>Questo messaggio SYNOP contiene solo un report pi\u00f9 lungo con pi\u00f9 sezioni.</p> <p>Ispeziona l'elenco delle stazioni:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>\u00c8 problematico che questo file contenga pi\u00f9 stazioni di quanti siano i report nel messaggio SYNOP?</p> Clicca per rivelare la risposta <p>No, questo non \u00e8 un problema a condizione che esista una riga nel file dell'elenco delle stazioni con un TSI della stazione corrispondente a quello del report SYNOP che stiamo cercando di convertire.</p> <p>Note</p> <p>Il file dell'elenco delle stazioni \u00e8 una fonte di metadati per <code>synop2bufr</code> per fornire le informazioni mancanti nel report SYNOP alfanumerico e richieste nel SYNOP BUFR.</p> <p>Question</p> <p>Converti <code>message.txt</code> in formato BUFR.</p> Clicca per rivelare la risposta <p>Questo viene fatto utilizzando il comando <code>transform</code>, ad esempio:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Ispeziona i dati BUFR risultanti utilizzando <code>bufr_dump</code>.</p> <p>Question</p> <p>Trova le seguenti variabili:</p> <ul> <li>Temperatura dell'aria (K) del report</li> <li>Copertura nuvolosa totale (%) del report</li> <li>Periodo totale di sole (minuti) del report</li> <li>Velocit\u00e0 del vento (m/s) del report</li> </ul> Clicca per rivelare la risposta <p>Per trovare le variabili per parola chiave nei dati BUFR, puoi utilizzare i seguenti comandi:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature'\n</code></pre> <p>Puoi utilizzare il seguente comando per cercare pi\u00f9 parole chiave:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature|cover|sunshine|wind'\n</code></pre> <p>Tip</p> <p>Potresti trovare utile l'ultimo comando della sezione ecCodes primer.</p>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#esercizio-4","title":"Esercizio 4","text":"<p>Naviga nella directory <code>exercise-materials/synop2bufr-exercises/ex_4</code> e ispeziona il file di messaggio SYNOP message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_4\nmore message_incorrect.txt\n</code></pre> <p>Question</p> <p>Cosa c'\u00e8 di sbagliato in questo file SYNOP?</p> Clicca per rivelare la risposta <p>Il report SYNOP per 15015 manca del delimitatore (<code>=</code>) che consente a <code>synop2bufr</code> di distinguere questo report dal successivo.</p> <p>Prova a convertire <code>message_incorrect.txt</code> utilizzando <code>station_list.csv</code></p> <p>Question</p> <p>Quali problemi hai incontrato con questa conversione?</p> Clicca per rivelare la risposta <p>Per convertire il messaggio SYNOP in formato BUFR, usa il seguente comando:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message_incorrect.txt\n</code></pre> <p>Il tentativo di conversione dovrebbe generare i seguenti errori:</p> <ul> <li><code>[ERROR] Unable to decode the SYNOP message</code></li> <li><code>[ERROR] Error parsing SYNOP report: AAXX 21121 15015 02999 02501 10103 21090 39765 42952 57020 60001 15020 02997 23104 10130 21075 30177 40377 58020 60001 81041. 10130 is not a valid group!</code></li> </ul>"},{"location":"it/practical-sessions/converting-synop-data-to-bufr/#esercizio-5","title":"Esercizio 5","text":"<p>Naviga nella directory <code>exercise-materials/synop2bufr-exercises/ex_5</code> e ispeziona il file di messaggio SYNOP message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_5\nmore message.txt\n</code></pre> <p>Prova a convertire <code>message.txt</code> in formato BUFR utilizzando <code>station_list_incorrect.csv</code> </p> <p>Question</p> <p>Quali problemi hai incontrato con questa conversione? Considerando l'errore presentato, giustifica il numero di file BUFR prodotti.</p> Clicca per rivelare la risposta <p>Per convertire il messaggio SYNOP in formato BUFR, usa il seguente comando:</p> <p>```bash synop2bufr data transform --metadata station_list_incorrect.csv --output-dir ./ --year </p>"},{"location":"it/practical-sessions/datasets-with-access-control/","title":"Configurazione di un dataset consigliato con controllo degli accessi","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>creare un nuovo dataset con politica dei dati 'recommended'</li> <li>aggiungere un token di accesso al dataset</li> <li>verificare che il dataset non sia accessibile senza il token di accesso</li> <li>aggiungere il token di accesso agli header HTTP per accedere al dataset</li> </ul>"},{"location":"it/practical-sessions/datasets-with-access-control/#introduzione","title":"Introduzione","text":"<p>I dataset che non sono considerati dataset 'core' nel WMO possono essere opzionalmente configurati con una politica di controllo degli accessi. wis2box fornisce un meccanismo per aggiungere un token di accesso a un dataset che impedir\u00e0 agli utenti di scaricare i dati a meno che non forniscano il token di accesso negli header HTTP.</p>"},{"location":"it/practical-sessions/datasets-with-access-control/#preparazione","title":"Preparazione","text":"<p>Assicurati di avere accesso SSH alla tua VM studente e che la tua istanza wis2box sia attiva e funzionante.</p> <p>Assicurati di essere connesso al broker MQTT della tua istanza wis2box utilizzando MQTT Explorer. Puoi utilizzare le credenziali pubbliche <code>everyone/everyone</code> per connetterti al broker.</p> <p>Assicurati di avere un browser web aperto con il wis2box-webapp per la tua istanza andando su <code>http://&lt;tuo-host&gt;/wis2box-webapp</code>.</p>"},{"location":"it/practical-sessions/datasets-with-access-control/#esercizio-1-creare-un-nuovo-dataset-con-politica-dei-dati-recommended","title":"Esercizio 1: creare un nuovo dataset con politica dei dati 'recommended'","text":"<p>Vai alla pagina 'dataset editor' nel wis2box-webapp e crea un nuovo dataset. Utilizza lo stesso centre-id delle sessioni pratiche precedenti e usa il template='surface-weather-observations/synop'.</p> <p>Clicca 'OK' per procedere.</p> <p>Nell'editor del dataset, imposta la politica dei dati su 'recommended' (nota che la modifica della politica dei dati aggiorner\u00e0 la 'Topic Hierarchy'). Sostituisci l'ID locale generato automaticamente con un nome descrittivo per il dataset, ad esempio 'recommended-data-with-access-control':</p> <p></p> <p>Continua a compilare i campi richiesti per le Propriet\u00e0 Spaziali e le Informazioni di Contatto, e 'Valida il modulo' per verificare eventuali errori.</p> <p>Infine, invia il dataset, utilizzando il token di autenticazione creato in precedenza, e verifica che il nuovo dataset sia stato creato nel wis2box-webapp.</p> <p>Controlla MQTT-explorer per vedere che ricevi il Messaggio di Notifica WIS2 che annuncia il nuovo record di Metadati di Scoperta sul topic <code>origin/a/wis2/&lt;tuo-centre-id&gt;/metadata</code>.</p>"},{"location":"it/practical-sessions/datasets-with-access-control/#esercizio-2-aggiungere-un-token-di-accesso-al-dataset","title":"Esercizio 2: aggiungere un token di accesso al dataset","text":"<p>Accedi al container wis2box-management,</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Dalla riga di comando all'interno del container puoi proteggere un dataset utilizzando il comando <code>wis2box auth add-token</code>, utilizzando il flag <code>--metadata-id</code> per specificare l'identificatore di metadati del dataset e il token di accesso come argomento.</p> <p>Ad esempio, per aggiungere il token di accesso <code>S3cr3tT0k3n</code> al dataset con identificatore di metadati <code>urn:wmo:md:not-my-centre:core.surface-based-observations.synop</code>:</p> <pre><code>wis2box auth add-token --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop S3cr3tT0k3n\n</code></pre> <p>Esci dal container wis2box-management:</p> <pre><code>exit\n</code></pre>"},{"location":"it/practical-sessions/datasets-with-access-control/#esercizio-3-pubblicare-alcuni-dati-nel-dataset","title":"Esercizio 3: pubblicare alcuni dati nel dataset","text":"<p>Copia il file <code>exercise-materials/access-control-exercises/aws-example2.csv</code> nella directory definita da <code>WIS2BOX_HOST_DATADIR</code> nel tuo <code>wis2box.env</code>:</p> <pre><code>cp ~/exercise-materials/access-control-exercises/aws-example2.csv ~/wis2box-data\n</code></pre> <p>Quindi usa WinSCP o un editor da riga di comando per modificare il file <code>aws-example2.csv</code> e aggiornare gli identificatori WIGOS-station nei dati di input per corrispondere alle stazioni che hai nella tua istanza wis2box.</p> <p>Successivamente, vai allo station-editor nel wis2box-webapp. Per ogni stazione che hai utilizzato in <code>aws-example2.csv</code>, aggiorna il campo 'topic' per corrispondere al 'topic' del dataset che hai creato nell'esercizio precedente.</p> <p>Questa stazione sar\u00e0 ora associata a 2 topic, uno per il dataset 'core' e uno per il dataset 'recommended':</p> <p></p> <p>Dovrai utilizzare il tuo token per <code>collections/stations</code> per salvare i dati della stazione aggiornati.</p> <p>Successivamente, accedi al container wis2box-management:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Dalla riga di comando wis2box possiamo inserire il file di dati di esempio <code>aws-example2.csv</code> in un dataset specifico come segue:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example2.csv --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop\n</code></pre> <p>Assicurati di fornire l'identificatore di metadati corretto per il tuo dataset e verifica di ricevere notifiche di dati WIS2 in MQTT Explorer, sul topic <code>origin/a/wis2/&lt;tuo-centre-id&gt;/data/recommended/surface-based-observations/synop</code>.</p> <p>Controlla il link canonico nel Messaggio di Notifica WIS2 e copia/incolla il link nel browser per provare a scaricare i dati.</p> <p>Dovresti vedere un errore 403 Forbidden.</p>"},{"location":"it/practical-sessions/datasets-with-access-control/#esercizio-4-aggiungere-il-token-di-accesso-agli-header-http-per-accedere-al-dataset","title":"Esercizio 4: aggiungere il token di accesso agli header HTTP per accedere al dataset","text":"<p>Per dimostrare che il token di accesso \u00e8 necessario per accedere al dataset, riprodurremo l'errore che hai visto nel browser utilizzando la funzione da riga di comando <code>wget</code>.</p> <p>Dalla riga di comando nella tua VM studente, usa il comando <code>wget</code> con il link canonico che hai copiato dal Messaggio di Notifica WIS2.</p> <pre><code>wget &lt;link-canonico&gt;\n</code></pre> <p>Dovresti vedere che la richiesta HTTP restituisce 401 Unauthorized e i dati non vengono scaricati.</p> <p>Ora aggiungi il token di accesso agli header HTTP per accedere al dataset.</p> <pre><code>wget --header=\"Authorization: Bearer S3cr3tT0k3n\" &lt;link-canonico&gt;\n</code></pre> <p>Ora i dati dovrebbero essere scaricati con successo.</p>"},{"location":"it/practical-sessions/datasets-with-access-control/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>creare un nuovo dataset con politica dei dati 'recommended'</li> <li>aggiungere un token di accesso al dataset</li> <li>verificare che il dataset non sia accessibile senza il token di accesso</li> <li>aggiungere il token di accesso agli header HTTP per accedere al dataset</li> </ul>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/","title":"Scoprire dataset dal Catalogo Globale di Scoperta WIS2","text":"<p>Risultati di apprendimento!</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>utilizzare pywiscat per scoprire dataset dal Catalogo Globale di Scoperta (GDC)</li> </ul>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/#introduzione","title":"Introduzione","text":"<p>In questa sessione imparerai come scoprire dati dal Catalogo Globale di Scoperta WIS2 (GDC).</p> <p>Al momento, sono disponibili i seguenti GDC:</p> <ul> <li>Environment and Climate Change Canada, Meteorological Service of Canada: https://wis2-gdc.weather.gc.ca</li> <li>China Meteorological Administration: https://gdc.wis.cma.cn/api</li> <li>Deutscher Wetterdienst: https://wis2.dwd.de/gdc</li> </ul> <p>Durante le sessioni di formazione locali, viene configurato un GDC locale per consentire ai partecipanti di interrogare il GDC per i metadati che hanno pubblicato dalle loro istanze wis2box. In questo caso, i formatori forniranno l'URL al GDC locale.</p>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/#preparazione","title":"Preparazione","text":"<p>Note</p> <p>Prima di iniziare, accedi alla tua VM studente.</p>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/#installazione-di-pywiscat","title":"Installazione di pywiscat","text":"<p>Usa l'installatore di pacchetti Python <code>pip3</code> per installare pywiscat sulla tua VM: <pre><code>pip3 install pywiscat\n</code></pre></p> <p>Note</p> <p>Se riscontri il seguente errore:</p> <pre><code>WARNING: The script pywiscat is installed in '/home/username/.local/bin' which is not on PATH.\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n</code></pre> <p>Allora esegui il seguente comando:</p> <pre><code>export PATH=$PATH:/home/$USER/.local/bin\n</code></pre> <p>...dove <code>$USER</code> \u00e8 il tuo nome utente sulla VM.</p> <p>Verifica che l'installazione sia avvenuta con successo:</p> <pre><code>pywiscat --version\n</code></pre>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/#trovare-dati-con-pywiscat","title":"Trovare dati con pywiscat","text":"<p>Per impostazione predefinita, pywiscat si connette al Catalogo Globale di Scoperta del Canada. Configuriamo pywiscat per interrogare il GDC di formazione impostando la variabile di ambiente <code>PYWISCAT_GDC_URL</code>:</p> <pre><code>export PYWISCAT_GDC_URL=http://&lt;host-o-ip-gdc-locale&gt;\n</code></pre> <p>Usiamo pywiscat per interrogare il GDC configurato come parte della formazione.</p> <pre><code>pywiscat search --help\n</code></pre> <p>Ora cerca nel GDC tutti i record:</p> <pre><code>pywiscat search\n</code></pre> <p>Question</p> <p>Quanti record vengono restituiti dalla ricerca?</p> Clicca per rivelare la risposta <p>Il numero di record dipende dal GDC che stai interrogando. Quando utilizzi il GDC di formazione locale, dovresti vedere che il numero di record \u00e8 uguale al numero di dataset che sono stati inseriti nel GDC durante le altre sessioni pratiche.</p> <p>Proviamo a interrogare il GDC con una parola chiave:</p> <pre><code>pywiscat search -q observations\n</code></pre> <p>Question</p> <p>Qual \u00e8 la politica dei dati dei risultati?</p> Clicca per rivelare la risposta <p>Tutti i dati restituiti dovrebbero specificare dati \"core\"</p> <p>Prova ulteriori query con <code>-q</code></p> <p>Tip</p> <p>Il flag <code>-q</code> consente la seguente sintassi:</p> <ul> <li><code>-q synop</code>: trova tutti i record con la parola \"synop\"</li> <li><code>-q temp</code>: trova tutti i record con la parola \"temp\"</li> <li><code>-q \"observations AND fiji\"</code>: trova tutti i record con le parole \"observations\" e \"fiji\"</li> <li><code>-q \"observations NOT fiji\"</code>: trova tutti i record che contengono la parola \"observations\" ma non la parola \"fiji\"</li> <li><code>-q \"synop OR temp\"</code>: trova tutti i record con \"synop\" o \"temp\"</li> <li><code>-q \"obs~\"</code>: ricerca fuzzy</li> </ul> <p>Quando cerchi termini con spazi, racchiudili tra virgolette doppie.</p> <p>Otteniamo maggiori dettagli su un risultato di ricerca specifico che ci interessa:</p> <pre><code>pywiscat get &lt;id&gt;\n</code></pre> <p>Tip</p> <p>Usa il valore <code>id</code> dalla ricerca precedente.</p>"},{"location":"it/practical-sessions/discovering-datasets-from-wis2-gdc/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>utilizzare pywiscat per scoprire dataset dal Catalogo Globale di Scoperta WIS2</li> </ul>"},{"location":"it/practical-sessions/downloading-data-from-wis2/","title":"Scaricare e decodificare dati da WIS2","text":"<p>Risultati di apprendimento!</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>utilizzare il \"wis2downloader\" per sottoscriverti alle notifiche di dati WIS2 e scaricare dati sul tuo sistema locale</li> <li>visualizzare lo stato dei download nella dashboard Grafana</li> <li>decodificare alcuni dati scaricati utilizzando il container \"decode-bufr-jupyter\"</li> </ul>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#introduzione","title":"Introduzione","text":"<p>In questa sessione imparerai come configurare una sottoscrizione a un Broker WIS2 e scaricare automaticamente i dati sul tuo sistema locale utilizzando il servizio \"wis2downloader\" incluso in wis2box.</p> <p>Informazioni su wis2downloader</p> <p>Il wis2downloader \u00e8 disponibile anche come servizio autonomo che pu\u00f2 essere eseguito su un sistema diverso da quello che pubblica le notifiche WIS2. Vedi wis2downloader per maggiori informazioni sull'utilizzo del wis2downloader come servizio autonomo.</p> <p>Se desideri sviluppare un tuo servizio per sottoscriverti alle notifiche WIS2 e scaricare dati, puoi utilizzare il codice sorgente di wis2downloader come riferimento.</p> <p>Altri</p> <p>I seguenti strumenti possono essere utilizzati anche per scoprire e accedere ai dati da WIS2:</p> <ul> <li>pywiscat fornisce capacit\u00e0 di ricerca sul Catalogo Globale di Scoperta WIS2 a supporto della reportistica e dell'analisi del Catalogo WIS2 e dei suoi metadati di scoperta associati</li> <li>pywis-pubsub fornisce capacit\u00e0 di sottoscrizione e download dei dati WMO dall'infrastruttura di servizi WIS2</li> </ul>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#preparazione","title":"Preparazione","text":"<p>Prima di iniziare, accedi alla tua VM studente e assicurati che la tua istanza wis2box sia attiva e funzionante.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-1-visualizzare-la-dashboard-wis2download-in-grafana","title":"Esercizio 1: visualizzare la dashboard wis2download in Grafana","text":"<p>Apri un browser web e naviga alla dashboard Grafana per la tua istanza wis2box andando su <code>http://&lt;tuo-host&gt;:3000</code>.</p> <p>Fai clic su dashboard nel menu a sinistra, quindi seleziona la dashboard wis2downloader.</p> <p>Dovresti vedere la seguente dashboard:</p> <p></p> <p>Questa dashboard si basa sulle metriche pubblicate dal servizio wis2downloader e ti mostrer\u00e0 lo stato dei download attualmente in corso.</p> <p>Nell'angolo in alto a sinistra puoi vedere le sottoscrizioni attualmente attive.</p> <p>Mantieni aperta questa dashboard poich\u00e9 la utilizzerai per monitorare l'avanzamento del download nel prossimo esercizio.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-2-revisione-della-configurazione-wis2downloader","title":"Esercizio 2: revisione della configurazione wis2downloader","text":"<p>Il servizio wis2downloader avviato dallo stack wis2box pu\u00f2 essere configurato utilizzando le variabili di ambiente definite nel tuo file wis2box.env.</p> <p>Le seguenti variabili di ambiente sono utilizzate dal wis2downloader:</p> <pre><code>- DOWNLOAD_BROKER_HOST: Il nome host del broker MQTT a cui connettersi. Predefinito a globalbroker.meteo.fr\n- DOWNLOAD_BROKER_PORT: La porta del broker MQTT a cui connettersi. Predefinito a 443 (HTTPS per websockets)\n- DOWNLOAD_BROKER_USERNAME: Il nome utente da utilizzare per connettersi al broker MQTT. Predefinito a everyone\n- DOWNLOAD_BROKER_PASSWORD: La password da utilizzare per connettersi al broker MQTT. Predefinito a everyone\n- DOWNLOAD_BROKER_TRANSPORT: websockets o tcp, il meccanismo di trasporto da utilizzare per connettersi al broker MQTT. Predefinito a websockets,\n- DOWNLOAD_RETENTION_PERIOD_HOURS: Il periodo di conservazione in ore per i dati scaricati. Predefinito a 24\n- DOWNLOAD_WORKERS: Il numero di worker di download da utilizzare. Predefinito a 8. Determina il numero di download paralleli.\n- DOWNLOAD_MIN_FREE_SPACE_GB: Lo spazio libero minimo in GB da mantenere sul volume che ospita i download. Predefinito a 1.\n</code></pre> <p>Per rivedere la configurazione attuale del wis2downloader, puoi utilizzare il seguente comando:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep DOWNLOAD\n</code></pre> <p>Revisione della configurazione del wis2downloader</p> <p>Qual \u00e8 il broker MQTT predefinito a cui si connette il wis2downloader?</p> <p>Qual \u00e8 il periodo di conservazione predefinito per i dati scaricati?</p> Clicca per rivelare la risposta <p>Il broker MQTT predefinito a cui si connette il wis2downloader \u00e8 <code>globalbroker.meteo.fr</code>.</p> <p>Il periodo di conservazione predefinito per i dati scaricati \u00e8 di 24 ore.</p> <p>Aggiornamento della configurazione del wis2downloader</p> <p>Per aggiornare la configurazione del wis2downloader, puoi modificare il file wis2box.env. Per applicare le modifiche puoi rieseguire il comando di avvio per lo stack wis2box:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>E vedrai il servizio wis2downloader riavviarsi con la nuova configurazione.</p> <p>Puoi mantenere la configurazione predefinita per lo scopo di questo esercizio.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-3-aggiungere-sottoscrizioni-al-wis2downloader","title":"Esercizio 3: aggiungere sottoscrizioni al wis2downloader","text":"<p>All'interno del container wis2downloader, puoi utilizzare la riga di comando per elencare, aggiungere ed eliminare sottoscrizioni.</p> <p>Per accedere al container wis2downloader, utilizza il seguente comando:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>Quindi utilizza il seguente comando per elencare le sottoscrizioni attualmente attive:</p> <pre><code>wis2downloader list-subscriptions\n</code></pre> <p>Questo comando restituisce un elenco vuoto poich\u00e9 non ci sono sottoscrizioni attualmente attive.</p> <p>Per lo scopo di questo esercizio, ci sottoscriveremo al topic <code>cache/a/wis2/de-dwd-gts-to-wis2/#</code>, per sottoscriverci ai dati pubblicati dal gateway GTS-to-WIS2 ospitato da DWD e scaricare le notifiche dalla Global Cache.</p> <p>Per aggiungere questa sottoscrizione, utilizza il seguente comando:</p> <pre><code>wis2downloader add-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>Quindi esci dal container wis2downloader digitando <code>exit</code>:</p> <pre><code>exit\n</code></pre> <p>Controlla la dashboard wis2downloader in Grafana per vedere la nuova sottoscrizione aggiunta. Attendi alcuni minuti e dovresti vedere i primi download iniziare. Passa all'esercizio successivo una volta che hai confermato che i download stanno iniziando.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-4-visualizzare-i-dati-scaricati","title":"Esercizio 4: visualizzare i dati scaricati","text":"<p>Il servizio wis2downloader nello stack wis2box scarica i dati nella directory 'downloads' nella directory che hai definito come WIS2BOX_HOST_DATADIR nel tuo file wis2box.env. Per visualizzare il contenuto della directory downloads, puoi utilizzare il seguente comando:</p> <pre><code>ls -R ~/wis2box-data/downloads\n</code></pre> <p>Nota che i dati scaricati sono memorizzati in directory denominate in base al topic su cui \u00e8 stata pubblicata la notifica WIS2.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-5-rimuovere-sottoscrizioni-dal-wis2downloader","title":"Esercizio 5: rimuovere sottoscrizioni dal wis2downloader","text":"<p>Successivamente, accedi nuovamente al container wis2downloader:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>e rimuovi la sottoscrizione che hai fatto dal wis2downloader, utilizzando il seguente comando:</p> <pre><code>wis2downloader remove-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>Ed esci dal container wis2downloader digitando <code>exit</code>:</p> <pre><code>exit\n</code></pre> <p>Controlla la dashboard wis2downloader in Grafana per vedere la sottoscrizione rimossa. Dovresti vedere i download fermarsi.</p>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-6-sottoscriversi-al-wis2training-broker-e-configurare-una-nuova-sottoscrizione","title":"Esercizio 6: sottoscriversi al wis2training-broker e configurare una nuova sottoscrizione","text":"<p>Per il prossimo esercizio ci sottoscriveremo al wis2training-broker.</p> <p>Questo dimostra come sottoscriversi a un broker che non \u00e8 il broker predefinito e ti permetter\u00e0 di scaricare alcuni dati pubblicati dal WIS2 Training Broker.</p> <p>Modifica il file wis2box.env e cambia DOWNLOAD_BROKER_HOST in <code>wis2training-broker.wis2dev.io</code>, cambia DOWNLOAD_BROKER_PORT in <code>1883</code> e cambia DOWNLOAD_BROKER_TRANSPORT in <code>tcp</code>:</p> <pre><code># downloader settings\nDOWNLOAD_BROKER_HOST=wis2training-broker.wis2dev.io\nDOWNLOAD_BROKER_PORT=1883\nDOWNLOAD_BROKER_USERNAME=everyone\nDOWNLOAD_BROKER_PASSWORD=everyone\n# download transport mechanism (tcp or websockets)\nDOWNLOAD_BROKER_TRANSPORT=tcp\n</code></pre> <p>Quindi riavvia lo stack wis2box per applicare le modifiche:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>Controlla i log del wis2downloader per vedere se la connessione al nuovo broker \u00e8 avvenuta con successo:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>Dovresti vedere il seguente messaggio di log:</p> <pre><code>...\nINFO - Connecting...\nINFO - Host: wis2training-broker.wis2dev.io, port: 1883\nINFO - Connected successfully\n</code></pre> <p>Ora configureremo una nuova sottoscrizione al topic per scaricare dati di tracciamento dei cicloni dal WIS2 Training Broker.</p> <p>Accedi al container wis2downloader:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>Ed esegui il seguente comando (copia-incolla questo per evitare errori di battitura):</p> <pre><code>wis2downloader add-subscription --topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n</code></pre> <p>Esci dal container wis2downloader digitando <code>exit</code>.</p> <p>Attendi fino a quando non vedi i download iniziare nella dashboard wis2downloader in Grafana.</p> <p>Scaricare dati dal WIS2 Training Broker</p> <p>Il WIS2 Training Broker \u00e8 un broker di test utilizzato per scopi di formazione e potrebbe non pubblicare dati in ogni momento.</p> <p>Durante le sessioni di formazione in presenza, il formatore locale si assicurer\u00e0 che il WIS2 Training Broker pubblichi dati per te da scaricare.</p> <p>Se stai facendo questo esercizio al di fuori di una sessione di formazione, potresti non vedere alcun dato scaricato.</p> <p>Verifica che i dati siano stati scaricati controllando nuovamente i log del wis2downloader con:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>Dovresti vedere un messaggio di log simile al seguente:</p> <pre><code>[...] INFO - Message received under topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n[...] INFO - Downloaded A_JSXX05ECEP020000_C_ECMP_...\n</code></pre>"},{"location":"it/practical-sessions/downloading-data-from-wis2/#esercizio-7-decodificare-i-dati-scaricati","title":"Esercizio 7: decodificare i dati scaricati","text":"<p>Per dimostrare come puoi decodificare i dati scaricati, avvieremo un nuovo container utilizzando l'immagine 'decode-bufr-jupyter'.</p> <p>Questo container avvier\u00e0 un server Jupyter notebook sulla tua istanza che include la libreria \"ecCodes\" che puoi utilizzare per decodificare i dati BUFR.</p> <p>Utilizzeremo i notebook di esempio inclusi in <code>~/exercise-materials/notebook-examples</code> per decodificare i dati scaricati per le tracce dei cicloni.</p> <p>Per avviare il container, utilizza il seguente comando:</p> <pre><code>docker run -d --name decode-bufr-jupyter \\\n    -v ~/wis2box-data/downloads:/root/downloads \\\n    -p 8888:8888 \\\n    -e JUPYTER_TOKEN=dataismagic! \\\n    mlimper/decode-bufr-jupyter\n</code></pre> <p>Informazioni sul container decode-bufr-jupyter</p> <p>Il container <code>decode-bufr-jupyter</code> \u00e8 un container personalizzato che include la libreria ecCodes ed esegue un server Jupyter notebook. Il container \u00e8 basato su un'immagine che include la libreria <code>ecCodes</code> per decodificare i dati BUFR, insieme a librerie per la visualizzazione e l'analisi dei dati.</p> <p>Il comando sopra avvia il container in modalit\u00e0 distaccata, con il nome <code>decode-bufr-jupyter</code>, la porta 8888 \u00e8 mappata al sistema host e la variabile di ambiente <code>JUPYTER_TOKEN</code> \u00e8 impostata su <code>dataismagic!</code>.</p> <p>Il comando sopra monta anche la directory <code>~/wis2box-data/downloads</code> su <code>/root/downloads</code> nel container. Questo assicura che i dati scaricati siano disponibili per il server Jupyter notebook.</p> <p>Una volta avviato il container, puoi accedere al server Jupyter notebook navigando su <code>http://&lt;tuo-host&gt;:8888</code> nel tuo browser web.</p> <p>Vedrai una schermata che ti chiede di inserire una \"Password o token\".</p> <p>Fornisci il token <code>dataismagic!</code> per accedere al server Jupyter notebook.</p> <p>Dopo l'accesso, dovresti vedere la seguente schermata che elenca le directory nel container:</p> <p></p> <p>Fai doppio clic sulla directory <code>example-notebooks</code> per aprirla.</p> <p>Dovresti vedere la seguente schermata che elenca i notebook di esempio, fai doppio clic sul notebook <code>tropical_cyclone_track.ipynb</code> per aprirlo:</p> <p></p> <p>Ora dovresti essere nel Jupyter notebook per decodificare i dati di tracciamento dei cicloni tropicali:</p> <p></p> <p>Leggi le istruzioni nel notebook ed esegui le celle per decodificare i dati scaricati per le tracce dei cicloni tropicali. Esegui ogni cella facendo clic sulla cella e poi cliccando sul pulsante di esecuzione nella barra degli strumenti o premendo <code>Shift+Enter</code>.</p> <p>Alla fine dovresti vedere un grafico della probabilit\u00e0 di impatto per le tracce dei cicloni tropicali:</p> <p>![Tropical</p>"},{"location":"it/practical-sessions/initializing-wis2box/","title":"Inizializzazione di wis2box","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>eseguire lo script <code>wis2box-create-config.py</code> per creare la configurazione iniziale</li> <li>avviare wis2box e controllare lo stato dei suoi componenti</li> <li>accedere a wis2box-webapp, API, interfaccia MinIO e dashboard Grafana in un browser</li> <li>connettersi al wis2box-broker locale utilizzando MQTT Explorer</li> </ul> <p>Note</p> <p>I materiali di formazione attuali utilizzano wis2box-1.0.0rc1. </p> <p>Vedi accessing-your-student-vm per istruzioni su come scaricare e installare lo stack software wis2box se stai eseguendo questa formazione al di fuori di una sessione di formazione locale.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#preparazione","title":"Preparazione","text":"<p>Accedi alla tua VM designata con il tuo nome utente e password e assicurati di essere nella directory <code>wis2box-1.0.0rc1</code>:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre>"},{"location":"it/practical-sessions/initializing-wis2box/#creazione-della-configurazione-iniziale","title":"Creazione della configurazione iniziale","text":"<p>La configurazione iniziale per wis2box richiede:</p> <ul> <li>un file di ambiente <code>wis2box.env</code> contenente i parametri di configurazione</li> <li>una directory sulla macchina host da condividere tra la macchina host e i container wis2box definita dalla variabile di ambiente <code>WIS2BOX_HOST_DATADIR</code></li> </ul> <p>Lo script <code>wis2box-create-config.py</code> pu\u00f2 essere utilizzato per creare la configurazione iniziale del tuo wis2box. </p> <p>Ti far\u00e0 una serie di domande per aiutarti a configurare la tua configurazione.</p> <p>Potrai rivedere e aggiornare i file di configurazione dopo che lo script sar\u00e0 completato.</p> <p>Esegui lo script come segue:</p> <pre><code>python3 wis2box-create-config.py\n</code></pre>"},{"location":"it/practical-sessions/initializing-wis2box/#directory-wis2box-host-data","title":"Directory wis2box-host-data","text":"<p>Lo script ti chieder\u00e0 di inserire la directory da utilizzare per la variabile di ambiente <code>WIS2BOX_HOST_DATADIR</code>.</p> <p>Nota che devi definire il percorso completo di questa directory.</p> <p>Ad esempio, se il tuo nome utente \u00e8 <code>username</code>, il percorso completo della directory \u00e8 <code>/home/username/wis2box-data</code>:</p> <pre><code>username@student-vm-username:~/wis2box-1.0.0rc1$ python3 wis2box-create-config.py\nPlease enter the directory to be used for WIS2BOX_HOST_DATADIR:\n/home/username/wis2box-data\nThe directory to be used for WIS2BOX_HOST_DATADIR will be set to:\n    /home/username/wis2box-data\nIs this correct? (y/n/exit)\ny\nThe directory /home/username/wis2box-data has been created.\n</code></pre>"},{"location":"it/practical-sessions/initializing-wis2box/#url-di-wis2box","title":"URL di wis2box","text":"<p>Successivamente, ti verr\u00e0 chiesto di inserire l'URL per il tuo wis2box. Questo \u00e8 l'URL che verr\u00e0 utilizzato per accedere all'applicazione web wis2box, all'API e all'interfaccia utente.</p> <p>Utilizza <code>http://&lt;tuo-hostname-o-ip&gt;</code> come URL.</p> <pre><code>Please enter the URL of the wis2box:\n For local testing the URL is http://localhost\n To enable remote access, the URL should point to the public IP address or domain name of the server hosting the wis2box.\nhttp://username.wis2.training\nThe URL of the wis2box will be set to:\n  http://username.wis2.training\nIs this correct? (y/n/exit)\n</code></pre>"},{"location":"it/practical-sessions/initializing-wis2box/#password-per-webapp-storage-e-broker","title":"Password per WEBAPP, STORAGE e BROKER","text":"<p>Puoi utilizzare l'opzione di generazione casuale delle password quando richiesto per <code>WIS2BOX_WEBAPP_PASSWORD</code>, <code>WIS2BOX_STORAGE_PASSWORD</code>, <code>WIS2BOX_BROKER_PASSWORD</code> o definire le tue.</p> <p>Non preoccuparti di ricordare queste password, saranno memorizzate nel file <code>wis2box.env</code> nella tua directory wis2box-1.0.0rc1.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#revisione-di-wis2boxenv","title":"Revisione di <code>wis2box.env</code>","text":"<p>Una volta completato lo script, controlla il contenuto del file <code>wis2box.env</code> nella tua directory corrente:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env\n</code></pre> <p>Oppure controlla il contenuto del file tramite WinSCP.</p> <p>Question</p> <p>Qual \u00e8 il valore di WISBOX_BASEMAP_URL nel file wis2box.env?</p> Clicca per rivelare la risposta <p>Il valore predefinito per WIS2BOX_BASEMAP_URL \u00e8 <code>https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png</code>.</p> <p>Questo URL si riferisce al server di tile di OpenStreetMap. Se desideri utilizzare un provider di mappe diverso, puoi modificare questo URL per puntare a un server di tile diverso.</p> <p>Question</p> <p>Qual \u00e8 il valore della variabile di ambiente WIS2BOX_STORAGE_DATA_RETENTION_DAYS nel file wis2box.env?</p> Clicca per rivelare la risposta <p>Il valore predefinito per WIS2BOX_STORAGE_DATA_RETENTION_DAYS \u00e8 30 giorni. Puoi modificare questo valore a un numero diverso di giorni se lo desideri.</p> <p>Il container wis2box-management esegue un cronjob su base giornaliera per rimuovere i dati pi\u00f9 vecchi del numero di giorni definito da WIS2BOX_STORAGE_DATA_RETENTION_DAYS dal bucket <code>wis2box-public</code> e dal backend API:</p> <pre><code>0 0 * * * su wis2box -c \"wis2box data clean --days=$WIS2BOX_STORAGE_DATA_RETENTION_DAYS\"\n</code></pre> <p>Note</p> <p>Il file <code>wis2box.env</code> contiene variabili di ambiente che definiscono la configurazione del tuo wis2box. Per ulteriori informazioni consulta la documentazione wis2box.</p> <p>Non modificare il file <code>wis2box.env</code> a meno che tu non sia sicuro delle modifiche che stai apportando. Modifiche errate possono causare il malfunzionamento del tuo wis2box.</p> <p>Non condividere il contenuto del tuo file <code>wis2box.env</code> con nessuno, poich\u00e9 contiene informazioni sensibili come le password.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#avvio-di-wis2box","title":"Avvio di wis2box","text":"<p>Assicurati di essere nella directory contenente i file di definizione dello stack software wis2box:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Avvia wis2box con il seguente comando:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>Quando esegui questo comando per la prima volta, vedrai il seguente output:</p> <pre><code>No docker-compose.images-*.yml files found, creating one\nCurrent version=Undefined, latest version=1.0.0rc1\nWould you like to update ? (y/n/exit)\n</code></pre> <p>Seleziona <code>y</code> e lo script creer\u00e0 il file <code>docker-compose.images-1.0.0rc1.yml</code>, scaricher\u00e0 le immagini Docker necessarie e avvier\u00e0 i servizi.</p> <p>Il download delle immagini potrebbe richiedere del tempo a seconda della velocit\u00e0 della tua connessione internet. Questo passaggio \u00e8 necessario solo la prima volta che avvii wis2box.</p> <p>Controlla lo stato con il seguente comando:</p> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <p>Ripeti questo comando finch\u00e9 tutti i servizi non sono attivi e funzionanti.</p> <p>wis2box e Docker</p> <p>wis2box viene eseguito come un insieme di container Docker gestiti da docker-compose.</p> <p>I servizi sono definiti nei vari file <code>docker-compose*.yml</code> che si trovano nella directory <code>~/wis2box-1.0.0rc1/</code>.</p> <p>Lo script Python <code>wis2box-ctl.py</code> viene utilizzato per eseguire i comandi Docker Compose sottostanti che controllano i servizi wis2box.</p> <p>Non \u00e8 necessario conoscere i dettagli dei container Docker per eseguire lo stack software wis2box, ma puoi ispezionare i file <code>docker-compose*.yml</code> per vedere come sono definiti i servizi. Se sei interessato a saperne di pi\u00f9 su Docker, puoi trovare ulteriori informazioni nella documentazione Docker.</p> <p>Per accedere al container wis2box-management, usa il seguente comando:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>All'interno del container wis2box-management puoi eseguire vari comandi per gestire il tuo wis2box, come:</p> <ul> <li><code>wis2box auth add-token --path processes/wis2box</code> : per creare un token di autorizzazione per l'endpoint <code>processes/wis2box</code></li> <li><code>wis2box data clean --days=&lt;numero-di-giorni&gt;</code> : per pulire i dati pi\u00f9 vecchi di un certo numero di giorni dal bucket <code>wis2box-public</code></li> </ul> <p>Per uscire dal container e tornare alla macchina host, usa il seguente comando:</p> <pre><code>exit\n</code></pre> <p>Esegui il seguente comando per vedere i container docker in esecuzione sulla tua macchina host:</p> <pre><code>docker ps\n</code></pre> <p>Dovresti vedere i seguenti container in esecuzione:</p> <ul> <li>wis2box-management</li> <li>wis2box-api</li> <li>wis2box-minio</li> <li>wis2box-webapp</li> <li>wis2box-auth</li> <li>wis2box-ui</li> <li>wis2downloader</li> <li>elasticsearch</li> <li>elasticsearch-exporter</li> <li>nginx</li> <li>mosquitto</li> <li>prometheus</li> <li>grafana</li> <li>loki</li> </ul> <p>Questi container fanno parte dello stack software wis2box e forniscono i vari servizi necessari per eseguire il wis2box.</p> <p>Esegui il seguente comando per vedere i volumi docker in esecuzione sulla tua macchina host:</p> <pre><code>docker volume ls\n</code></pre> <p>Dovresti vedere i seguenti volumi:</p> <ul> <li>wis2box_project_auth-data</li> <li>wis2box_project_es-data</li> <li>wis2box_project_htpasswd</li> <li>wis2box_project_minio-data</li> <li>wis2box_project_prometheus-data</li> <li>wis2box_project_loki-data</li> </ul> <p>Oltre ad alcuni volumi anonimi utilizzati dai vari container.</p> <p>I volumi che iniziano con <code>wis2box_project_</code> vengono utilizzati per memorizzare dati persistenti per i vari servizi nello stack software wis2box.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#api-wis2box","title":"API wis2box","text":"<p>Il wis2box contiene un'API (Application Programming Interface) che fornisce accesso ai dati e processi per la visualizzazione interattiva, la trasformazione dei dati e la pubblicazione.</p> <p>Apri una nuova scheda e naviga alla pagina <code>http://&lt;tuo-host&gt;/oapi</code>.</p> <p></p> <p>Questa \u00e8 la pagina di destinazione dell'API wis2box (in esecuzione tramite il container wis2box-api).</p> <p>Question</p> <p>Quali collezioni sono attualmente disponibili?</p> Clicca per rivelare la risposta <p>Per visualizzare le collezioni attualmente disponibili tramite l'API, fai clic su <code>View the collections in this service</code>:</p> <p></p> <p>Le seguenti collezioni sono attualmente disponibili:</p> <ul> <li>Stations (Stazioni)</li> <li>Data notifications (Notifiche dati)</li> <li>Discovery metadata (Metadati di scoperta)</li> </ul> <p>Question</p> <p>Quante notifiche di dati sono state pubblicate?</p> Clicca per rivelare la risposta <p>Fai clic su \"Data notifications\", quindi fai clic su <code>Browse through the items of \"Data Notifications\"</code>. </p> <p>Noterai che la pagina dice \"No items\" poich\u00e9 non sono ancora state pubblicate notifiche di dati.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#wis2box-webapp","title":"wis2box webapp","text":"<p>Apri un browser web e visita la pagina <code>http://&lt;tuo-host&gt;/wis2box-webapp</code>.</p> <p>Vedrai un pop-up che ti chiede il tuo nome utente e password. Utilizza il nome utente predefinito <code>wis2box-user</code> e la <code>WIS2BOX_WEBAPP_PASSWORD</code> definita nel file <code>wis2box.env</code> e fai clic su \"Sign in\":</p> <p>Note</p> <p>Controlla il tuo wis2box.env per il valore di WIS2BOX_WEBAPP_PASSWORD. Puoi utilizzare il seguente comando per controllare il valore di questa variabile di ambiente:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep WIS2BOX_WEBAPP_PASSWORD\n</code></pre> <p>Una volta effettuato l'accesso, sposta il mouse sul menu a sinistra per vedere le opzioni disponibili nell'applicazione web wis2box:</p> <p></p> <p>Questa \u00e8 l'applicazione web wis2box che ti consente di interagire con il tuo wis2box:</p> <ul> <li>creare e gestire dataset</li> <li>aggiornare/rivedere i metadati delle tue stazioni</li> <li>inserire dati ASCII e CSV</li> <li>monitorare le notifiche pubblicate sul tuo wis2box-broker</li> </ul> <p>Utilizzeremo questa applicazione web in una sessione successiva.</p>"},{"location":"it/practical-sessions/initializing-wis2box/#wis2box-broker","title":"wis2box-broker","text":"<p>Apri MQTT Explorer sul tuo computer e prepara una nuova connessione per connetterti al tuo broker (in esecuzione tramite il container wis2box-broker).</p> <p>Fai clic su <code>+</code> per aggiungere una nuova connessione:</p> <p></p> <p>Puoi fare clic sul pulsante 'ADVANCED' e verificare di avere sottoscrizioni ai seguenti argomenti:</p> <ul> <li><code>#</code></li> <li><code>$SYS/#</code></li> </ul> <p></p> <p>Note</p> <p>L'argomento <code>#</code> \u00e8 una sottoscrizione jolly che si sottoscriver\u00e0 a tutti gli argomenti pubblicati sul broker.</p> <p>I messaggi pubblicati sotto l'argomento <code>$SYS</code> sono messaggi di sistema pubblicati dal servizio mosquitto stesso.</p> <p>Utilizza i seguenti dettagli di connessione, assicurandoti di sostituire il valore di <code>&lt;tuo-host&gt;</code> con il tuo nome host e <code>&lt;WIS2BOX_BROKER_PASSWORD&gt;</code> con il valore dal tuo file <code>wis2box.env</code>:</p> <ul> <li>Protocol: mqtt://</li> <li>Host: <code>&lt;tuo-host&gt;</code></li> <li>Port: 1883</li> <li>Username: wis2box</li> <li>**Password: `</li> </ul>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/","title":"Monitoraggio delle notifiche WIS2","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>attivare il flusso di lavoro wis2box caricando dati in MinIO utilizzando il comando <code>wis2box data ingest</code></li> <li>visualizzare avvisi ed errori mostrati nella dashboard Grafana</li> <li>controllare il contenuto dei dati che vengono pubblicati</li> </ul>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/#introduzione","title":"Introduzione","text":"<p>La dashboard Grafana utilizza dati da Prometheus e Loki per visualizzare lo stato del tuo wis2box. Prometheus memorizza dati di serie temporali dalle metriche raccolte, mentre Loki memorizza i log dai container in esecuzione sulla tua istanza wis2box. Questi dati ti permettono di controllare quanti dati vengono ricevuti su MinIO e quante notifiche WIS2 vengono pubblicate, e se ci sono errori rilevati nei log.</p> <p>Per vedere il contenuto delle notifiche WIS2 che vengono pubblicate su diversi argomenti del tuo wis2box puoi utilizzare la scheda 'Monitor' nella wis2box-webapp.</p>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/#preparazione","title":"Preparazione","text":"<p>Questa sezione utilizzer\u00e0 il dataset \"surface-based-observations/synop\" creato precedentemente nella sessione pratica Configurazione dei dataset in wis2box.</p> <p>Accedi alla tua VM studente utilizzando il tuo client SSH (PuTTY o altro).</p> <p>Assicurati che wis2box sia attivo e funzionante:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Assicurati di avere MQTT Explorer in esecuzione e connesso alla tua istanza utilizzando le credenziali pubbliche <code>everyone/everyone</code> con una sottoscrizione all'argomento <code>origin/a/wis2/#</code>.</p> <p>Assicurati di avere accesso all'interfaccia web MinIO andando su <code>http://&lt;tuo-host&gt;:9000</code> e di essere loggato (utilizzando <code>WIS2BOX_STORAGE_USERNAME</code> e <code>WIS2BOX_STORAGE_PASSWORD</code> dal tuo file <code>wis2box.env</code>).</p> <p>Assicurati di avere un browser web aperto con la dashboard Grafana per la tua istanza andando su <code>http://&lt;tuo-host&gt;:3000</code>.</p>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/#inserimento-di-alcuni-dati","title":"Inserimento di alcuni dati","text":"<p>Esegui i seguenti comandi dalla tua sessione client SSH:</p> <p>Copia il file di dati di esempio <code>aws-example.csv</code> nella directory che hai definito come <code>WI2BOX_HOST_DATADIR</code> nel tuo file <code>wis2box.env</code>.</p> <pre><code>cp ~/exercise-materials/monitoring-exercises/aws-example.csv ~/wis2box-data/\n</code></pre> <p>Assicurati di essere nella directory <code>wis2box-1.0.0rc1</code> e accedi al container wis2box-management:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Verifica che i dati di esempio siano disponibili nella directory <code>/data/wis2box/</code> all'interno del container wis2box-management:</p> <pre><code>ls -lh /data/wis2box/aws-example.csv\n</code></pre> <p>Note</p> <p>Il <code>WIS2BOX_HOST_DATADIR</code> \u00e8 montato come <code>/data/wis2box/</code> all'interno del container wis2box-management dal file <code>docker-compose.yml</code> incluso nella directory <code>wis2box-1.0.0rc1</code>.</p> <p>Questo ti permette di condividere dati tra l'host e il container.</p> <p>Esercizio 1: inserimento dati utilizzando <code>wis2box data ingest</code></p> <p>Esegui il seguente comando per inserire il file di dati di esempio <code>aws-example.csv</code> nella tua istanza wis2box:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example.csv --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>I dati sono stati inseriti con successo? In caso contrario, qual \u00e8 stato il messaggio di errore e come puoi risolverlo?</p> Clicca per rivelare la risposta <p>Vedrai il seguente output:</p> <pre><code>Error: metadata_id=urn:wmo:md:not-my-centre:core.surface-based-observations.synop not found in data mappings\n</code></pre> <p>Il messaggio di errore indica che l'identificatore di metadati fornito non corrisponde a nessuno dei dataset configurati nella tua istanza wis2box.</p> <p>Fornisci l'ID di metadati corretto che corrisponde al dataset che hai creato nella sessione pratica precedente e ripeti il comando di inserimento dati fino a quando dovresti vedere il seguente output:</p> <pre><code>Processing /data/wis2box/aws-example.csv\nDone\n</code></pre> <p>Vai alla console MinIO nel tuo browser e controlla se il file <code>aws-example.csv</code> \u00e8 stato caricato nel bucket <code>wis2box-incoming</code>. Dovresti vedere che c'\u00e8 una nuova directory con il nome del dataset che hai fornito nell'opzione <code>--metadata-id</code>:</p> <p></p> <p>Note</p> <p>Il comando <code>wis2box data ingest</code> ha caricato il file nel bucket <code>wis2box-incoming</code> in MinIO in una directory denominata con l'identificatore di metadati che hai fornito.</p> <p>Vai alla dashboard Grafana nel tuo browser e controlla lo stato dell'inserimento dei dati.</p> <p>Esercizio 2: controlla lo stato dell'inserimento dei dati</p> <p>Vai alla dashboard Grafana nel tuo browser e controlla lo stato dell'inserimento dei dati.</p> <p>I dati sono stati inseriti con successo?</p> Clicca per rivelare la risposta <p>Il pannello nella parte inferiore della dashboard principale di Grafana riporta i seguenti avvisi:    </p> <p><code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60355 not in station list; skipping</code> <code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60360 not in station list; skipping</code></p> <p>Questo avviso indica che le stazioni non sono definite nell'elenco delle stazioni del tuo wis2box. Nessuna notifica WIS2 sar\u00e0 pubblicata per questa stazione finch\u00e9 non la aggiungerai all'elenco delle stazioni e la assocerai all'argomento per il tuo dataset.</p> <p>Esercizio 3: aggiungi le stazioni di test e ripeti l'inserimento dei dati</p> <p>Aggiungi le stazioni al tuo wis2box utilizzando l'editor delle stazioni in wis2box-webapp, e associa le stazioni all'argomento per il tuo dataset.</p> <p>Ora ricarica il file di dati di esempio <code>aws-example.csv</code> nello stesso percorso in MinIO che hai utilizzato nell'esercizio precedente.</p> <p>Controlla la dashboard Grafana, ci sono nuovi errori o avvisi? Come puoi vedere che i dati di test sono stati inseriti e pubblicati con successo?</p> Clicca per rivelare la risposta <p>Puoi controllare i grafici sulla dashboard principale di Grafana per vedere se i dati di test sono stati inseriti e pubblicati con successo.</p> <p>Se l'operazione \u00e8 riuscita, dovresti vedere quanto segue:</p> <p></p> <p>Esercizio 4: controlla il broker MQTT per le notifiche WIS2</p> <p>Vai a MQTT Explorer e controlla se puoi vedere il messaggio di notifica WIS2 per i dati che hai appena inserito.</p> <p>Quante notifiche di dati WIS2 sono state pubblicate dal tuo wis2box?</p> <p>Come accedi al contenuto dei dati che vengono pubblicati?</p> Clicca per rivelare la risposta <p>Dovresti vedere 6 notifiche di dati WIS2 pubblicate dal tuo wis2box.</p> <p>Per accedere al contenuto dei dati che vengono pubblicati, puoi espandere la struttura dell'argomento per vedere i diversi livelli del messaggio fino a raggiungere l'ultimo livello e rivedere il contenuto del messaggio di uno dei messaggi.</p> <p>Il contenuto del messaggio ha una sezione \"links\" con una chiave \"rel\" di \"canonical\" e una chiave \"href\" con l'URL per scaricare i dati. L'URL sar\u00e0 nel formato <code>http://&lt;tuo-host&gt;/data/...</code>. </p> <p>Nota che il formato dei dati \u00e8 BUFR e avrai bisogno di un parser BUFR per visualizzare il contenuto dei dati. Il formato BUFR \u00e8 un formato binario utilizzato dai servizi meteorologici per scambiare dati. I plugin di dati all'interno di wis2box hanno trasformato i dati da CSV a BUFR prima di pubblicarli.</p>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/#visualizzazione-del-contenuto-dei-dati-che-hai-pubblicato","title":"Visualizzazione del contenuto dei dati che hai pubblicato","text":"<p>Puoi utilizzare la wis2box-webapp per visualizzare il contenuto delle notifiche di dati WIS2 che sono state pubblicate dal tuo wis2box.</p> <p>Apri la wis2box-webapp nel tuo browser navigando su <code>http://&lt;tuo-host&gt;/wis2box-webapp</code> e seleziona la scheda Monitoring:</p> <p></p> <p>Nella scheda di monitoraggio seleziona il tuo dataset-id e clicca su \"UPDATE\"</p> Esercizio 5: visualizza le notifiche WIS2 nella wis2box-webapp <p>Quante notifiche di dati WIS2 sono state pubblicate dal tuo wis2box? </p> <p>Qual \u00e8 la temperatura dell'aria riportata nell'ultima notifica alla stazione con identificatore WIGOS=0-20000-0-60355?</p> Clicca per rivelare la risposta <p>Se hai inserito con successo i dati di test, dovresti vedere 6 notifiche di dati WIS2 pubblicate dal tuo wis2box.</p> <p>Per vedere la temperatura dell'aria misurata per la stazione con identificatore WIGOS=0-20000-0-60355, clicca sul pulsante \"INSPECT\" accanto al file per quella stazione per aprire una finestra pop-up che mostra il contenuto analizzato del file di dati. La temperatura dell'aria misurata in questa stazione era di 25,0 gradi Celsius.</p> <p>Note</p> <p>Il container wis2box-api include strumenti per analizzare i file BUFR e visualizzare il contenuto in un formato leggibile dall'uomo. Questo non \u00e8 un requisito fondamentale per l'implementazione WIS2.0, ma \u00e8 stato incluso nel wis2box per aiutare gli editori di dati a controllare il contenuto dei dati che stanno pubblicando.</p>"},{"location":"it/practical-sessions/monitoring-wis2-notifications/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>attivare il flusso di lavoro wis2box caricando dati in MinIO utilizzando il comando <code>wis2box data ingest</code></li> <li>visualizzare le notifiche WIS2 pubblicate dal tuo wis2box nella dashboard Grafana e in MQTT Explorer</li> <li>controllare il contenuto dei dati che vengono pubblicati utilizzando la wis2box-webapp</li> </ul>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/","title":"Interrogazione dei dati utilizzando l'API wis2box","text":"<p>Risultati di apprendimento</p> <p>Alla fine di questa sessione pratica, sarai in grado di:</p> <ul> <li>utilizzare l'API wis2box per interrogare e filtrare le tue stazioni</li> <li>utilizzare l'API wis2box per interrogare e filtrare i tuoi dati</li> </ul>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#introduzione","title":"Introduzione","text":"<p>L'API wis2box fornisce accesso alla scoperta e all'interrogazione dei dati che sono stati inseriti in wis2box in un formato leggibile dalle macchine. L'API \u00e8 basata sullo standard OGC API - Features ed \u00e8 implementata utilizzando pygeoapi.</p> <p>L'API wis2box fornisce accesso alle seguenti collezioni:</p> <ul> <li>Stazioni</li> <li>Metadati di scoperta</li> <li>Notifiche di dati</li> <li>pi\u00f9 una collezione per ogni dataset configurato, che memorizza l'output da bufr2geojson (il plugin <code>bufr2geojson</code> deve essere abilitato nella configurazione delle mappature dei dati per popolare gli elementi nella collezione del dataset).</li> </ul> <p>In questa sessione pratica imparerai come utilizzare l'API dei dati per navigare e interrogare i dati che sono stati inseriti in wis2box.</p>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#preparazione","title":"Preparazione","text":"<p>Note</p> <p>Naviga alla pagina principale dell'API wis2box nel tuo browser web:</p> <p><code>http://&lt;tuo-host&gt;/oapi</code></p> <p></p>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#ispezione-delle-collezioni","title":"Ispezione delle collezioni","text":"<p>Dalla pagina principale, clicca sul link 'Collections'.</p> <p>Question</p> <p>Quante collezioni di dataset vedi nella pagina risultante? Cosa pensi rappresenti ciascuna collezione?</p> Clicca per rivelare la risposta <p>Dovrebbero essere visualizzate 4 collezioni, tra cui \"Stations\", \"Discovery metadata\" e \"Data notifications\"</p>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#ispezione-delle-stazioni","title":"Ispezione delle stazioni","text":"<p>Dalla pagina principale, clicca sul link 'Collections', poi clicca sul link 'Stations'.</p> <p></p> <p>Clicca sul link 'Browse', poi clicca sul link 'json'.</p> <p>Question</p> <p>Quante stazioni vengono restituite? Confronta questo numero con l'elenco delle stazioni in <code>http://&lt;tuo-host&gt;/wis2box-webapp/station</code></p> Clicca per rivelare la risposta <p>Il numero di stazioni dall'API dovrebbe essere uguale al numero di stazioni che vedi nella webapp wis2box.</p> <p>Question</p> <p>Come possiamo interrogare una singola stazione (ad esempio <code>Balaka</code>)?</p> Clicca per rivelare la risposta <p>Interroga l'API con <code>http://&lt;tuo-host&gt;/oapi/collections/stations/items?q=Balaka</code>.</p> <p>Note</p> <p>L'esempio sopra \u00e8 basato sui dati di test del Malawi. Prova a testare con le stazioni che hai inserito come parte degli esercizi precedenti.</p>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#ispezione-delle-osservazioni","title":"Ispezione delle osservazioni","text":"<p>Note</p> <p>L'esempio sopra \u00e8 basato sui dati di test del Malawi. Prova a testare con le osservazioni che hai inserito come parte degli esercizi.</p> <p>Dalla pagina principale, clicca sul link 'Collections', poi clicca sul link 'Surface weather observations from Malawi'.</p> <p></p> <p>Clicca sul link 'Queryables'.</p> <p></p> <p>Question</p> <p>Quale queryable verrebbe utilizzato per filtrare per identificatore di stazione?</p> Clicca per rivelare la risposta <p>Il <code>wigos_station_identifer</code> \u00e8 il queryable corretto.</p> <p>Naviga alla pagina precedente (cio\u00e8 <code>http://&lt;tuo-host&gt;/oapi/collections/urn:wmo:md:mwi:mwi_met_centre:surface-weather-observations</code>)</p> <p>Clicca sul link 'Browse'.</p> <p>Question</p> <p>Come possiamo visualizzare la risposta JSON?</p> Clicca per rivelare la risposta <p>Cliccando sul link 'JSON' in alto a destra della pagina, o aggiungendo <code>f=json</code> alla richiesta API sul browser web.</p> <p>Ispeziona la risposta JSON delle osservazioni.</p> <p>Question</p> <p>Quanti record vengono restituiti?</p> <p>Question</p> <p>Come possiamo limitare la risposta a 3 osservazioni?</p> Clicca per rivelare la risposta <p>Aggiungi <code>limit=3</code> alla richiesta API.</p> <p>Question</p> <p>Come possiamo ordinare la risposta per le osservazioni pi\u00f9 recenti?</p> Clicca per rivelare la risposta <p>Aggiungi <code>sortby=-resultTime</code> alla richiesta API (nota il segno <code>-</code> per indicare l'ordine di ordinamento decrescente). Per ordinare per le osservazioni pi\u00f9 vecchie, aggiorna la richiesta includendo <code>sortby=resultTime</code>.</p> <p>Question</p> <p>Come possiamo filtrare le osservazioni per una singola stazione?</p> Clicca per rivelare la risposta <p>Aggiungi <code>wigos_station_identifier=&lt;WSI&gt;</code> alla richiesta API.</p> <p>Question</p> <p>Come possiamo ricevere le osservazioni come CSV?</p> Clicca per rivelare la risposta <p>Aggiungi <code>f=csv</code> alla richiesta API.</p> <p>Question</p> <p>Come possiamo mostrare una singola osservazione (id)?</p> Clicca per rivelare la risposta <p>Utilizzando l'identificatore di feature da una richiesta API contro le osservazioni, interroga l'API per <code>http://&lt;tuo-host&gt;/oapi/collections/{collectionId}/items/{featureId}</code>, dove <code>{collectionId}</code> \u00e8 il nome della tua collezione di osservazioni e <code>{itemId}</code> \u00e8 l'identificatore della singola osservazione di interesse.</p>"},{"location":"it/practical-sessions/querying-data-using-the-wis2box-api/#conclusione","title":"Conclusione","text":"<p>Congratulazioni!</p> <p>In questa sessione pratica, hai imparato come:</p> <ul> <li>utilizzare l'API wis2box per interrogare e filtrare le tue stazioni</li> <li>utilizzare l'API wis2box per interrogare e filtrare i tuoi dati</li> </ul>"},{"location":"de/","title":"Startseite","text":""},{"location":"de/#wis2-in-a-box-training","title":"WIS2 in a box Training","text":"<p>WIS2 in a box (wis2box) ist eine freie und quelloffene (FOSS) Referenzimplementierung eines WMO WIS2-Knotens. Das Projekt bietet ein Plug-and-Play-Toolset zum Erfassen, Verarbeiten und Ver\u00f6ffentlichen von Wetter-/Klima-/Wasserdaten unter Verwendung standardbasierter Ans\u00e4tze in \u00dcbereinstimmung mit den WIS2-Prinzipien. wis2box bietet auch Zugang zu allen Daten im WIS2-Netzwerk. wis2box ist so konzipiert, dass es f\u00fcr Datenanbieter eine niedrige Einstiegsh\u00fcrde darstellt und erm\u00f6glicht Infrastruktur und Dienste f\u00fcr Datensuche, -zugriff und -visualisierung.</p> <p>Dieses Training bietet schrittweise Erkl\u00e4rungen zu verschiedenen Aspekten des wis2box-Projekts sowie eine Reihe von \u00dcbungen, die Ihnen helfen, Daten in WIS2 zu ver\u00f6ffentlichen und herunterzuladen. Das Training wird in Form von \u00dcberblickspr\u00e4sentationen sowie praktischen \u00dcbungen angeboten.</p> <p>Die Teilnehmer k\u00f6nnen mit Beispieldaten und -metadaten arbeiten sowie ihre eigenen Daten und Metadaten integrieren.</p> <p>Dieses Training deckt ein breites Spektrum an Themen ab (Installation/Einrichtung/Konfiguration, Ver\u00f6ffentlichung/Herunterladen von Daten usw.).</p>"},{"location":"de/#ziele-und-lernergebnisse","title":"Ziele und Lernergebnisse","text":"<p>Die Ziele dieses Trainings sind, sich mit Folgendem vertraut zu machen:</p> <ul> <li>Kernkonzepte und Komponenten der WIS2-Architektur</li> <li>Daten- und Metadatenformate, die in WIS2 f\u00fcr Suche und Zugriff verwendet werden</li> <li>wis2box-Architektur und -Umgebung</li> <li>wis2box-Kernfunktionen:<ul> <li>Metadatenverwaltung</li> <li>Datenerfassung und Umwandlung in das BUFR-Format</li> <li>MQTT-Broker f\u00fcr die Ver\u00f6ffentlichung von WIS2-Nachrichten</li> <li>HTTP-Endpunkt f\u00fcr den Datendownload</li> <li>API-Endpunkt f\u00fcr programmatischen Zugriff auf Daten</li> </ul> </li> </ul>"},{"location":"de/#navigation","title":"Navigation","text":"<p>Die linke Navigation bietet ein Inhaltsverzeichnis f\u00fcr das gesamte Training.</p> <p>Die rechte Navigation bietet ein Inhaltsverzeichnis f\u00fcr eine bestimmte Seite.</p>"},{"location":"de/#voraussetzungen","title":"Voraussetzungen","text":""},{"location":"de/#wissen","title":"Wissen","text":"<ul> <li>Grundlegende Linux-Befehle (siehe Spickzettel)</li> <li>Grundkenntnisse in Netzwerken und Internetprotokollen</li> </ul>"},{"location":"de/#software","title":"Software","text":"<p>F\u00fcr dieses Training werden folgende Tools ben\u00f6tigt:</p> <ul> <li>Eine Instanz mit Ubuntu-Betriebssystem (wird von WMO-Trainern w\u00e4hrend lokaler Trainingseinheiten bereitgestellt), siehe Zugriff auf Ihre Studenten-VM</li> <li>SSH-Client f\u00fcr den Zugriff auf Ihre Instanz</li> <li>MQTT Explorer auf Ihrem lokalen Computer</li> <li>SCP- und FTP-Client zum Kopieren von Dateien von Ihrem lokalen Computer</li> </ul>"},{"location":"de/#konventionen","title":"Konventionen","text":"<p>Question</p> <p>Ein so markierter Abschnitt fordert Sie auf, eine Frage zu beantworten.</p> <p>Au\u00dferdem werden Sie im Text Tipps und Hinweise finden:</p> <p>Tip</p> <p>Tipps helfen Ihnen dabei, Aufgaben am besten zu erledigen.</p> <p>Note</p> <p>Hinweise bieten zus\u00e4tzliche Informationen zum Thema der praktischen Sitzung sowie dazu, wie Aufgaben am besten erledigt werden k\u00f6nnen.</p> <p>Beispiele werden wie folgt dargestellt:</p> <p>Konfiguration <pre><code>my-collection-defined-in-yaml:\n    type: collection\n    title: my title defined as a yaml attribute named title\n    description: my description as a yaml attribute named description\n</code></pre></p> <p>Snippets, die in einem Terminal/einer Konsole eingegeben werden m\u00fcssen, werden wie folgt dargestellt:</p> <pre><code>echo 'Hello world'\n</code></pre> <p>Container-Namen (laufende Images) werden in Fettdruck dargestellt.</p>"},{"location":"de/#trainingsort-und-materialien","title":"Trainingsort und -materialien","text":"<p>Die Trainingsinhalte, das Wiki und der Issue-Tracker werden auf GitHub unter https://github.com/wmo-im/wis2box-training verwaltet.</p>"},{"location":"de/#drucken-des-materials","title":"Drucken des Materials","text":"<p>Dieses Training kann als PDF exportiert werden. Um dieses Trainingsmaterial zu speichern oder zu drucken, gehen Sie zur Druckseite und w\u00e4hlen Sie Datei &gt; Drucken &gt; Als PDF speichern.</p>"},{"location":"de/#ubungsmaterialien","title":"\u00dcbungsmaterialien","text":"<p>\u00dcbungsmaterialien k\u00f6nnen aus der exercise-materials.zip Zip-Datei heruntergeladen werden.</p>"},{"location":"de/#unterstutzung","title":"Unterst\u00fctzung","text":"<p>F\u00fcr Probleme/Fehler/Vorschl\u00e4ge oder Verbesserungen/Beitr\u00e4ge zu diesem Training nutzen Sie bitte den GitHub Issue Tracker.</p> <p>Alle wis2box-Fehler, Verbesserungen und Probleme k\u00f6nnen auf GitHub gemeldet werden.</p> <p>F\u00fcr zus\u00e4tzliche Unterst\u00fctzung oder Fragen kontaktieren Sie bitte wis2-support@wmo.int.</p> <p>Wie immer ist die wis2box-Kerndokumentation unter https://docs.wis2box.wis.wmo.int zu finden.</p> <p>Beitr\u00e4ge sind immer willkommen und werden gef\u00f6rdert!</p>"},{"location":"de/cheatsheets/docker/","title":"Docker-Spickzettel","text":""},{"location":"de/cheatsheets/docker/#uberblick","title":"\u00dcberblick","text":"<p>Docker erm\u00f6glicht die Erstellung virtueller Umgebungen in isolierter Weise zur Unterst\u00fctzung der Virtualisierung von Rechenressourcen. Das grundlegende Konzept hinter Docker ist die Containerisierung, bei der Software als Dienste laufen kann, die beispielsweise mit anderen Software-Containern interagieren.</p> <p>Der typische Docker-Workflow umfasst das Erstellen und Bauen von Images, die dann als aktive Container ausgef\u00fchrt werden.</p> <p>Docker wird verwendet, um die Reihe von Diensten auszuf\u00fchren, die wis2box mit vorgefertigten Images bilden.</p>"},{"location":"de/cheatsheets/docker/#image-verwaltung","title":"Image-Verwaltung","text":"<ul> <li>Verf\u00fcgbare Images auflisten</li> </ul> <pre><code>docker image ls\n</code></pre> <ul> <li>Ein Image aktualisieren:</li> </ul> <pre><code>docker pull my-image:latest\n</code></pre> <ul> <li>Ein Image entfernen:</li> </ul> <pre><code>docker rmi my-image:local\n</code></pre>"},{"location":"de/cheatsheets/docker/#volume-verwaltung","title":"Volume-Verwaltung","text":"<ul> <li>Alle erstellten Volumes auflisten:</li> </ul> <pre><code>docker volume ls\n</code></pre> <ul> <li>Detaillierte Informationen zu einem Volume anzeigen:</li> </ul> <pre><code>docker volume inspect my-volume\n</code></pre> <ul> <li>Ein Volume entfernen:</li> </ul> <pre><code>docker volume rm my-volume\n</code></pre> <ul> <li>Alle ungenutzten Volumes entfernen:</li> </ul> <pre><code>docker volume prune\n</code></pre>"},{"location":"de/cheatsheets/docker/#container-verwaltung","title":"Container-Verwaltung","text":"<ul> <li>Eine Liste der aktuell laufenden Container anzeigen:</li> </ul> <pre><code>docker ps\n</code></pre> <ul> <li>Liste aller Container:</li> </ul> <pre><code>docker ps -a\n</code></pre> <ul> <li>Das interaktive Terminal eines laufenden Containers \u00f6ffnen:</li> </ul> <p>Tipp</p> <p>Verwenden Sie <code>docker ps</code>, um die Container-ID im folgenden Befehl zu verwenden</p> <pre><code>docker exec -it my-container /bin/bash\n</code></pre> <ul> <li>Einen Container entfernen</li> </ul> <pre><code>docker rm my-container\n</code></pre> <ul> <li>Einen laufenden Container entfernen:</li> </ul> <pre><code>docker rm -f my-container\n</code></pre>"},{"location":"de/cheatsheets/linux/","title":"Linux-Spickzettel","text":""},{"location":"de/cheatsheets/linux/#uberblick","title":"\u00dcberblick","text":"<p>Die grundlegenden Konzepte der Arbeit in einem Linux-Betriebssystem sind Dateien und Verzeichnisse (Ordner), die in einer Baumstruktur innerhalb einer Umgebung organisiert sind.</p> <p>Sobald Sie sich bei einem Linux-System anmelden, arbeiten Sie in einer Shell, in der Sie mit Dateien und Verzeichnissen arbeiten k\u00f6nnen, indem Sie Befehle ausf\u00fchren, die auf dem System installiert sind. Die Bash-Shell ist eine g\u00e4ngige und beliebte Shell, die typischerweise auf Linux-Systemen zu finden ist.</p>"},{"location":"de/cheatsheets/linux/#verzeichnisnavigation","title":"Verzeichnisnavigation","text":"<ul> <li>Eingabe eines absoluten Verzeichnispfads:</li> </ul> <pre><code>cd /dir1/dir2\n</code></pre> <ul> <li>Eingabe eines relativen Verzeichnispfads:</li> </ul> <pre><code>cd ./somedir\n</code></pre> <ul> <li>Ein Verzeichnis nach oben wechseln:</li> </ul> <pre><code>cd ..\n</code></pre> <ul> <li>Zwei Verzeichnisse nach oben wechseln:</li> </ul> <pre><code>cd ../..\n</code></pre> <ul> <li>Zum \"Home\"-Verzeichnis wechseln:</li> </ul> <pre><code>cd -\n</code></pre>"},{"location":"de/cheatsheets/linux/#dateiverwaltung","title":"Dateiverwaltung","text":"<ul> <li>Dateien im aktuellen Verzeichnis auflisten:</li> </ul> <pre><code>ls\n</code></pre> <ul> <li>Dateien im aktuellen Verzeichnis mit mehr Details auflisten:</li> </ul> <pre><code>ls -l\n</code></pre> <ul> <li>Das Wurzelverzeichnis des Dateisystems auflisten:</li> </ul> <pre><code>ls -l /\n</code></pre> <ul> <li>Eine leere Datei erstellen:</li> </ul> <pre><code>touch foo.txt\n</code></pre> <ul> <li>Eine Datei mit dem <code>echo</code>-Befehl erstellen:</li> </ul> <pre><code>echo \"hi there\" &gt; test-file.txt\n</code></pre> <ul> <li>Den Inhalt einer Datei anzeigen:</li> </ul> <pre><code>cat test-file.txt\n</code></pre> <ul> <li>Eine Datei kopieren:</li> </ul> <pre><code>cp file1 file2\n</code></pre> <ul> <li>Platzhalter: Mit Dateimustern arbeiten:</li> </ul> <pre><code>ls -l fil*  # passt auf file1 und file2\n</code></pre> <ul> <li>Zwei Dateien zu einer neuen Datei namens <code>newfile</code> zusammenf\u00fcgen:</li> </ul> <pre><code>cat file1 file2 &gt; newfile\n</code></pre> <ul> <li>Eine weitere Datei an <code>newfile</code> anh\u00e4ngen:</li> </ul> <pre><code>cat file3 &gt;&gt; newfile\n</code></pre> <ul> <li>Eine Datei l\u00f6schen:</li> </ul> <pre><code>rm newfile\n</code></pre> <ul> <li>Alle Dateien mit der gleichen Dateierweiterung l\u00f6schen:</li> </ul> <pre><code>rm *.dat\n</code></pre> <ul> <li>Ein Verzeichnis erstellen:</li> </ul> <pre><code>mkdir dir1\n</code></pre>"},{"location":"de/cheatsheets/linux/#befehle-mit-pipes-verketten","title":"Befehle mit Pipes verketten","text":"<p>Pipes erm\u00f6glichen es einem Benutzer, die Ausgabe eines Befehls an einen anderen zu senden, indem das Pipe-Symbol <code>|</code> verwendet wird:</p> <pre><code>echo \"hi\" | sed 's/hi/bye/'\n</code></pre> <ul> <li>Befehlsausgaben mit grep filtern:</li> </ul> <pre><code>echo \"id,title\" &gt; test-file.txt\necho \"1,birds\" &gt;&gt; test-file.txt\necho \"2,fish\" &gt;&gt; test-file.txt\necho \"3,cats\" &gt;&gt; test-file.txt\n\ncat test-file.txt | grep fish\n</code></pre> <ul> <li>Gro\u00df-/Kleinschreibung ignorieren:</li> </ul> <pre><code>grep -i FISH test-file.txt\n</code></pre> <ul> <li>\u00dcbereinstimmende Zeilen z\u00e4hlen:</li> </ul> <pre><code>grep -c fish test-file.txt\n</code></pre> <ul> <li>Ausgaben zur\u00fcckgeben, die das Schl\u00fcsselwort nicht enthalten:</li> </ul> <pre><code>grep -v birds test-file.txt\n</code></pre> <ul> <li>Die Anzahl der Zeilen in <code>test-file.txt</code> z\u00e4hlen:</li> </ul> <pre><code>wc -l test-file.txt\n</code></pre> <ul> <li>Ausgabe seitenweise anzeigen:</li> </ul> <pre><code>more test-file.txt\n</code></pre> <p>...mit Steuerungsm\u00f6glichkeiten:</p> <ul> <li>Zeilenweise nach unten scrollen: Enter</li> <li>Zur n\u00e4chsten Seite gehen: Leertaste</li> <li> <p>Eine Seite zur\u00fcckgehen: b</p> </li> <li> <p>Die ersten 3 Zeilen der Datei anzeigen:</p> </li> </ul> <pre><code>head -3 test-file.txt\n</code></pre> <ul> <li>Die letzten 2 Zeilen der Datei anzeigen:</li> </ul> <pre><code>tail -2 test-file.txt\n</code></pre>"},{"location":"de/cheatsheets/wis2box/","title":"WIS2 in a box Spickzettel","text":""},{"location":"de/cheatsheets/wis2box/#uberblick","title":"\u00dcberblick","text":"<p>wis2box l\u00e4uft als eine Reihe von Docker Compose-Befehlen. Der Befehl <code>wis2box-ctl.py</code> ist ein Hilfsprogramm (in Python geschrieben), um Docker Compose-Befehle einfach auszuf\u00fchren.</p>"},{"location":"de/cheatsheets/wis2box/#wis2box-befehlsgrundlagen","title":"wis2box Befehlsgrundlagen","text":""},{"location":"de/cheatsheets/wis2box/#starten-und-stoppen","title":"Starten und Stoppen","text":"<ul> <li>wis2box starten:</li> </ul> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <ul> <li>wis2box stoppen:</li> </ul> <pre><code>python3 wis2box-ctl.py stop\n</code></pre> <ul> <li>\u00dcberpr\u00fcfen, ob alle wis2box-Container laufen:</li> </ul> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <ul> <li>Bei einem wis2box-Container anmelden (wis2box-management standardm\u00e4\u00dfig):</li> </ul> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <ul> <li>Bei einem bestimmten wis2box-Container anmelden:</li> </ul> <pre><code>python3 wis2box-ctl.py login wis2box-api\n</code></pre>"},{"location":"de/csv2bufr-templates/aws-template/","title":"csv2bufr-Vorlage f\u00fcr automatische Wetterstationen, die st\u00fcndliche GBON-Daten melden","text":"<p>Die AWS-Vorlage verwendet ein standardisiertes CSV-Format, um Daten von automatischen Wetterstationen zur Unterst\u00fctzung der GBON-Berichtsanforderungen zu erfassen. Diese Mapping-Vorlage konvertiert CSV-Daten in die BUFR-Sequenz 301150, 307096.</p> <p>Das Format ist f\u00fcr den Einsatz mit automatischen Wetterstationen gedacht, die eine Mindestanzahl von Parametern melden, darunter Luftdruck, Lufttemperatur und Luftfeuchtigkeit, Windgeschwindigkeit und -richtung sowie Niederschlag auf st\u00fcndlicher Basis.</p>"},{"location":"de/csv2bufr-templates/aws-template/#csv-spalten-und-beschreibung","title":"CSV-Spalten und Beschreibung","text":"Column Units Data type Description wsi_series Integer WIGOS identifier series wsi_issuer Integer WIGOS issuer of identifier wsi_issue_number Integer WIGOS issue number wsi_local Character WIGOS local identifier wmo_block_number Integer WMO block number wmo_station_number Integer WMO station number station_type Integer Type of observing station, encoding using code table 0 02 001 (set to 0, automatic) year Integer Year (UTC), the time of observation (based on the actual time the barometer is read) month Integer Month (UTC), the time of observation (based on the actual time the barometer is read) day Integer Day (UTC), the time of observation (based on the actual time the barometer is read) hour Integer Hour (UTC), the time of observation (based on the actual time the barometer is read) minute Integer Minute (UTC), the time of observation (based on the actual time the barometer is read) latitude degrees Decimal Latitude of the station (to 5 decimal places) longitude degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl meters Decimal Height of the station ground above mean sea level (to 1 decimal place) barometer_height_above_msl meters Decimal Height of the barometer above mean sea level (to 1 decimal place), typically height of station ground plus the height of the sensor above local ground station_pressure Pa Decimal Pressure observed at the station level to the nearest 10 pascals msl_pressure Pa Decimal Pressure reduced to mean sea level to the nearest 10 pascals geopotential_height gpm Integer Geoptential height expressed in geopotential meters (gpm) to 0 decimal places thermometer_height meters Decimal Height of thermometer or temperature sensor above the local ground to 2 decimal places air_temperature Kelvin Decimal Instantaneous air temperature to 2 decimal places dewpoint_temperature Kelvin Decimal Instantaneous dewpoint temperature to 2 decimal places relative_humidity % Integer Instantaneous relative humidity to zero decimal places method_of_ground_state_measurement code table Integer Method of observing the state of the ground, encoded using code table 0 02 176 ground_state code table Integer State of the ground encoded using code table 0 20 062 method_of_snow_depth_measurement code table Integer Method of observing the snow depth encoded using code table 0 02 177 snow_depth meters Decimal Snow depth at time of observation to 2 decimal places precipitation_intensity kg m-2 h-1 Decimal Intensity of precipitation at time of observation to 5 decimal places anemometer_height meters Decimal Height of the anemometer above local ground  to 2 decimal place time_period_of_wind minutes Integer Defines the time period over which the wind speed and direction have been averaged. Set to -10 to indicate a measurement period over the preceeding 10 minutes. wind_direction degrees Integer Wind direction (at anemometer height) averaged from the caterisan components over the indicated time period, 0 decimal places wind_speed ms-1 Decimal Wind speed (at anemometer height) averaged from the cartesian components over the indicated time period, 1 decimal place maximum_wind_gust_direction_10_minutes degrees Integer Highest 3 second average over the preceeding 10 minutes, 0 decimal places maximum_wind_gust_speed_10_minutes ms-1 Decimal Highest 3 second average over the preceeding 10 minutes, 1 decimal place maximum_wind_gust_direction_1_hour degrees Integer Highest 3 second average over the preceeding hour, 0 decimal places maximum_wind_gust_speed_1_hour ms-1 Decimal Highest 3 second average over the preceeding hour, 1 decimal place maximum_wind_gust_direction_3_hours degrees Integer Highest 3 second average over the preceeding 3 hours, 0 decimal places maximum_wind_gust_speed_3_hours ms-1 Decimal Highest 3 second average over the preceeding 3 hours, 1 decimal place rain_sensor_height meters Decimal Height of the rain gauge above local ground to 2 decimal place total_precipitation_1_hour kg m-2 Decimal Total precipitation over the past hour, 1 decimal place total_precipitation_3_hours kg m-2 Decimal Total precipitation over the past 3 hours, 1 decimal place total_precipitation_6_hours kg m-2 Decimal Total precipitation over the past 6 hours, 1 decimal place total_precipitation_12_hours kg m-2 Decimal Total precipitation over the past 12 hours, 1 decimal place total_precipitation_24_hours kg m-2 Decimal Total precipitation over the past 24 hours, 1 decimal place"},{"location":"de/csv2bufr-templates/aws-template/#beispiel","title":"Beispiel","text":"<p>Beispiel-CSV-Datei, die der AWS-Vorlage entspricht: aws-example.csv.</p>"},{"location":"de/csv2bufr-templates/daycli-template/","title":"csv2bufr-Vorlage f\u00fcr t\u00e4gliche Klimadaten (DAYCLI)","text":"<p>Die DAYCLI-Vorlage bietet ein standardisiertes CSV-Format f\u00fcr die Konvertierung t\u00e4glicher Klimadaten in die BUFR-Sequenz 307075.</p> <p>Das Format ist f\u00fcr die Verwendung mit Klimadatenmanagementsystemen zur Ver\u00f6ffentlichung von Daten auf WIS2 vorgesehen, um die Berichtsanforderungen f\u00fcr t\u00e4gliche Klimabeobachtungen zu unterst\u00fctzen.</p> <p>Diese Vorlage erfasst t\u00e4gliche Beobachtungen von:</p> <ul> <li>Minimale, maximale und durchschnittliche Temperatur \u00fcber einen Zeitraum von 24 Stunden</li> <li>Gesamte angesammelte Niederschlagsmenge \u00fcber einen Zeitraum von 24 Stunden</li> <li>Gesamte Schneeh\u00f6he zum Zeitpunkt der Beobachtung</li> <li>H\u00f6he des Neuschnees \u00fcber einen Zeitraum von 24 Stunden</li> </ul> <p>Diese Vorlage erfordert zus\u00e4tzliche Metadaten im Vergleich zur vereinfachten AWS-Vorlage: Methode zur Berechnung der Durchschnittstemperatur; Sensor- und Stationsh\u00f6hen; Expositions- und Messqualit\u00e4tsklassifikation.</p> <p>\u00dcber die DAYCLI-Vorlage</p> <p>Bitte beachten Sie, dass die DAYCLI-BUFR-Sequenz im Laufe des Jahres 2025 aktualisiert wird, um zus\u00e4tzliche Informationen und \u00fcberarbeitete QC-Flags einzuschlie\u00dfen. Die in der wis2box enthaltene DAYCLI-Vorlage wird aktualisiert, um diese \u00c4nderungen widerzuspiegeln. Die WMO wird mitteilen, wann die wis2box-Software aktualisiert wird, um die neue DAYCLI-Vorlage zu integrieren, damit Benutzer ihre Systeme entsprechend aktualisieren k\u00f6nnen.</p>"},{"location":"de/csv2bufr-templates/daycli-template/#csv-spalten-und-beschreibung","title":"CSV-Spalten und Beschreibung","text":"Column Units Data Type Description wsi_series Integer WIGOS Identifier series, set to 0 for stations wsi_issuer Integer WIGOS Identifier issue, ISO 3 digit (number) country code or 20000 series wsi_issue_number Integer WIGOS Identifier issue number wsi_local Character WIGOS Identifier local identifier, alphanumeric, max 16 characters wmo_block_number Integer WMO block number for station 0 - 99 wmo_station_number Integer WMO station number 0 - 999 latitude Degrees Decimal Latitude of the station (to 5 decimal places) longitude Degrees Decimal Longitude of the station (to 5 decimal places) station_height_above_msl Meters Decimal Height of the station ground above mean sea level (to 1 decimal place) temperature_siting_classification Integer Combined sensor siting and measurement quality classification (temperature). See references for siting classification precipitation_siting_classification Integer Combined sensor siting and measurement quality classification (precipitation). See references for siting classification averaging_method Integer Method used to calculate daily average temperature year Integer Year (UTC) of nominal reporting day month Integer Month (UTC) of nominal reporting day day Integer Day (UTC) of month for nominal reporting day precipitation_day_offset Integer Start of reporting period for precipitation, offset in days relative to nominal reporting day (-1 or 0) precipitation_hour Integer Beginning hour (UTC) over which the precipitation is measured precipitation_minute Integer Beginning minute (UTC) over which the precipitation is measured precipitation_second Integer Beginning second (UTC) over which the precipitation is measured precipitation kg m-2 Decimal Total accumulated precipitation over indicated 24 hour period (kg m-3, equivalent to mm) precipitation_flag Integer Quality control flag for total accumulated precipitation fresh_snow_day_offset Integer Start of reporting period for fresh snow depth, offset in days relative to nominal reporting day (-1 or 0) fresh_snow_hour Integer Beginning hour (UTC) over which the fresh snow depth is measured fresh_snow_minute Integer Beginning minute (UTC) over which the fresh snow depth is measured fresh_snow_second Integer Beginning second (UTC) over which the fresh snow depth is measured fresh_snow_depth Meters Decimal Fresh snow depth over indicated 24 hour period (m, 2 d.p.) fresh_snow_depth_flag Integer Quality control flag for the fresh snow depth total_snow_day_offset Integer Start of reporting period for total snow depth, offset in days relative to nominal reporting day (-1 or 0) total_snow_hour Integer Beginning hour (UTC) over which the total snow depth is measured total_snow_minute Integer Beginning minute (UTC) over which the total snow depth is measured total_snow_second Integer Beginning second (UTC) over which the total snow depth is measured total_snow_depth Meters Decimal Total snow depth over indicated 24 hour period (m, 2 d.p.) total_snow_depth_flag Integer Quality control flag for the total snow depth thermometer_height Meters Decimal Height of thermometer above local ground level (m) maximum_temperature_day_offset Integer Start of reporting period for maximum temperature, offset in days relative to nominal reporting day (-1 or 0) maximum_temperature_hour Integer Beginning hour (UTC) over which the maximum temmperature is measured maximum_temperature_minute Integer Beginning minute (UTC) over which the maximum temperature is measured maximum_temperature_second Integer Beginning second (UTC) over which the maximum temperature is measured maximum_temperature Kelvin Decimal Maximum temperature over indicated 24 hour period (K, 2 d.p.) maximum_temperature_flag Integer Quality control flag for the maximum temperature minimum_temperature_day_offset Integer Start of reporting period for minimum temperature, offset in days relative to nominal reporting day (-1 or 0) minimum_temperature_hour Integer Beginning hour (UTC) over which the minimum temmperature is measured minimum_temperature_minute Integer Beginning minute (UTC) over which the minimum temperature is measured minimum_temperature_second Integer Beginning second (UTC) over which the minimum temperature is measured minimum_temperature Kelvin Decimal Minimum temperature over indicated 24 hour period (K, 2 d.p.) minimum_temperature_flag Integer Quality control flag for the minimum temperature average_temperature_day_offset Integer Start of reporting period for average temperature, offset in days relative to nominal reporting day (-1 or 0) average_temperature_hour Integer Beginning hour (UTC) over which the average temmperature is measured average_temperature_minute Integer Beginning minute (UTC) over which the average temperature is measured average_temperature_second Integer Beginning second (UTC) over which the average temperature is measured average_temperature Kelvin Decimal Average temperature over indicated 24 hour period (K, 2 d.p.) average_temperature_flag Integer Quality control flag for the average temperature"},{"location":"de/csv2bufr-templates/daycli-template/#mittelungsmethode","title":"Mittelungsmethode","text":"Integer Description 0 Average of minimum and maximum temperatures 1 Average of 8 tri-hourly observations 2 Average of 24 hourly observations 3 Weighted average of three observations 4 Weighted average of three observations, as well as the minimum and maximum values 5 AWS complete integration from minute data 6 Average of 4 six-hourly observations"},{"location":"de/csv2bufr-templates/daycli-template/#qualitatsflag","title":"Qualit\u00e4tsflag","text":"Integer Description 0 Data checked and declared good 1 Data checked and declared suspect 2 Data checked and declared aggregated 3 Data checked and declared out of instrument range 4 Data checked and declared aggregated and out of instrument range 5 Parameter is not measured at the station 6 Daily value not provided 7 Data unchecked"},{"location":"de/csv2bufr-templates/daycli-template/#referenzen-fur-standortklassifikation","title":"Referenzen f\u00fcr Standortklassifikation","text":"<p>Referenz f\u00fcr \"temperature_siting_classification\".</p> <p>Referenz f\u00fcr \"precipitation_siting_classification\".</p>"},{"location":"de/csv2bufr-templates/daycli-template/#beispiel","title":"Beispiel","text":"<p>Beispiel-CSV-Datei, die der DAYCLI-Vorlage entspricht: daycli-example.csv.</p>"},{"location":"de/practical-sessions/accessing-your-student-vm/","title":"Zugriff auf Ihre Studenten-VM","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>auf Ihre Studenten-VM \u00fcber SSH und WinSCP zuzugreifen</li> <li>zu \u00fcberpr\u00fcfen, ob die erforderliche Software f\u00fcr die praktischen \u00dcbungen installiert ist</li> <li>zu \u00fcberpr\u00fcfen, ob Sie Zugriff auf \u00dcbungsmaterialien f\u00fcr diese Schulung auf Ihrer lokalen Studenten-VM haben</li> </ul>"},{"location":"de/practical-sessions/accessing-your-student-vm/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Im Rahmen lokaler wis2box-Schulungssitzungen k\u00f6nnen Sie auf Ihre pers\u00f6nliche Studenten-VM im lokalen Schulungsnetzwerk mit dem Namen \"WIS2-training\" zugreifen.</p> <p>Auf Ihrer Studenten-VM ist folgende Software vorinstalliert:</p> <ul> <li>Ubuntu 22.0.4.3 LTS ubuntu-22.04.3-live-server-amd64.iso</li> <li>Python 3.10.12</li> <li>Docker 24.0.6</li> <li>Docker Compose 2.21.0</li> <li>Texteditoren: vim, nano</li> </ul> <p>Note</p> <p>Wenn Sie diese Schulung au\u00dferhalb einer lokalen Schulungssitzung durchf\u00fchren m\u00f6chten, k\u00f6nnen Sie Ihre eigene Instanz \u00fcber einen beliebigen Cloud-Anbieter bereitstellen, zum Beispiel:</p> <ul> <li>GCP (Google Cloud Platform) VM-Instanz <code>e2-medium</code></li> <li>AWS (Amazon Web Services) ec2-Instanz <code>t3a.medium</code> </li> <li>Azure (Microsoft) Azure Virtual Machine <code>standard_b2s</code></li> </ul> <p>W\u00e4hlen Sie Ubuntu Server 22.0.4 LTS als Betriebssystem.</p> <p>Stellen Sie nach dem Erstellen Ihrer VM sicher, dass Sie Python, Docker und Docker Compose installiert haben, wie unter wis2box-software-dependencies beschrieben.</p> <p>Das Release-Archiv f\u00fcr wis2box, das in dieser Schulung verwendet wird, kann wie folgt heruntergeladen werden:</p> <pre><code>wget https://github.com/wmo-im/wis2box/releases/download/1.0.0rc1/wis2box-setup-1.0.0rc1.zip\nunzip wis2box-setup-1.0.0rc1.zip\n</code></pre> <p>Das neueste 'wis2box-setup'-Archiv finden Sie immer unter https://github.com/wmo-im/wis2box/releases.</p> <p>Das in dieser Schulung verwendete \u00dcbungsmaterial kann wie folgt heruntergeladen werden:</p> <pre><code>wget https://training.wis2box.wis.wmo.int/exercise-materials.zip\nunzip exercise-materials.zip\n</code></pre> <p>Die folgenden zus\u00e4tzlichen Python-Pakete sind erforderlich, um die \u00dcbungsmaterialien auszuf\u00fchren:</p> <pre><code>pip3 install minio\n</code></pre> <p>Wenn Sie die w\u00e4hrend lokaler WIS2-Schulungssitzungen bereitgestellte Studenten-VM verwenden, ist die erforderliche Software bereits installiert.</p>"},{"location":"de/practical-sessions/accessing-your-student-vm/#verbindung-zu-ihrer-studenten-vm-im-lokalen-schulungsnetzwerk-herstellen","title":"Verbindung zu Ihrer Studenten-VM im lokalen Schulungsnetzwerk herstellen","text":"<p>Verbinden Sie Ihren PC mit dem lokalen WLAN, das w\u00e4hrend der WIS2-Schulung im Raum ausgestrahlt wird, gem\u00e4\u00df den Anweisungen des Trainers.</p> <p>Verwenden Sie einen SSH-Client, um eine Verbindung zu Ihrer Studenten-VM herzustellen, mit folgenden Angaben:</p> <ul> <li>Host: (wird w\u00e4hrend der Pr\u00e4senzschulung bereitgestellt)</li> <li>Port: 22</li> <li>Benutzername: (wird w\u00e4hrend der Pr\u00e4senzschulung bereitgestellt)</li> <li>Passwort: (wird w\u00e4hrend der Pr\u00e4senzschulung bereitgestellt)</li> </ul> <p>Tip</p> <p>Wenden Sie sich an einen Trainer, wenn Sie sich bez\u00fcglich des Hostnamens/Benutzernamens nicht sicher sind oder Probleme bei der Verbindung haben.</p> <p>Sobald Sie verbunden sind, \u00e4ndern Sie bitte Ihr Passwort, um sicherzustellen, dass andere nicht auf Ihre VM zugreifen k\u00f6nnen:</p> <pre><code>limper@student-vm:~$ passwd\nChanging password for testuser.\nCurrent password:\nNew password:\nRetype new password:\npasswd: password updated successfully\n</code></pre>"},{"location":"de/practical-sessions/accessing-your-student-vm/#uberprufen-der-softwareversionen","title":"\u00dcberpr\u00fcfen der Softwareversionen","text":"<p>Um wis2box ausf\u00fchren zu k\u00f6nnen, sollten auf der Studenten-VM Python, Docker und Docker Compose vorinstalliert sein.</p> <p>Python-Version \u00fcberpr\u00fcfen: <pre><code>python3 --version\n</code></pre> gibt zur\u00fcck: <pre><code>Python 3.10.12\n</code></pre></p> <p>Docker-Version \u00fcberpr\u00fcfen: <pre><code>docker --version\n</code></pre> gibt zur\u00fcck: <pre><code>Docker version 24.0.6, build ed223bc\n</code></pre></p> <p>Docker Compose-Version \u00fcberpr\u00fcfen: <pre><code>docker compose version\n</code></pre> gibt zur\u00fcck: <pre><code>Docker Compose version v2.21.0\n</code></pre></p> <p>Um sicherzustellen, dass Ihr Benutzer Docker-Befehle ausf\u00fchren kann, wurde Ihr Benutzer zur Gruppe <code>docker</code> hinzugef\u00fcgt.</p> <p>Um zu testen, ob Ihr Benutzer docker hello-world ausf\u00fchren kann, f\u00fchren Sie den folgenden Befehl aus: <pre><code>docker run hello-world\n</code></pre></p> <p>Dies sollte das hello-world-Image herunterladen und einen Container ausf\u00fchren, der eine Nachricht ausgibt.</p> <p>\u00dcberpr\u00fcfen Sie, ob Sie Folgendes in der Ausgabe sehen:</p> <pre><code>...\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n...\n</code></pre>"},{"location":"de/practical-sessions/accessing-your-student-vm/#uberprufen-der-ubungsmaterialien","title":"\u00dcberpr\u00fcfen der \u00dcbungsmaterialien","text":"<p>\u00dcberpr\u00fcfen Sie den Inhalt Ihres Home-Verzeichnisses; dies sind die Materialien, die im Rahmen der Schulung und der praktischen Sitzungen verwendet werden.</p> <p><pre><code>ls ~/\n</code></pre> gibt zur\u00fcck: <pre><code>exercise-materials  wis2box-1.0.0rc1\n</code></pre></p> <p>Wenn Sie WinSCP auf Ihrem lokalen PC installiert haben, k\u00f6nnen Sie es verwenden, um eine Verbindung zu Ihrer Studenten-VM herzustellen und den Inhalt Ihres Home-Verzeichnisses zu \u00fcberpr\u00fcfen sowie Dateien zwischen Ihrer VM und Ihrem lokalen PC hoch- oder herunterzuladen.</p> <p>WinSCP ist f\u00fcr die Schulung nicht erforderlich, kann aber n\u00fctzlich sein, wenn Sie Dateien auf Ihrer VM mit einem Texteditor auf Ihrem lokalen PC bearbeiten m\u00f6chten.</p> <p>So k\u00f6nnen Sie eine Verbindung zu Ihrer Studenten-VM mit WinSCP herstellen:</p> <p>\u00d6ffnen Sie WinSCP und klicken Sie auf \"Neue Site\". Sie k\u00f6nnen wie folgt eine neue SCP-Verbindung zu Ihrer VM erstellen:</p> <p></p> <p>Klicken Sie auf 'Speichern' und dann auf 'Anmelden', um eine Verbindung zu Ihrer VM herzustellen.</p> <p>Sie sollten dann den folgenden Inhalt sehen k\u00f6nnen:</p> <p></p>"},{"location":"de/practical-sessions/accessing-your-student-vm/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie Sie:</p> <ul> <li>auf Ihre Studenten-VM \u00fcber SSH und WinSCP zugreifen</li> <li>\u00fcberpr\u00fcfen, ob die erforderliche Software f\u00fcr die praktischen \u00dcbungen installiert ist</li> <li>\u00fcberpr\u00fcfen, ob Sie Zugriff auf \u00dcbungsmaterialien f\u00fcr diese Schulung auf Ihrer lokalen Studenten-VM haben</li> </ul>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/","title":"GTS-Header zu WIS2-Benachrichtigungen hinzuf\u00fcgen","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen \u00dcbung werden Sie in der Lage sein:</p> <ul> <li>eine Zuordnung zwischen Dateinamen und GTS-Headern zu konfigurieren</li> <li>Daten mit einem Dateinamen einzuspeisen, der den GTS-Headern entspricht</li> <li>die GTS-Header in den WIS2-Benachrichtigungen anzuzeigen</li> </ul>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#einfuhrung","title":"Einf\u00fchrung","text":"<p>WMO-Mitglieder, die ihre Daten\u00fcbertragung \u00fcber GTS w\u00e4hrend der \u00dcbergangsphase zu WIS2 einstellen m\u00f6chten, m\u00fcssen ihren WIS2-Benachrichtigungen GTS-Header hinzuf\u00fcgen. Diese Header erm\u00f6glichen es dem WIS2-zu-GTS-Gateway, die Daten an das GTS-Netzwerk weiterzuleiten.</p> <p>Dies erm\u00f6glicht Mitgliedern, die auf die Verwendung eines WIS2-Knotens f\u00fcr die Datenver\u00f6ffentlichung umgestellt haben, ihr MSS-System zu deaktivieren und sicherzustellen, dass ihre Daten weiterhin f\u00fcr Mitglieder verf\u00fcgbar sind, die noch nicht zu WIS2 migriert sind.</p> <p>Die GTS-Eigenschaft in der WIS2-Benachrichtigungsnachricht muss als zus\u00e4tzliche Eigenschaft zur WIS2-Benachrichtigungsnachricht hinzugef\u00fcgt werden. Die GTS-Eigenschaft ist ein JSON-Objekt, das die GTS-Header enth\u00e4lt, die f\u00fcr die Weiterleitung der Daten an das GTS-Netzwerk erforderlich sind.</p> <pre><code>{\n  \"gts\": {\n    \"ttaaii\": \"FTAE31\",\n    \"cccc\": \"VTBB\"\n  }\n}\n</code></pre> <p>In wis2box k\u00f6nnen Sie dies automatisch zu WIS2-Benachrichtigungen hinzuf\u00fcgen, indem Sie eine zus\u00e4tzliche Datei namens <code>gts_headers_mapping.csv</code> bereitstellen, die die erforderlichen Informationen enth\u00e4lt, um die GTS-Header den eingehenden Dateinamen zuzuordnen.</p> <p>Diese Datei sollte in dem Verzeichnis platziert werden, das durch <code>WIS2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code> definiert ist, und sollte die folgenden Spalten enthalten:</p> <ul> <li><code>string_in_filepath</code>: eine Zeichenfolge, die Teil des Dateinamens ist und zur Zuordnung der GTS-Header verwendet wird</li> <li><code>TTAAii</code>: der TTAAii-Header, der zur WIS2-Benachrichtigung hinzugef\u00fcgt werden soll</li> <li><code>CCCC</code>: der CCCC-Header, der zur WIS2-Benachrichtigung hinzugef\u00fcgt werden soll</li> </ul>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#vorbereitung","title":"Vorbereitung","text":"<p>Stellen Sie sicher, dass Sie SSH-Zugriff auf Ihre Student-VM haben und dass Ihre wis2box-Instanz l\u00e4uft.</p> <p>Stellen Sie sicher, dass Sie mit dem MQTT-Broker Ihrer wis2box-Instanz \u00fcber MQTT Explorer verbunden sind. Sie k\u00f6nnen die \u00f6ffentlichen Anmeldedaten <code>everyone/everyone</code> verwenden, um eine Verbindung zum Broker herzustellen.</p> <p>Stellen Sie sicher, dass Sie einen Webbrowser mit dem Grafana-Dashboard f\u00fcr Ihre Instanz ge\u00f6ffnet haben, indem Sie zu <code>http://&lt;your-host&gt;:3000</code> gehen.</p>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#erstellen-von-gts_headers_mappingcsv","title":"Erstellen von <code>gts_headers_mapping.csv</code>","text":"<p>Um GTS-Header zu Ihren WIS2-Benachrichtigungen hinzuzuf\u00fcgen, wird eine CSV-Datei ben\u00f6tigt, die GTS-Header eingehenden Dateinamen zuordnet.</p> <p>Die CSV-Datei sollte (genau) <code>gts_headers_mapping.csv</code> hei\u00dfen und in dem Verzeichnis platziert werden, das durch <code>WIS2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code> definiert ist.</p>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#ubung-1-bereitstellen-einer-gts_headers_mappingcsv-datei","title":"\u00dcbung 1: Bereitstellen einer <code>gts_headers_mapping.csv</code>-Datei","text":"<p>Kopieren Sie die Datei <code>exercise-materials/gts-headers-exercises/gts_headers_mapping.csv</code> auf Ihre wis2box-Instanz und platzieren Sie sie in dem Verzeichnis, das durch <code>WIS2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code> definiert ist.</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/gts_headers_mapping.csv ~/wis2box-data\n</code></pre> <p>Starten Sie dann den wis2box-management-Container neu, um die \u00c4nderungen zu \u00fcbernehmen:</p> <pre><code>docker restart wis2box-management\n</code></pre>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#ubung-2-einspeisung-von-daten-mit-gts-headern","title":"\u00dcbung 2: Einspeisung von Daten mit GTS-Headern","text":"<p>Kopieren Sie die Datei <code>exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> in das Verzeichnis, das durch <code>WIS2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code> definiert ist:</p> <pre><code>cp ~/exercise-materials/gts-headers-exercises/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt ~/wis2box-data\n</code></pre> <p>Melden Sie sich dann beim wis2box-management-Container an:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Von der wis2box-Kommandozeile aus k\u00f6nnen wir die Beispieldatei <code>A_SMRO01YRBK171200_C_EDZW_20240717120502.txt</code> wie folgt in einen bestimmten Datensatz einspeisen:</p> <pre><code>wis2box data ingest -p /data/wis2box/A_SMRO01YRBK171200_C_EDZW_20240717120502.txt --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>Stellen Sie sicher, dass Sie die Option <code>metadata-id</code> durch die korrekte Kennung f\u00fcr Ihren Datensatz ersetzen.</p> <p>\u00dcberpr\u00fcfen Sie das Grafana-Dashboard, um zu sehen, ob die Daten korrekt eingespeist wurden. Wenn Sie WARNUNGEN oder FEHLER sehen, versuchen Sie, diese zu beheben und wiederholen Sie die \u00dcbung mit dem Befehl <code>wis2box data ingest</code>.</p>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#ubung-3-anzeigen-der-gts-header-in-der-wis2-benachrichtigung","title":"\u00dcbung 3: Anzeigen der GTS-Header in der WIS2-Benachrichtigung","text":"<p>Gehen Sie zum MQTT Explorer und \u00fcberpr\u00fcfen Sie die WIS2-Benachrichtigungsnachricht f\u00fcr die Daten, die Sie gerade eingespeist haben.</p> <p>Die WIS2-Benachrichtigungsnachricht sollte die GTS-Header enthalten, die Sie in der Datei <code>gts_headers_mapping.csv</code> angegeben haben.</p>"},{"location":"de/practical-sessions/adding-gts-headers-to-wis2-notifications/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen \u00dcbung haben Sie gelernt, wie man:   - GTS-Header zu Ihren WIS2-Benachrichtigungen hinzuf\u00fcgt   - \u00fcberpr\u00fcft, ob GTS-Header \u00fcber Ihre wis2box-Installation verf\u00fcgbar gemacht werden</p>"},{"location":"de/practical-sessions/automating-data-ingestion/","title":"Automatisierung der Datenaufnahme","text":"<p>Lernergebnisse</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>zu verstehen, wie die Daten-Plugins Ihres Datensatzes den Datenaufnahme-Workflow bestimmen</li> <li>Daten in wis2box mit einem Skript unter Verwendung des MinIO Python-Clients aufzunehmen</li> <li>Daten in wis2box aufzunehmen, indem Sie \u00fcber SFTP auf MinIO zugreifen</li> </ul>"},{"location":"de/practical-sessions/automating-data-ingestion/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Der wis2box-management-Container \u00fcberwacht Ereignisse vom MinIO-Speicherdienst, um die Datenaufnahme basierend auf den f\u00fcr Ihren Datensatz konfigurierten Daten-Plugins auszul\u00f6sen. Dies erm\u00f6glicht es Ihnen, Daten in den MinIO-Bucket hochzuladen und den wis2box-Workflow zu starten, um Daten auf dem WIS2-Broker zu ver\u00f6ffentlichen.</p> <p>Die Daten-Plugins definieren die Python-Module, die vom wis2box-management-Container geladen werden und bestimmen, wie die Daten transformiert und ver\u00f6ffentlicht werden.</p> <p>In der vorherigen \u00dcbung sollten Sie einen Datensatz mit der Vorlage <code>surface-based-observations/synop</code> erstellt haben, der die folgenden Daten-Plugins enthielt:</p> <p></p> <p>Wenn eine Datei in MinIO hochgeladen wird, ordnet wis2box die Datei einem Datensatz zu, wenn der Dateipfad die Datensatz-ID (<code>metadata_id</code>) enth\u00e4lt, und bestimmt die zu verwendenden Daten-Plugins anhand der Dateierweiterung und des in den Datensatz-Mappings definierten Dateimusters.</p> <p>In den vorherigen Sitzungen haben wir den Datenaufnahme-Workflow durch die Verwendung der wis2box-Befehlszeilenfunktionalit\u00e4t ausgel\u00f6st, die Daten im korrekten Pfad in den MinIO-Speicher hochl\u00e4dt.</p> <p>Die gleichen Schritte k\u00f6nnen programmatisch mit jeder MinIO- oder S3-Client-Software durchgef\u00fchrt werden, was Ihnen erm\u00f6glicht, Ihre Datenaufnahme als Teil Ihrer operativen Workflows zu automatisieren.</p> <p>Alternativ k\u00f6nnen Sie auch \u00fcber das SFTP-Protokoll auf MinIO zugreifen, um Daten hochzuladen und den Datenaufnahme-Workflow auszul\u00f6sen.</p>"},{"location":"de/practical-sessions/automating-data-ingestion/#vorbereitung","title":"Vorbereitung","text":"<p>Melden Sie sich mit Ihrem SSH-Client (PuTTY oder einem anderen) an Ihrer Student-VM an.</p> <p>Stellen Sie sicher, dass wis2box l\u00e4uft:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Stellen Sie sicher, dass MQTT Explorer l\u00e4uft und mit Ihrer Instanz verbunden ist. Wenn Sie noch von der vorherigen Sitzung verbunden sind, l\u00f6schen Sie alle vorherigen Nachrichten, die Sie m\u00f6glicherweise aus der Warteschlange erhalten haben. Dies kann entweder durch Trennen und Wiederverbinden oder durch Klicken auf das Papierkorbsymbol f\u00fcr das entsprechende Thema erfolgen.</p> <p>Stellen Sie sicher, dass Sie einen Webbrowser mit dem Grafana-Dashboard f\u00fcr Ihre Instanz ge\u00f6ffnet haben, indem Sie zu <code>http://&lt;your-host&gt;:3000</code> gehen.</p> <p>Und stellen Sie sicher, dass Sie einen zweiten Tab mit der MinIO-Benutzeroberfl\u00e4che unter <code>http://&lt;your-host&gt;:9001</code> ge\u00f6ffnet haben. Denken Sie daran, dass Sie sich mit dem in Ihrer <code>wis2box.env</code>-Datei definierten <code>WIS2BOX_STORAGE_USER</code> und <code>WIS2BOX_STORAGE_PASSWORD</code> anmelden m\u00fcssen.</p>"},{"location":"de/practical-sessions/automating-data-ingestion/#ubung-1-einrichten-eines-python-skripts-zur-datenaufnahme-in-minio","title":"\u00dcbung 1: Einrichten eines Python-Skripts zur Datenaufnahme in MinIO","text":"<p>In dieser \u00dcbung verwenden wir den MinIO Python-Client, um Daten nach MinIO zu kopieren.</p> <p>MinIO bietet einen Python-Client, der wie folgt installiert werden kann:</p> <pre><code>pip3 install minio\n</code></pre> <p>Auf Ihrer Student-VM ist das 'minio'-Paket f\u00fcr Python bereits installiert.</p> <p>Gehen Sie in das Verzeichnis <code>exercise-materials/data-ingest-exercises</code>; dieses Verzeichnis enth\u00e4lt ein Beispielskript <code>copy_file_to_incoming.py</code>, das den MinIO Python-Client verwendet, um eine Datei nach MinIO zu kopieren.</p> <p>Versuchen Sie, das Skript auszuf\u00fchren, um die Beispieldatendatei <code>csv-aws-example.csv</code> in den <code>wis2box-incoming</code>-Bucket in MinIO zu kopieren:</p> <pre><code>cd ~/exercise-materials/data-ingest-exercises\npython3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>Note</p> <p>Sie erhalten einen Fehler, da das Skript noch nicht f\u00fcr den Zugriff auf den MinIO-Endpunkt auf Ihrer wis2box konfiguriert ist.</p> <p>Das Skript muss den korrekten Endpunkt f\u00fcr den Zugriff auf MinIO auf Ihrer wis2box kennen. Wenn wis2box auf Ihrem Host l\u00e4uft, ist der MinIO-Endpunkt unter <code>http://&lt;your-host&gt;:9000</code> verf\u00fcgbar. Das Skript muss auch mit Ihrem Speicherpasswort und dem Pfad im MinIO-Bucket aktualisiert werden, um die Daten zu speichern.</p> <p>Aktualisieren Sie das Skript und nehmen Sie die CSV-Daten auf</p> <p>Bearbeiten Sie das Skript <code>copy_file_to_incoming.py</code>, um die Fehler zu beheben, mit einer der folgenden Methoden: - Von der Kommandozeile aus: Verwenden Sie den Texteditor <code>nano</code> oder <code>vim</code>, um das Skript zu bearbeiten - Mit WinSCP: Starten Sie eine neue Verbindung mit dem Dateiprotokoll <code>SCP</code> und denselben Anmeldeinformationen wie Ihr SSH-Client. Navigieren Sie zum Verzeichnis <code>exercise-materials/data-ingest-exercises</code> und bearbeiten Sie <code>copy_file_to_incoming.py</code> mit dem eingebauten Texteditor</p> <p>Stellen Sie sicher, dass Sie:</p> <ul> <li>den korrekten MinIO-Endpunkt f\u00fcr Ihren Host definieren</li> <li>das korrekte Speicherpasswort f\u00fcr Ihre MinIO-Instanz angeben</li> <li>den korrekten Pfad im MinIO-Bucket zum Speichern der Daten angeben</li> </ul> <p>F\u00fchren Sie das Skript erneut aus, um die Beispieldatendatei <code>csv-aws-example.csv</code> in MinIO aufzunehmen:</p> <pre><code>python3 copy_file_to_incoming.py csv-aws-example.csv\n</code></pre> <p>Und stellen Sie sicher, dass die Fehler behoben sind.</p> <p>Sie k\u00f6nnen \u00fcberpr\u00fcfen, ob die Daten korrekt hochgeladen wurden, indem Sie die MinIO-Benutzeroberfl\u00e4che \u00fcberpr\u00fcfen und sehen, ob die Beispieldaten im richtigen Verzeichnis im <code>wis2box-incoming</code>-Bucket verf\u00fcgbar sind.</p> <p>Sie k\u00f6nnen das Grafana-Dashboard verwenden, um den Status des Datenaufnahme-Workflows zu \u00fcberpr\u00fcfen.</p> <p>Schlie\u00dflich k\u00f6nnen Sie MQTT Explorer verwenden, um zu \u00fcberpr\u00fcfen, ob Benachrichtigungen f\u00fcr die von Ihnen aufgenommenen Daten ver\u00f6ffentlicht wurden. Sie sollten sehen, dass die CSV-Daten in das BUFR-Format umgewandelt wurden und dass eine WIS2-Datenbenachrichtigung mit einer \"kanonischen\" URL ver\u00f6ffentlicht wurde, um das Herunterladen der BUFR-Daten zu erm\u00f6glichen.</p>"},{"location":"de/practical-sessions/automating-data-ingestion/#ubung-2-aufnahme-von-binardaten","title":"\u00dcbung 2: Aufnahme von Bin\u00e4rdaten","text":"<p>Als N\u00e4chstes versuchen wir, Bin\u00e4rdaten im BUFR-Format mit dem MinIO Python-Client aufzunehmen.</p> <p>wis2box kann Bin\u00e4rdaten im BUFR-Format mit dem in wis2box enthaltenen Plugin <code>wis2box.data.bufr4.ObservationDataBUFR</code> aufnehmen.</p> <p>Dieses Plugin teilt die BUFR-Datei in einzelne BUFR-Nachrichten auf und ver\u00f6ffentlicht jede Nachricht an den MQTT-Broker. Wenn die Station f\u00fcr die entsprechende BUFR-Nachricht nicht in den wis2box-Stationsmetadaten definiert ist, wird die Nachricht nicht ver\u00f6ffentlicht.</p> <p>Da Sie in der vorherigen Sitzung die Vorlage <code>surface-based-observations/synop</code> verwendet haben, enthalten Ihre Datenmappings das Plugin <code>FM-12 data converted to BUFR</code> f\u00fcr die Datensatzmappings. Dieses Plugin l\u00e4dt das Modul <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code>, um die Daten aufzunehmen.</p> <p>Aufnahme von Bin\u00e4rdaten im BUFR-Format</p> <p>F\u00fchren Sie den folgenden Befehl aus, um die Bin\u00e4rdatendatei <code>bufr-example.bin</code> in den <code>wis2box-incoming</code>-Bucket in MinIO zu kopieren:</p> <pre><code>python3 copy_file_to_incoming.py bufr-example.bin\n</code></pre> <p>\u00dcberpr\u00fcfen Sie das Grafana-Dashboard und MQTT Explorer, um zu sehen, ob die Testdaten erfolgreich aufgenommen und ver\u00f6ffentlicht wurden, und wenn Sie Fehler sehen, versuchen Sie, diese zu beheben.</p> <p>\u00dcberpr\u00fcfen Sie die Datenaufnahme</p> <p>Wie viele Nachrichten wurden f\u00fcr dieses Datenbeispiel an den MQTT-Broker gesendet?</p> Klicken Sie, um die Antwort anzuzeigen <p>Wenn Sie das letzte Datenbeispiel erfolgreich aufgenommen und ver\u00f6ffentlicht haben, sollten Sie 10 neue Benachrichtigungen auf dem wis2box MQTT-Broker erhalten haben. Jede Benachrichtigung entspricht Daten f\u00fcr eine Station f\u00fcr einen Beobachtungszeitstempel.</p> <p>Das Plugin <code>wis2box.data.bufr4.ObservationDataBUFR</code> teilt die BUFR-Datei in einzelne BUFR-Nachrichten auf und ver\u00f6ffentlicht eine Nachricht f\u00fcr jede Station und jeden Beobachtungszeitstempel.</p>"},{"location":"de/practical-sessions/automating-data-ingestion/#ubung-3-aufnahme-von-synop-daten-im-ascii-format","title":"\u00dcbung 3: Aufnahme von SYNOP-Daten im ASCII-Format","text":"<p>In der vorherigen Sitzung haben wir das SYNOP-Formular in der wis2box-webapp verwendet, um SYNOP-Daten im ASCII-Format aufzunehmen. Sie k\u00f6nnen SYNOP-Daten im ASCII-Format auch aufnehmen, indem Sie die Daten in MinIO hochladen.</p> <p>In der vorherigen Sitzung sollten Sie einen Datensatz erstellt haben, der das Plugin 'FM-12 data converted to BUFR' f\u00fcr die Datensatzmappings enthielt:</p> <p></p> <p>Dieses Plugin l\u00e4dt das Modul <code>wis2box.data.synop2bufr.ObservationDataSYNOP2BUFR</code>, um die Daten aufzunehmen.</p> <p>Versuchen Sie, den MinIO Python-Client zu verwenden, um die Testdaten <code>synop-202307.txt</code> und <code>synop-202308.txt</code> in Ihre wis2box-Instanz aufzunehmen.</p> <p>Beachten Sie, dass die 2 Dateien den gleichen Inhalt enthalten, aber der Dateiname unterschiedlich ist. Der Dateiname wird verwendet, um das Datum des Datenbeispiels zu bestimmen.</p> <p>Das synop2bufr-Plugin st\u00fctzt sich auf ein Dateimuster, um das Datum aus dem Dateinamen zu extrahieren. Die erste Gruppe im regul\u00e4ren Ausdruck wird verwendet, um das Jahr zu extrahieren, und die zweite Gruppe wird verwendet, um den Monat zu extrahieren.</p> <p>Nehmen Sie FM-12 SYNOP-Daten im ASCII-Format auf</p> <p>Gehen Sie zur\u00fcck zur MinIO-Oberfl\u00e4che in Ihrem Browser und navigieren Sie zum <code>wis2box-incoming</code>-Bucket und in den Pfad, in den Sie die Testdaten in der vorherigen \u00dcbung hochgeladen haben.</p> <p>Laden Sie die neuen Dateien im richtigen Pfad im <code>wis2box-incoming</code>-Bucket in MinIO hoch, um den Datenaufnahme-Workflow auszul\u00f6sen.</p> <p>\u00dcberpr\u00fcfen Sie das Grafana-Dashboard und MQTT Explorer, um zu sehen, ob die Testdaten erfolgreich aufgenommen und ver\u00f6ffentlicht wurden.</p> <p>Was ist der Unterschied in <code>properties.datetime</code> zwischen den beiden an den MQTT-Broker gesendeten Nachrichten?</p> Klicken Sie, um die Antwort anzuzeigen <p>\u00dcberpr\u00fcfen Sie die Eigenschaften der letzten 2 Benachrichtigungen in MQTT Explorer und Sie werden feststellen, dass eine Benachrichtigung hat:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230703T090000\",\n    \"datetime\": \"2023-07-03T09:00:00Z\",\n    ...\n</code></pre> <p>und die andere Benachrichtigung hat:</p> <pre><code>\"properties\": {\n    \"data_id\": \"wis2/urn:wmo:md:nl-knmi-test:surface-based-observations.synop/WIGOS_0-20000-0-60355_20230803T090000\",\n    \"datetime\": \"2023-08-03T09:00:00Z\",\n    ...\n</code></pre> <p>Der Dateiname wurde verwendet, um das Jahr und den Monat des Datenbeispiels zu bestimmen.</p>"},{"location":"de/practical-sessions/automating-data-ingestion/#ubung-4-datenaufnahme-in-minio-uber-sftp","title":"\u00dcbung 4: Datenaufnahme in MinIO \u00fcber SFTP","text":"<p>Daten k\u00f6nnen auch \u00fcber SFTP in MinIO aufgenommen werden.</p> <p>Der in wis2box-stack aktivierte MinIO-Dienst hat SFTP auf Port 8022 aktiviert. Sie k\u00f6nnen \u00fcber SFTP mit denselben Anmeldeinformationen wie f\u00fcr die MinIO-Benutzeroberfl\u00e4che auf MinIO zugreifen. In dieser \u00dcbung verwenden wir die Admin-Anmeldeinformationen f\u00fcr den MinIO-Dienst, wie in <code>wis2box.env</code> definiert, aber Sie k\u00f6nnen auch zus\u00e4tzliche Benutzer in der MinIO-Benutzeroberfl\u00e4che erstellen.</p> <p>Um \u00fcber SFTP auf MinIO zuzugreifen, k\u00f6nnen Sie jede SFTP-Client-Software verwenden. In dieser \u00dcbung verwenden wir Win</p>"},{"location":"de/practical-sessions/bufr-command-line-tools/","title":"Arbeiten mit BUFR-Daten","text":"<p>Lernziele</p> <p>In dieser praktischen \u00dcbung werden Sie in einige der BUFR-Tools eingef\u00fchrt, die im wis2box-api-Container enthalten sind und zur Umwandlung von Daten in das BUFR-Format sowie zum Lesen der in BUFR codierten Inhalte verwendet werden.</p> <p>Sie werden lernen:</p> <ul> <li>wie man die Header in der BUFR-Datei mit dem Befehl <code>bufr_ls</code> untersucht</li> <li>wie man die Daten in einer BUFR-Datei mit <code>bufr_dump</code> extrahiert und untersucht</li> <li>die grundlegende Struktur der BUFR-Templates, die in csv2bufr verwendet werden, und wie man das Kommandozeilentool benutzt</li> <li>und wie man grundlegende \u00c4nderungen an den BUFR-Templates vornimmt und wie man die wis2box aktualisiert, um die \u00fcberarbeitete Version zu verwenden</li> </ul>"},{"location":"de/practical-sessions/bufr-command-line-tools/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Die Plugins, die Benachrichtigungen mit BUFR-Daten erzeugen, verwenden Prozesse in der wis2box-api, um mit BUFR-Daten zu arbeiten, zum Beispiel um die Daten von CSV nach BUFR oder von BUFR nach GeoJSON zu transformieren.</p> <p>Der wis2box-api-Container enth\u00e4lt eine Reihe von Tools f\u00fcr die Arbeit mit BUFR-Daten.</p> <p>Dazu geh\u00f6ren die von ECMWF entwickelten und in der ecCodes-Software enthaltenen Tools. Weitere Informationen dazu finden Sie auf der ecCodes-Website.</p> <p>In dieser Sitzung werden Sie in die Tools <code>bufr_ls</code> und <code>bufr_dump</code> aus dem ecCodes-Softwarepaket sowie in die erweiterte Konfiguration des csv2bufr-Tools eingef\u00fchrt.</p>"},{"location":"de/practical-sessions/bufr-command-line-tools/#vorbereitung","title":"Vorbereitung","text":"<p>Um die BUFR-Kommandozeilentools zu nutzen, m\u00fcssen Sie im wis2box-api-Container angemeldet sein, und sofern nicht anders angegeben, sollten alle Befehle in diesem Container ausgef\u00fchrt werden. Sie ben\u00f6tigen auch den MQTT Explorer, der mit Ihrem Broker verbunden ist.</p> <p>Verbinden Sie sich zun\u00e4chst \u00fcber Ihren SSH-Client mit Ihrer Student-VM und melden Sie sich dann im wis2box-api-Container an:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login wis2box-api\n</code></pre> <p>Best\u00e4tigen Sie, dass die Tools verf\u00fcgbar sind, beginnend mit ecCodes:</p> <p><pre><code>bufr_dump -V\n</code></pre> Sie sollten folgende Antwort erhalten:</p> <pre><code>ecCodes Version 2.28.0\n</code></pre> <p>\u00dcberpr\u00fcfen Sie als N\u00e4chstes csv2bufr:</p> <pre><code>csv2bufr --version\n</code></pre> <p>Sie sollten folgende Antwort erhalten:</p> <pre><code>csv2bufr, version 0.7.4\n</code></pre> <p>Erstellen Sie schlie\u00dflich ein Arbeitsverzeichnis:</p> <pre><code>cd /data/wis2box\nmkdir -p working/bufr-cli\ncd working/bufr-cli\n</code></pre> <p>Sie sind jetzt bereit, die BUFR-Tools zu verwenden.</p>"},{"location":"de/practical-sessions/bufr-command-line-tools/#verwendung-der-bufr-kommandozeilentools","title":"Verwendung der BUFR-Kommandozeilentools","text":""},{"location":"de/practical-sessions/bufr-command-line-tools/#ubung-1-bufr_ls","title":"\u00dcbung 1 - bufr_ls","text":"<p>In dieser ersten \u00dcbung verwenden Sie den Befehl <code>bufr_ls</code>, um die Header einer BUFR-Datei zu untersuchen und den Inhalt der Datei zu bestimmen. Die folgenden Header sind in einer BUFR-Datei enthalten:</p> Header ecCodes-Schl\u00fcssel Beschreibung originating/generating centre centre Das Ursprungs-/Erzeugungszentrum f\u00fcr die Daten originating/generating sub-centre bufrHeaderSubCentre Das Ursprungs-/Erzeugungsunterzentrum f\u00fcr die Daten Update sequence number updateSequenceNumber Ob dies die erste Version der Daten (0) oder ein Update (&gt;0) ist Data category dataCategory Die Art der in der BUFR-Nachricht enthaltenen Daten, z.B. Oberfl\u00e4chendaten. Siehe BUFR-Tabelle A International data sub-category internationalDataSubCategory Die Unterkategorie der in der BUFR-Nachricht enthaltenen Daten. Siehe Common Code Table C-13 Year typicalYear (typicalDate) Typischste Zeit f\u00fcr den BUFR-Nachrichteninhalt Month typicalMonth (typicalDate) Typischste Zeit f\u00fcr den BUFR-Nachrichteninhalt Day typicalDay (typicalDate) Typischste Zeit f\u00fcr den BUFR-Nachrichteninhalt Hour typicalHour (typicalTime) Typischste Zeit f\u00fcr den BUFR-Nachrichteninhalt Minute typicalMinute (typicalTime) Typischste Zeit f\u00fcr den BUFR-Nachrichteninhalt BUFR descriptors unexpandedDescriptors Liste von einem oder mehreren BUFR-Deskriptoren, die die in der Datei enthaltenen Daten definieren <p>Laden Sie die Beispieldatei direkt in den wis2box-management-Container mit folgendem Befehl herunter:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex1.bufr4 --output bufr-cli-ex1.bufr4\n</code></pre> <p>Verwenden Sie nun den folgenden Befehl, um <code>bufr_ls</code> f\u00fcr diese Datei auszuf\u00fchren:</p> <pre><code>bufr_ls bufr-cli-ex1.bufr4\n</code></pre> <p>Sie sollten folgende Ausgabe sehen:</p> <pre><code>bufr-cli-ex1.bufr4\ncentre                     masterTablesVersionNumber  localTablesVersionNumber   typicalDate                typicalTime                numberOfSubsets\ncnmc                       29                         0                          20231002                   000000                     1\n1 of 1 messages in bufr-cli-ex1.bufr4\n\n1 of 1 total messages in 1 files\n</code></pre> <p>F\u00fcr sich genommen sind diese Informationen nicht sehr aussagekr\u00e4ftig, da nur begrenzte Informationen zum Dateiinhalt bereitgestellt werden.</p> <p>Die Standardausgabe liefert keine Informationen \u00fcber den Beobachtungs- oder Datentyp und ist in einem Format, das nicht sehr leicht zu lesen ist. Es k\u00f6nnen jedoch verschiedene Optionen an <code>bufr_ls</code> \u00fcbergeben werden, um sowohl das Format als auch die ausgegebenen Header-Felder zu \u00e4ndern.</p> <p>Verwenden Sie <code>bufr_ls</code> ohne Argumente, um die Optionen anzuzeigen:</p> <pre><code>bufr_ls\n</code></pre> <p>Sie sollten folgende Ausgabe sehen:</p> <pre><code>NAME    bufr_ls\n\nDESCRIPTION\n        List content of BUFR files printing values of some header keys.\n        Only scalar keys can be printed.\n        It does not fail when a key is not found.\n\nUSAGE\n        bufr_ls [options] bufr_file bufr_file ...\n\nOPTIONS\n        -p key[:{s|d|i}],key[:{s|d|i}],...\n                Declaration of keys to print.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be requested. Default type is string.\n        -F format\n                C style format for floating-point values.\n        -P key[:{s|d|i}],key[:{s|d|i}],...\n                As -p adding the declared keys to the default list.\n        -w key[:{s|d|i}]{=|!=}value,key[:{s|d|i}]{=|!=}value,...\n                Where clause.\n                Messages are processed only if they match all the key/value constraints.\n                A valid constraint is of type key=value or key!=value.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be specified. Default type is string.\n                In the value you can also use the forward-slash character '/' to specify an OR condition (i.e. a logical disjunction)\n                Note: only one -w clause is allowed.\n        -j      JSON output\n        -s key[:{s|d|i}]=value,key[:{s|d|i}]=value,...\n                Key/values to set.\n                For each key a string (key:s), a double (key:d) or an integer (key:i)\n                type can be defined. By default the native type is set.\n        -n namespace\n                All the keys belonging to the given namespace are printed.\n        -m      Mars keys are printed.\n        -V      Version.\n        -W width\n                Minimum width of each column in output. Default is 10.\n        -g      Copy GTS header.\n        -7      Does not fail when the message has wrong length\n\nSEE ALSO\n        Full documentation and examples at:\n        &lt;https://confluence.ecmwf.int/display/ECC/bufr_ls&gt;\n</code></pre> <p>F\u00fchren Sie nun denselben Befehl f\u00fcr die Beispieldatei aus, aber geben Sie die Informationen im JSON-Format aus.</p> <p>Question</p> <p>Welches Flag \u00fcbergeben Sie an den Befehl <code>bufr_ls</code>, um die Ausgabe im JSON-Format anzuzeigen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie k\u00f6nnen das Ausgabeformat mit dem Flag <code>-j</code> auf JSON \u00e4ndern, d.h. <code>bufr_ls -j &lt;input-file&gt;</code>. Dies kann lesbarer sein als das Standardausgabeformat. Siehe das Beispiel unten:</p> <pre><code>{ \"messages\" : [\n  {\n    \"centre\": \"cnmc\",\n    \"masterTablesVersionNumber\": 29,\n    \"localTablesVersionNumber\": 0,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\",\n    \"numberOfSubsets\": 1\n  }\n]}\n</code></pre> <p>Bei der Untersuchung einer BUFR-Datei m\u00f6chten wir oft den Datentyp und das typische Datum/die typische Uhrzeit der Daten in der Datei bestimmen. Diese Informationen k\u00f6nnen mit dem Flag <code>-p</code> aufgelistet werden, um die auszugebenden Header auszuw\u00e4hlen. Mehrere Header k\u00f6nnen durch eine kommagetrennte Liste eingeschlossen werden.</p> <p>Untersuchen Sie mit dem Befehl <code>bufr_ls</code> die Testdatei und identifizieren Sie den Datentyp in der Datei sowie das typische Datum und die typische Uhrzeit f\u00fcr diese Daten.</p> Hint <p>Die ecCodes-Schl\u00fcssel sind in der obigen Tabelle angegeben. Wir k\u00f6nnen Folgendes verwenden, um die dataCategory und internationalDataSubCategory der BUFR-Daten aufzulisten:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory bufr-cli-ex1.bufr4\n</code></pre> <p>Bei Bedarf k\u00f6nnen weitere Schl\u00fcssel hinzugef\u00fcgt werden.</p> <p>Question</p> <p>Welche Art von Daten (Datenkategorie und Unterkategorie) sind in der Datei enthalten? Was ist das typische Datum und die typische Uhrzeit f\u00fcr die Daten?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der Befehl, den Sie ausf\u00fchren m\u00fcssen, sollte \u00e4hnlich wie folgt aussehen:</p> <pre><code>bufr_ls -p dataCategory,internationalDataSubCategory,typicalDate,typicalTime -j bufr-cli-ex1.bufr4\n</code></pre> <p>Sie haben m\u00f6glicherweise zus\u00e4tzliche Schl\u00fcssel oder Jahr, Monat, Tag usw. einzeln aufgelistet. Die Ausgabe sollte \u00e4hnlich wie unten sein, je nachdem, ob Sie JSON oder die Standardausgabe gew\u00e4hlt haben.</p> <pre><code>{ \"messages\" : [\n  {\n    \"dataCategory\": 2,\n    \"internationalDataSubCategory\": 4,\n    \"typicalDate\": 20231002,\n    \"typicalTime\": \"000000\"\n  }\n]}\n</code></pre> <p>Daraus sehen wir:</p> <ul> <li>Die Datenkategorie ist 2, aus BUFR-Tabelle A   k\u00f6nnen wir sehen, dass diese Datei \"Vertikale Sondierungen (au\u00dfer Satellit)\" enth\u00e4lt.</li> <li>Die internationale Unterkategorie ist 4, was auf    \"Temperatur-/Feuchtigkeits-/Windmeldungen aus der oberen Atmosph\u00e4re von festen Landstationen (TEMP)\" hinweist. Diese Information kann in   Common Code Table C-13 (Zeile 33) nachgeschlagen werden. Beachten Sie die Kombination   von Kategorie und Unterkategorie.</li> <li>Das typische Datum und die typische Uhrzeit sind 2023/10/02 und 00:00:00z.</li> </ul>"},{"location":"de/practical-sessions/bufr-command-line-tools/#ubung-2-bufr_dump","title":"\u00dcbung 2 - bufr_dump","text":"<p>Der Befehl <code>bufr_dump</code> kann verwendet werden, um den Inhalt einer BUFR-Datei, einschlie\u00dflich der Daten selbst, aufzulisten und zu untersuchen.</p> <p>In dieser \u00dcbung verwenden wir eine BUFR-Datei, die der entspricht, die Sie w\u00e4hrend der ersten csv2bufr-\u00dcbungssitzung mit der wis2box-Webapp erstellt haben.</p> <p>Laden Sie die Beispieldatei direkt mit folgendem Befehl in den wis2box-Management-Container herunter:</p> <pre><code>curl https://training.wis2box.wis.wmo.int/sample-data/bufr-cli-ex2.bufr4 --output bufr-cli-ex2.bufr4\n</code></pre> <p>F\u00fchren Sie nun den Befehl <code>bufr_dump</code> f\u00fcr die Datei aus und verwenden Sie das Flag <code>-p</code>, um die Daten im Klartext (key=value-Format) auszugeben:</p> <pre><code>bufr_dump -p bufr-cli-ex2.bufr4\n</code></pre> <p>Sie sollten etwa 240 Schl\u00fcssel sehen, von denen viele fehlen. Dies ist typisch f\u00fcr reale Daten, da nicht alle eccodes-Schl\u00fcssel mit gemeldeten Daten gef\u00fcllt sind.</p> <p>Hint</p> <p>Die fehlenden W</p>"},{"location":"de/practical-sessions/configuring-station-metadata/","title":"Konfiguration von Stationsmetadaten","text":"<p>Lernergebnisse</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>einen Autorisierungstoken f\u00fcr den <code>collections/stations</code> Endpunkt zu erstellen</li> <li>Stationsmetadaten zu wis2box hinzuzuf\u00fcgen</li> <li>Stationsmetadaten mit der wis2box-webapp zu aktualisieren/l\u00f6schen</li> </ul>"},{"location":"de/practical-sessions/configuring-station-metadata/#einfuhrung","title":"Einf\u00fchrung","text":"<p>F\u00fcr den internationalen Datenaustausch zwischen WMO-Mitgliedern ist es wichtig, ein gemeinsames Verst\u00e4ndnis der Stationen zu haben, die die Daten erzeugen. Das WMO Integrated Global Observing System (WIGOS) bietet einen Rahmen f\u00fcr die Integration von Beobachtungssystemen und Datenmanagementsystemen. Die WIGOS Station Identifier (WSI) wird als eindeutige Referenz der Station verwendet, die einen bestimmten Satz von Beobachtungsdaten produziert hat.</p> <p>wis2box verf\u00fcgt \u00fcber eine Sammlung von Stationsmetadaten, die zur Beschreibung der Stationen dient, welche die Beobachtungsdaten erzeugen, und sollte aus OSCAR/Surface abgerufen werden. Die Stationsmetadaten in wis2box werden von den BUFR-Transformationstools verwendet, um zu \u00fcberpr\u00fcfen, ob die Eingabedaten einen g\u00fcltigen WIGOS Station Identifier (WSI) enthalten, und um eine Zuordnung zwischen dem WSI und den Stationsmetadaten bereitzustellen.</p>"},{"location":"de/practical-sessions/configuring-station-metadata/#erstellen-eines-autorisierungstokens-fur-collectionsstations","title":"Erstellen eines Autorisierungstokens f\u00fcr collections/stations","text":"<p>Um Stationen \u00fcber die wis2box-webapp zu bearbeiten, m\u00fcssen Sie zun\u00e4chst einen Autorisierungstoken erstellen.</p> <p>Melden Sie sich bei Ihrer Student-VM an und stellen Sie sicher, dass Sie sich im Verzeichnis <code>wis2box-1.0.0rc1</code> befinden:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Melden Sie sich dann mit folgendem Befehl beim wis2box-management Container an:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>Innerhalb des wis2box-management Containers k\u00f6nnen Sie einen Autorisierungstoken f\u00fcr einen bestimmten Endpunkt mit dem Befehl erstellen: <code>wis2box auth add-token --path &lt;my-endpoint&gt;</code>.</p> <p>Um beispielsweise einen zuf\u00e4llig generierten Token f\u00fcr den Endpunkt <code>collections/stations</code> zu verwenden:</p> <pre><code>wis2box auth add-token --path collections/stations\n</code></pre> <p>Die Ausgabe sieht wie folgt aus:</p> <pre><code>Continue with token: 7ca20386a131f0de384e6ffa288eb1ae385364b3694e47e3b451598c82e899d1 [y/N]? y\nToken successfully created\n</code></pre> <p>Oder, wenn Sie Ihren eigenen Token f\u00fcr den Endpunkt <code>collections/stations</code> definieren m\u00f6chten, k\u00f6nnen Sie das folgende Beispiel verwenden:</p> <pre><code>wis2box auth add-token --path collections/stations DataIsMagic\n</code></pre> <p>Ausgabe:</p> <pre><code>Continue with token: DataIsMagic [y/N]? y\nToken successfully created\n</code></pre> <p>Bitte erstellen Sie einen Autorisierungstoken f\u00fcr den Endpunkt <code>collections/stations</code> gem\u00e4\u00df den obigen Anweisungen.</p>"},{"location":"de/practical-sessions/configuring-station-metadata/#stationsmetadaten-mit-der-wis2box-webapp-hinzufugen","title":"Stationsmetadaten mit der wis2box-webapp hinzuf\u00fcgen","text":"<p>Die wis2box-webapp bietet eine grafische Benutzeroberfl\u00e4che zur Bearbeitung von Stationsmetadaten.</p> <p>\u00d6ffnen Sie die wis2box-webapp in Ihrem Browser, indem Sie zu <code>http://&lt;your-host&gt;/wis2box-webapp</code> navigieren:</p> <p></p> <p>Und w\u00e4hlen Sie Stationen:</p> <p></p> <p>Wenn Sie auf \"add new station\" klicken, werden Sie aufgefordert, die WIGOS-Stationskennung f\u00fcr die Station anzugeben, die Sie hinzuf\u00fcgen m\u00f6chten:</p> <p></p> <p>Stationsmetadaten f\u00fcr 3 oder mehr Stationen hinzuf\u00fcgen</p> <p>Bitte f\u00fcgen Sie drei oder mehr Stationen zur wis2box-Stationsmetadatensammlung Ihrer wis2box hinzu.</p> <p>Bitte verwenden Sie wenn m\u00f6glich Stationen aus Ihrem Land, insbesondere wenn Sie eigene Daten mitgebracht haben.</p> <p>Wenn Ihr Land keine Stationen in OSCAR/Surface hat, k\u00f6nnen Sie f\u00fcr diese \u00dcbung die folgenden Stationen verwenden:</p> <ul> <li>0-20000-0-91334</li> <li>0-20000-0-96323 (beachten Sie die fehlende Stationsh\u00f6he in OSCAR)</li> <li>0-20000-0-96749 (beachten Sie die fehlende Stationsh\u00f6he in OSCAR)</li> </ul> <p>Wenn Sie auf Suchen klicken, werden die Stationsdaten von OSCAR/Surface abgerufen. Bitte beachten Sie, dass dies einige Sekunden dauern kann.</p> <p>\u00dcberpr\u00fcfen Sie die von OSCAR/Surface zur\u00fcckgegebenen Daten und erg\u00e4nzen Sie fehlende Daten, wo erforderlich. W\u00e4hlen Sie ein Thema f\u00fcr die Station, geben Sie Ihren Autorisierungstoken f\u00fcr den Endpunkt <code>collections/stations</code> ein und klicken Sie auf \"save\":</p> <p></p> <p></p> <p>Gehen Sie zur\u00fcck zur Stationsliste und Sie werden die Station sehen, die Sie hinzugef\u00fcgt haben:</p> <p></p> <p>Wiederholen Sie diesen Vorgang, bis Sie mindestens 3 Stationen konfiguriert haben.</p> <p>Ableitung fehlender H\u00f6heninformationen</p> <p>Wenn die H\u00f6he Ihrer Station fehlt, gibt es Online-Dienste, die bei der Suche nach der H\u00f6he mithilfe offener H\u00f6hendaten helfen. Ein Beispiel daf\u00fcr ist die Open Topo Data API.</p> <p>Um beispielsweise die H\u00f6he bei Breitengrad -6.15558 und L\u00e4ngengrad 106.84204 zu erhalten, k\u00f6nnen Sie die folgende URL in einen neuen Browser-Tab kopieren:</p> <pre><code>https://api.opentopodata.org/v1/aster30m?locations=-6.15558,106.84204\n</code></pre> <p>Ausgabe:</p> <pre><code>{\n  \"results\": [\n    {\n      \"dataset\": \"aster30m\", \n      \"elevation\": 7.0, \n      \"location\": {\n        \"lat\": -6.15558, \n        \"lng\": 106.84204\n      }\n    }\n  ], \n  \"status\": \"OK\"\n}\n</code></pre>"},{"location":"de/practical-sessions/configuring-station-metadata/#uberprufen-ihrer-stationsmetadaten","title":"\u00dcberpr\u00fcfen Ihrer Stationsmetadaten","text":"<p>Die Stationsmetadaten werden im Backend von wis2box gespeichert und \u00fcber die wis2box-api verf\u00fcgbar gemacht.</p> <p>Wenn Sie einen Browser \u00f6ffnen und zu <code>http://&lt;your-host&gt;/oapi/collections/stations/items</code> navigieren, sehen Sie die von Ihnen hinzugef\u00fcgten Stationsmetadaten:</p> <p></p> <p>\u00dcberpr\u00fcfen Ihrer Stationsmetadaten</p> <p>\u00dcberpr\u00fcfen Sie, ob die von Ihnen hinzugef\u00fcgten Stationen Ihrem Datensatz zugeordnet sind, indem Sie in Ihrem Browser <code>http://&lt;your-host&gt;/oapi/collections/stations/items</code> besuchen.</p> <p>Sie haben auch die M\u00f6glichkeit, die Station in der wis2box-webapp anzuzeigen/zu aktualisieren/zu l\u00f6schen. Beachten Sie, dass Sie Ihren Autorisierungstoken f\u00fcr den Endpunkt <code>collections/stations</code> angeben m\u00fcssen, um die Station zu aktualisieren/zu l\u00f6schen.</p> <p>Stationsmetadaten aktualisieren/l\u00f6schen</p> <p>Versuchen Sie, die Stationsmetadaten f\u00fcr eine der von Ihnen hinzugef\u00fcgten Stationen mit der wis2box-webapp zu aktualisieren/zu l\u00f6schen.</p>"},{"location":"de/practical-sessions/configuring-station-metadata/#massenupload-von-stationsmetadaten","title":"Massenupload von Stationsmetadaten","text":"<p>Beachten Sie, dass wis2box auch die M\u00f6glichkeit bietet, Stationsmetadaten \"in Masse\" aus einer CSV-Datei \u00fcber die Kommandozeile im wis2box-management Container zu laden.</p> <pre><code>python3 wis2box-ctl.py login\nwis2box metadata station publish-collection -p /data/wis2box/metadata/station/station_list.csv -th origin/a/wis2/centre-id/weather/surface-based-observations/synop\n</code></pre> <p>Dadurch k\u00f6nnen Sie eine gro\u00dfe Anzahl von Stationen auf einmal hochladen und sie einem bestimmten Thema zuordnen.</p> <p>Sie k\u00f6nnen die CSV-Datei mit Excel oder einem Texteditor erstellen und dann in wis2box-host-datadir hochladen, um sie dem wis2box-management Container im Verzeichnis <code>/data/wis2box/</code> zur Verf\u00fcgung zu stellen.</p> <p>Nach einem Massenupload von Stationen wird empfohlen, die Stationen in der wis2box-webapp zu \u00fcberpr\u00fcfen, um sicherzustellen, dass die Daten korrekt hochgeladen wurden.</p> <p>Weitere Informationen zur Verwendung dieser Funktion finden Sie in der offiziellen wis2box-Dokumentation.</p>"},{"location":"de/practical-sessions/configuring-station-metadata/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie man:</p> <ul> <li>einen Autorisierungstoken f\u00fcr den Endpunkt <code>collections/stations</code> erstellt, der mit der wis2box-webapp verwendet werden kann</li> <li>Stationsmetadaten mit der wis2box-webapp zu wis2box hinzuf\u00fcgt</li> <li>Stationsmetadaten mit der wis2box-webapp anzeigt/aktualisiert/l\u00f6scht</li> </ul>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/","title":"Konfiguration von Datens\u00e4tzen in wis2box","text":"<p>Lernergebnisse</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>einen neuen Datensatz zu erstellen</li> <li>Entdeckungsmetadaten f\u00fcr einen Datensatz zu erstellen</li> <li>Datenzuordnungen f\u00fcr einen Datensatz zu konfigurieren</li> <li>eine WIS2-Benachrichtigung mit einem WCMP2-Datensatz zu ver\u00f6ffentlichen</li> <li>Ihren Datensatz zu aktualisieren und erneut zu ver\u00f6ffentlichen</li> </ul>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#einfuhrung","title":"Einf\u00fchrung","text":"<p>wis2box verwendet Datens\u00e4tze, die mit Entdeckungsmetadaten und Datenzuordnungen verkn\u00fcpft sind.</p> <p>Entdeckungsmetadaten werden verwendet, um einen WCMP2-Datensatz (WMO Core Metadata Profile 2) zu erstellen, der \u00fcber eine WIS2-Benachrichtigung geteilt wird, die auf Ihrem wis2box-Broker ver\u00f6ffentlicht wird.</p> <p>Die Datenzuordnungen werden verwendet, um ein Daten-Plugin mit Ihren Eingabedaten zu verkn\u00fcpfen, wodurch Ihre Daten vor der Ver\u00f6ffentlichung \u00fcber die WIS2-Benachrichtigung transformiert werden k\u00f6nnen.</p> <p>In dieser Sitzung werden Sie durch die Erstellung eines neuen Datensatzes, die Erstellung von Entdeckungsmetadaten und die Konfiguration von Datenzuordnungen gef\u00fchrt. Sie werden Ihren Datensatz in der wis2box-API \u00fcberpr\u00fcfen und die WIS2-Benachrichtigung f\u00fcr Ihre Entdeckungsmetadaten \u00fcberpr\u00fcfen.</p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#vorbereitung","title":"Vorbereitung","text":"<p>Verbinden Sie sich mit Ihrem Broker \u00fcber MQTT Explorer.</p> <p>Anstatt Ihre internen Broker-Anmeldedaten zu verwenden, nutzen Sie die \u00f6ffentlichen Anmeldedaten <code>everyone/everyone</code>:</p> <p></p> <p>Note</p> <p>Sie m\u00fcssen die Anmeldedaten Ihres internen Brokers niemals mit externen Benutzern teilen. Der Benutzer 'everyone' ist ein \u00f6ffentlicher Benutzer, um das Teilen von WIS2-Benachrichtigungen zu erm\u00f6glichen.</p> <p>Die Anmeldedaten <code>everyone/everyone</code> haben nur Lesezugriff auf das Thema 'origin/a/wis2/#'. Dies ist das Thema, unter dem die WIS2-Benachrichtigungen ver\u00f6ffentlicht werden. Der Global Broker kann sich mit diesen \u00f6ffentlichen Anmeldedaten anmelden, um die Benachrichtigungen zu empfangen.</p> <p>Der Benutzer 'everyone' sieht keine internen Themen und kann keine Nachrichten ver\u00f6ffentlichen.</p> <p>\u00d6ffnen Sie einen Browser und \u00f6ffnen Sie eine Seite zu <code>http://&lt;your-host&gt;/wis2box-webapp</code>. Stellen Sie sicher, dass Sie angemeldet sind und auf die Seite 'dataset editor' zugreifen k\u00f6nnen.</p> <p>Schauen Sie im Abschnitt Initialisierung von wis2box nach, wenn Sie sich nicht erinnern k\u00f6nnen, wie Sie sich mit dem Broker verbinden oder auf die wis2box-webapp zugreifen k\u00f6nnen.</p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#erstellen-eines-autorisierungstokens-fur-processeswis2box","title":"Erstellen eines Autorisierungstokens f\u00fcr processes/wis2box","text":"<p>Sie ben\u00f6tigen ein Autorisierungstoken f\u00fcr den Endpunkt 'processes/wis2box', um Ihren Datensatz zu ver\u00f6ffentlichen.</p> <p>Um ein Autorisierungstoken zu erstellen, greifen Sie \u00fcber SSH auf Ihre Trainings-VM zu und verwenden Sie die folgenden Befehle, um sich beim wis2box-management-Container anzumelden:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>F\u00fchren Sie dann den folgenden Befehl aus, um ein zuf\u00e4llig generiertes Autorisierungstoken f\u00fcr den Endpunkt 'processes/wis2box' zu erstellen:</p> <pre><code>wis2box auth add-token --path processes/wis2box\n</code></pre> <p>Sie k\u00f6nnen auch ein Token mit einem bestimmten Wert erstellen, indem Sie das Token als Argument f\u00fcr den Befehl angeben:</p> <pre><code>wis2box auth add-token --path processes/wis2box MyS3cretToken\n</code></pre> <p>Stellen Sie sicher, dass Sie den Token-Wert kopieren und auf Ihrem lokalen Computer speichern, da Sie ihn sp\u00e4ter ben\u00f6tigen werden.</p> <p>Sobald Sie Ihr Token haben, k\u00f6nnen Sie den wis2box-management-Container verlassen:</p> <pre><code>exit\n</code></pre>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#erstellen-eines-neuen-datensatzes-in-der-wis2box-webapp","title":"Erstellen eines neuen Datensatzes in der wis2box-webapp","text":"<p>Navigieren Sie zur Seite 'dataset editor' in der wis2box-webapp Ihrer wis2box-Instanz, indem Sie zu <code>http://&lt;your-host&gt;/wis2box-webapp</code> gehen und 'dataset editor' aus dem Men\u00fc auf der linken Seite ausw\u00e4hlen.</p> <p>Auf der Seite 'dataset editor' klicken Sie unter der Registerkarte 'Datasets' auf \"Create New ...\":</p> <p></p> <p>Ein Popup-Fenster erscheint und fordert Sie auf, Folgendes anzugeben:</p> <ul> <li>Centre ID: Dies ist das Akronym der Agentur (in Kleinbuchstaben und ohne Leerzeichen), wie vom WMO-Mitglied angegeben, das das f\u00fcr die Ver\u00f6ffentlichung der Daten verantwortliche Datenzentrum identifiziert.</li> <li>Data Type: Der Typ der Daten, f\u00fcr die Sie Metadaten erstellen. Sie k\u00f6nnen zwischen der Verwendung einer vordefinierten Vorlage oder der Auswahl von 'other' w\u00e4hlen. Wenn 'other' ausgew\u00e4hlt wird, m\u00fcssen mehr Felder manuell ausgef\u00fcllt werden.</li> </ul> <p>Centre ID</p> <p>Ihre Centre-ID sollte mit der TLD Ihres Landes beginnen, gefolgt von einem Bindestrich (<code>-</code>) und einem abgek\u00fcrzten Namen Ihrer Organisation (zum Beispiel <code>fr-meteofrance</code>). Die Centre-ID muss in Kleinbuchstaben sein und nur alphanumerische Zeichen verwenden. Die Dropdown-Liste zeigt alle derzeit bei WIS2 registrierten Centre-IDs sowie alle Centre-IDs, die Sie bereits in wis2box erstellt haben.</p> <p>Data Type Templates</p> <p>Das Feld Data Type erm\u00f6glicht es Ihnen, aus einer Liste von Vorlagen auszuw\u00e4hlen, die im wis2box-webapp-Datensatzeditor verf\u00fcgbar sind. Eine Vorlage f\u00fcllt das Formular mit vorgeschlagenen Standardwerten vor, die f\u00fcr den Datentyp geeignet sind. Dazu geh\u00f6ren vorgeschlagene Titel und Schl\u00fcsselw\u00f6rter f\u00fcr die Metadaten und vorkonfigurierte Daten-Plugins. Das Thema wird auf das Standardthema f\u00fcr den Datentyp festgelegt.</p> <p>F\u00fcr das Training verwenden wir den Datentyp weather/surface-based-observations/synop, der Daten-Plugins enth\u00e4lt, die sicherstellen, dass die Daten vor der Ver\u00f6ffentlichung in das BUFR-Format umgewandelt werden.</p> <p>Wenn Sie CAP-Warnungen mit wis2box ver\u00f6ffentlichen m\u00f6chten, verwenden Sie die Vorlage weather/advisories-warnings. Diese Vorlage enth\u00e4lt ein Daten-Plugin, das \u00fcberpr\u00fcft, ob die Eingabedaten eine g\u00fcltige CAP-Warnung sind, bevor sie ver\u00f6ffentlicht werden. Um CAP-Warnungen zu erstellen und \u00fcber wis2box zu ver\u00f6ffentlichen, k\u00f6nnen Sie CAP Composer verwenden.</p> <p>Bitte w\u00e4hlen Sie eine f\u00fcr Ihre Organisation geeignete Centre-ID.</p> <p>F\u00fcr Data Type w\u00e4hlen Sie weather/surface-based-observations/synop:</p> <p></p> <p>Klicken Sie auf continue to form, um fortzufahren. Ihnen wird nun das Dataset Editor Form pr\u00e4sentiert.</p> <p>Da Sie den Datentyp weather/surface-based-observations/synop ausgew\u00e4hlt haben, wird das Formular mit einigen Anfangswerten f\u00fcr diesen Datentyp vorausgef\u00fcllt.</p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#erstellen-von-entdeckungsmetadaten","title":"Erstellen von Entdeckungsmetadaten","text":"<p>Mit dem Dataset Editor-Formular k\u00f6nnen Sie die Entdeckungsmetadaten f\u00fcr Ihren Datensatz bereitstellen, die der wis2box-management-Container zur Ver\u00f6ffentlichung eines WCMP2-Datensatzes verwenden wird.</p> <p>Da Sie den Datentyp 'weather/surface-based-observations/synop' ausgew\u00e4hlt haben, wird das Formular mit einigen Standardwerten vorausgef\u00fcllt.</p> <p>Bitte ersetzen Sie die automatisch generierte 'Local ID' durch einen beschreibenden Namen f\u00fcr Ihren Datensatz, z.B. 'synop-dataset-wis2training':</p> <p></p> <p>\u00dcberpr\u00fcfen Sie den Titel und die Schl\u00fcsselw\u00f6rter, aktualisieren Sie sie bei Bedarf und geben Sie eine Beschreibung f\u00fcr Ihren Datensatz an.</p> <p>Beachten Sie, dass es Optionen gibt, die 'WMO Data Policy' von 'core' auf 'recommended' zu \u00e4ndern oder Ihre Standard-Metadaten-ID zu \u00e4ndern. Bitte behalten Sie die Datenpolitik als 'core' bei und verwenden Sie die Standard-Metadaten-ID.</p> <p>Als N\u00e4chstes \u00fcberpr\u00fcfen Sie den Abschnitt, der Ihre 'Temporal Properties' und 'Spatial Properties' definiert. Sie k\u00f6nnen den Begrenzungsrahmen anpassen, indem Sie die Felder 'North Latitude', 'South Latitude', 'East Longitude' und 'West Longitude' aktualisieren:</p> <p></p> <p>Als N\u00e4chstes f\u00fcllen Sie den Abschnitt aus, der die 'Contact Information of the Data Provider' definiert:</p> <p></p> <p>Schlie\u00dflich f\u00fcllen Sie den Abschnitt aus, der die 'Data Quality Information' definiert:</p> <p>Sobald Sie alle Abschnitte ausgef\u00fcllt haben, klicken Sie auf 'VALIDATE FORM' und \u00fcberpr\u00fcfen Sie das Formular auf Fehler:</p> <p></p> <p>Wenn Fehler auftreten, korrigieren Sie diese und klicken Sie erneut auf 'VALIDATE FORM'.</p> <p>Stellen Sie sicher, dass keine Fehler vorliegen und dass Sie ein Popup erhalten, das anzeigt, dass Ihr Formular validiert wurde:</p> <p></p> <p>Bevor Sie Ihren Datensatz einreichen, \u00fcberpr\u00fcfen Sie als N\u00e4chstes die Datenzuordnungen f\u00fcr Ihren Datensatz.</p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#konfigurieren-von-datenzuordnungen","title":"Konfigurieren von Datenzuordnungen","text":"<p>Da Sie eine Vorlage zur Erstellung Ihres Datensatzes verwendet haben, wurden die Datensatzzuordnungen mit den Standard-Plugins f\u00fcr den Datentyp 'weather/surface-based-observations/synop' vorausgef\u00fcllt. Daten-Plugins werden in der wis2box verwendet, um Daten zu transformieren, bevor sie \u00fcber die WIS2-Benachrichtigung ver\u00f6ffentlicht werden.</p> <p></p> <p>Beachten Sie, dass Sie auf die Schaltfl\u00e4che \"update\" klicken k\u00f6nnen, um Einstellungen f\u00fcr das Plugin wie Dateierweiterung und Dateimuster zu \u00e4ndern. Sie k\u00f6nnen die Standardeinstellungen vorerst beibehalten. In einer sp\u00e4teren Sitzung erfahren Sie mehr \u00fcber BUFR und die Transformation von Daten in das BUFR-Format.</p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#einreichen-ihres-datensatzes","title":"Einreichen Ihres Datensatzes","text":"<p>Schlie\u00dflich k\u00f6nnen Sie auf 'submit' klicken, um Ihren Datensatz zu ver\u00f6ffentlichen.</p> <p>Sie m\u00fcssen das Autorisierungstoken f\u00fcr 'processes/wis2box' angeben, das Sie zuvor erstellt haben. Wenn Sie dies noch nicht getan haben, k\u00f6nnen Sie ein neues Token erstellen, indem Sie den Anweisungen im Vorbereitungsabschnitt folgen.</p> <p>\u00dcberpr\u00fcfen Sie, ob Sie nach dem Einreichen Ihres Datensatzes die folgende Meldung erhalten, die anzeigt, dass der Datensatz erfolgreich eingereicht wurde:</p> <p></p> <p>Nachdem Sie auf 'OK' geklickt haben, werden Sie zur Startseite des Dataset Editors weitergeleitet. Wenn Sie jetzt auf die Registerkarte 'Dataset' klicken, sollten Sie Ihren neuen Datensatz aufgelistet sehen:</p> <p></p>"},{"location":"de/practical-sessions/configuring-wis2box-datasets/#uberprufen-der-wis2-benachrichtigung-fur-ihre-entdeckungsmetadaten","title":"\u00dcberpr\u00fcfen der WIS2-Benachrichtigung f\u00fcr Ihre Entdeckungsmetadaten","text":"<p>Gehen Sie zu MQTT Explorer. Wenn Sie mit dem Broker verbunden waren, sollten Sie eine neue WIS2-Benachrichtigung sehen, die unter dem Thema <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code> ver\u00f6ffentlicht wurde:</p> <p></p> <p>\u00dcberpr\u00fcfen Sie den Inhalt der WIS2-Benachrichtigung, die Sie ver\u00f6ffentlicht haben. Sie sollten ein JSON mit einer Struktur sehen, die dem WIS Notification Message (WNM)-Format entspricht.</p> <p>Question</p> <p>Unter welchem Thema wird die WIS2-Benachrichtigung ver\u00f6ffentlicht?</p> Klicken Sie, um die Antwort anzuzeigen <p>Die WIS2-Benachrichtigung wird unter dem Thema <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code> ver\u00f6ffentlicht.</p> <p>Question</p> <p>Versuchen Sie, den Titel, die Beschreibung und die Schl\u00fcsselw\u00f6rter, die Sie in den Entdeckungsmetadaten angegeben haben, in der WIS2-Benachrichtigung zu finden. K\u00f6nnen Sie sie finden?</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/","title":"Verbindung zu WIS2 \u00fcber MQTT","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>sich mit dem WIS2 Global Broker \u00fcber MQTT Explorer zu verbinden</li> <li>die WIS2-Themenstruktur zu \u00fcberpr\u00fcfen</li> <li>die Struktur der WIS2-Benachrichtigungsnachrichten zu \u00fcberpr\u00fcfen</li> </ul>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#einfuhrung","title":"Einf\u00fchrung","text":"<p>WIS2 verwendet das MQTT-Protokoll, um die Verf\u00fcgbarkeit von Wetter-/Klima-/Wasserdaten bekannt zu geben. Der WIS2 Global Broker abonniert alle WIS2-Knoten im Netzwerk und ver\u00f6ffentlicht die empfangenen Nachrichten erneut. Der Global Cache abonniert den Global Broker, l\u00e4dt die Daten in der Nachricht herunter und ver\u00f6ffentlicht die Nachricht dann erneut im <code>cache</code>-Thema mit einer neuen URL. Der Global Discovery Catalogue ver\u00f6ffentlicht Erkennungsmetadaten vom Broker und bietet eine Such-API.</p> <p>Dies ist ein Beispiel f\u00fcr die Struktur einer WIS2-Benachrichtigungsnachricht, die zum Thema <code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code> empfangen wurde:</p> <pre><code>{\n  \"id\": \"59f9b013-c4b3-410a-a52d-fff18f3f1b47\",\n  \"type\": \"Feature\",\n  \"version\": \"v04\",\n  \"geometry\": {\n    \"coordinates\": [\n      -38.69389,\n      -17.96472,\n      60\n    ],\n    \"type\": \"Point\"\n  },\n  \"properties\": {\n    \"data_id\": \"br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000\",\n    \"datetime\": \"2024-08-15T06:00:00Z\",\n    \"pubtime\": \"2024-08-15T09:52:02Z\",\n    \"integrity\": {\n      \"method\": \"sha512\",\n      \"value\": \"TBuWycx/G0lIiTo47eFPBViGutxcIyk7eikppAKPc4aHgOmTIS5Wb9+0v3awMOyCgwpFhTruRRCVReMQMp5kYw==\"\n    },\n    \"content\": {\n      \"encoding\": \"base64\",\n      \"value\": \"QlVGUgAA+gQAABYAACsAAAAAAAIAHAAH6AgPBgAAAAALAAABgMGWx1AAAM0ABOIAAAODM0OTkAAAAAAAAAAAAAAKb5oKEpJ6YkJ6mAAAAAAAAAAAAAAAAv0QeYA29WQa87ZhH4CQP//z+P//BD////+ASznXuUb///8MgAS3/////8X///e+AP////AB/+R/yf////////////////////6/1/79H/3///gEt////////4BLP6QAf/+/pAB//4H0YJ/YeAh/f2///7TH/////9+j//f///////////////////v0f//////////////////////wNzc3Nw==\",\n      \"size\": 250\n    },\n    \"wigos_station_identifier\": \"0-76-2-2900801000W83499\"\n  },\n  \"links\": [\n    {\n      \"rel\": \"canonical\",\n      \"type\": \"application/bufr\",\n      \"href\": \"http://wis2bra.inmet.gov.br/data/2024-08-15/wis/br-inmet/data/core/weather/surface-based-observations/synop/WIGOS_0-76-2-2900801000W83499_20240815T060000.bufr4\",\n      \"length\": 250\n    }\n  ]\n}\n</code></pre> <p>In dieser praktischen Sitzung lernen Sie, wie Sie das MQTT Explorer-Tool verwenden, um eine MQTT-Client-Verbindung zu einem WIS2 Global Broker einzurichten und WIS2-Benachrichtigungsnachrichten anzuzeigen.</p> <p>MQTT Explorer ist ein n\u00fctzliches Tool, um die Themenstruktur f\u00fcr einen bestimmten MQTT-Broker zu durchsuchen und zu \u00fcberpr\u00fcfen, welche Daten ver\u00f6ffentlicht werden.</p> <p>Beachten Sie, dass MQTT haupts\u00e4chlich f\u00fcr die \"Maschine-zu-Maschine\"-Kommunikation verwendet wird; das bedeutet, dass normalerweise ein Client die empfangenen Nachrichten automatisch analysieren w\u00fcrde. Um programmatisch mit MQTT zu arbeiten (zum Beispiel in Python), k\u00f6nnen Sie MQTT-Client-Bibliotheken wie paho-mqtt verwenden, um eine Verbindung zu einem MQTT-Broker herzustellen und eingehende Nachrichten zu verarbeiten. Es gibt zahlreiche MQTT-Client- und Server-Software, je nach Ihren Anforderungen und Ihrer technischen Umgebung.</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#verwendung-von-mqtt-explorer-zur-verbindung-mit-dem-global-broker","title":"Verwendung von MQTT Explorer zur Verbindung mit dem Global Broker","text":"<p>Um Nachrichten anzuzeigen, die von einem WIS2 Global Broker ver\u00f6ffentlicht wurden, k\u00f6nnen Sie \"MQTT Explorer\" verwenden, der von der MQTT Explorer-Website heruntergeladen werden kann.</p> <p>\u00d6ffnen Sie MQTT Explorer und f\u00fcgen Sie eine neue Verbindung zum Global Broker hinzu, der von MeteoFrance mit den folgenden Details gehostet wird:</p> <ul> <li>Host: globalbroker.meteo.fr</li> <li>Port: 8883</li> <li>Benutzername: everyone</li> <li>Passwort: everyone</li> </ul> <p></p> <p>Klicken Sie auf die Schaltfl\u00e4che 'ADVANCED', entfernen Sie die vorkonfigurierten Themen und f\u00fcgen Sie die folgenden Themen zum Abonnieren hinzu:</p> <ul> <li><code>origin/a/wis2/#</code></li> </ul> <p></p> <p>Note</p> <p>Bei der Einrichtung von MQTT-Abonnements k\u00f6nnen Sie die folgenden Platzhalter verwenden:</p> <ul> <li>Einstufiger Platzhalter (+): Ein einstufiger Platzhalter ersetzt eine Themenebene</li> <li>Mehrstufiger Platzhalter (#): Ein mehrstufiger Platzhalter ersetzt mehrere Themenebenen</li> </ul> <p>In diesem Fall abonniert <code>origin/a/wis2/#</code> alle Themen unter dem Thema <code>origin/a/wis2</code>.</p> <p>Klicken Sie auf 'BACK', dann auf 'SAVE', um Ihre Verbindungs- und Abonnementdetails zu speichern. Klicken Sie dann auf 'CONNECT':</p> <p>Nachrichten sollten in Ihrer MQTT Explorer-Sitzung wie folgt erscheinen:</p> <p></p> <p>Sie sind jetzt bereit, die WIS2-Themen und die Nachrichtenstruktur zu erkunden.</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#ubung-1-uberprufung-der-wis2-themenstruktur","title":"\u00dcbung 1: \u00dcberpr\u00fcfung der WIS2-Themenstruktur","text":"<p>Verwenden Sie MQTT, um die Themenstruktur unter den <code>origin</code>-Themen zu durchsuchen.</p> <p>Question</p> <p>Wie k\u00f6nnen wir das WIS-Zentrum unterscheiden, das die Daten ver\u00f6ffentlicht hat?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie k\u00f6nnen auf der linken Seite im MQTT Explorer klicken, um die Themenstruktur zu erweitern.</p> <p>Wir k\u00f6nnen das WIS-Zentrum, das die Daten ver\u00f6ffentlicht hat, anhand der vierten Ebene der Themenstruktur unterscheiden. Zum Beispiel sagt uns das folgende Thema:</p> <p><code>origin/a/wis2/br-inmet/data/core/weather/surface-based-observations/synop</code></p> <p>dass die Daten von einem WIS-Zentrum mit der Zentren-ID <code>br-inmet</code> ver\u00f6ffentlicht wurden, was die Zentren-ID f\u00fcr das Instituto Nacional de Meteorologia - INMET, Brasilien, ist.</p> <p>Question</p> <p>Wie k\u00f6nnen wir zwischen Nachrichten unterscheiden, die von WIS-Zentren mit einem GTS-zu-WIS2-Gateway und Nachrichten, die von WIS-Zentren mit einem WIS2-Knoten ver\u00f6ffentlicht wurden?</p> Klicken Sie, um die Antwort anzuzeigen <p>Wir k\u00f6nnen Nachrichten von einem GTS-zu-WIS2-Gateway anhand der Zentren-ID in der Themenstruktur unterscheiden. Zum Beispiel sagt uns das folgende Thema:</p> <p><code>origin/a/wis2/de-dwd-gts-to-wis2/data/core/I/S/A/I/01/sbbr</code></p> <p>dass die Daten vom GTS-zu-WIS2-Gateway ver\u00f6ffentlicht wurden, das vom Deutschen Wetterdienst (DWD), Deutschland, gehostet wird. Das GTS-zu-WIS2-Gateway ist ein spezieller Typ von Datenver\u00f6ffentlicher, der Daten aus dem Global Telecommunication System (GTS) an WIS2 ver\u00f6ffentlicht. Die Themenstruktur besteht aus den TTAAii CCCC-Headern f\u00fcr die GTS-Nachrichten.</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#ubung-2-uberprufung-der-wis2-nachrichtenstruktur","title":"\u00dcbung 2: \u00dcberpr\u00fcfung der WIS2-Nachrichtenstruktur","text":"<p>Trennen Sie die Verbindung zu MQTT Explorer und aktualisieren Sie die 'Advanced'-Abschnitte, um das Abonnement wie folgt zu \u00e4ndern:</p> <ul> <li><code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> <li><code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code></li> </ul> <p></p> <p>Note</p> <p>Der <code>+</code>-Platzhalter wird verwendet, um alle WIS-Zentren zu abonnieren.</p> <p>Stellen Sie die Verbindung zum Global Broker wieder her und warten Sie, bis Nachrichten erscheinen.</p> <p>Sie k\u00f6nnen den Inhalt der WIS2-Nachricht im Abschnitt \"Value\" auf der rechten Seite anzeigen. Versuchen Sie, die Themenstruktur zu erweitern, um die verschiedenen Ebenen der Nachricht zu sehen, bis Sie die letzte Ebene erreichen, und \u00fcberpr\u00fcfen Sie den Nachrichteninhalt einer der Nachrichten.</p> <p>Question</p> <p>Wie k\u00f6nnen wir den Zeitstempel identifizieren, zu dem die Daten ver\u00f6ffentlicht wurden? Und wie k\u00f6nnen wir den Zeitstempel identifizieren, zu dem die Daten gesammelt wurden?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der Zeitstempel, zu dem die Daten ver\u00f6ffentlicht wurden, ist im Abschnitt <code>properties</code> der Nachricht mit einem Schl\u00fcssel von <code>pubtime</code> enthalten.</p> <p>Der Zeitstempel, zu dem die Daten gesammelt wurden, ist im Abschnitt <code>properties</code> der Nachricht mit einem Schl\u00fcssel von <code>datetime</code> enthalten.</p> <p></p> <p>Question</p> <p>Wie k\u00f6nnen wir die Daten von der in der Nachricht angegebenen URL herunterladen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Die URL ist im Abschnitt <code>links</code> mit <code>rel=\"canonical\"</code> enthalten und wird durch den Schl\u00fcssel <code>href</code> definiert.</p> <p>Sie k\u00f6nnen die URL kopieren und in einen Webbrowser einf\u00fcgen, um die Daten herunterzuladen.</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#ubung-3-uberprufung-des-unterschieds-zwischen-origin-und-cache-themen","title":"\u00dcbung 3: \u00dcberpr\u00fcfung des Unterschieds zwischen 'origin'- und 'cache'-Themen","text":"<p>Stellen Sie sicher, dass Sie noch mit dem Global Broker verbunden sind und die Themenabonnements <code>origin/a/wis2/+/data/core/weather/surface-based-observations/synop</code> und <code>cache/a/wis2/+/data/core/weather/surface-based-observations/synop</code> wie in \u00dcbung 2 beschrieben verwenden.</p> <p>Versuchen Sie, eine Nachricht f\u00fcr dieselbe Zentren-ID zu identifizieren, die sowohl auf den Themen <code>origin</code> als auch <code>cache</code> ver\u00f6ffentlicht wurde.</p> <p>Question</p> <p>Was ist der Unterschied zwischen den Nachrichten, die auf den Themen <code>origin</code> und <code>cache</code> ver\u00f6ffentlicht wurden?</p> Klicken Sie, um die Antwort anzuzeigen <p>Die auf den <code>origin</code>-Themen ver\u00f6ffentlichten Nachrichten sind die urspr\u00fcnglichen Nachrichten, die der Global Broker von den WIS2-Knoten im Netzwerk erneut ver\u00f6ffentlicht.</p> <p>Die auf den <code>cache</code>-Themen ver\u00f6ffentlichten Nachrichten sind die Nachrichten f\u00fcr Daten, die vom Global Cache heruntergeladen wurden. Wenn Sie den Inhalt der Nachricht aus dem Thema \u00fcberpr\u00fcfen, das mit <code>cache</code> beginnt, werden Sie sehen, dass der 'canonical'-Link zu einer neuen URL aktualisiert wurde.</p> <p>Es gibt mehrere Global Caches im WIS2-Netzwerk, sodass Sie eine Nachricht von jedem Global Cache erhalten, der die Nachricht heruntergeladen hat.</p> <p>Der Global Cache l\u00e4dt nur Nachrichten herunter und ver\u00f6ffentlicht sie erneut, die in der Themenhierarchie <code>../data/core/...</code> ver\u00f6ffentlicht wurden.</p>"},{"location":"de/practical-sessions/connecting-to-wis2-over-mqtt/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt:</p> <ul> <li>wie man WIS2 Global Broker-Dienste mit MQTT Explorer abonniert</li> <li>die WIS2-Themenstruktur</li> <li>die Struktur der WIS2-Benachrichtigungsnachrichten</li> <li>den Unterschied zwischen Kern- und empfohlenen Daten</li> <li>die Themenstruktur, die vom GTS-zu-WIS2-Gateway verwendet wird</li> <li>den Unterschied zwischen Global Broker-Nachrichten, die auf den Themen <code>origin</code> und <code>cache</code> ver\u00f6ffentlicht wurden</li> </ul>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/","title":"Konvertierung von CSV-Daten zu BUFR","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>die MinIO UI zu nutzen, um CSV-Eingabedateien hochzuladen und das Ergebnis zu \u00fcberwachen</li> <li>das Format f\u00fcr CSV-Daten f\u00fcr die Verwendung mit der Standard-BUFR-Vorlage f\u00fcr automatische Wetterstationen zu kennen</li> <li>den Dataset-Editor in der wis2box webapp zu verwenden, um einen Datensatz f\u00fcr die Ver\u00f6ffentlichung von DAYCLI-Nachrichten zu erstellen</li> <li>das Format f\u00fcr CSV-Daten f\u00fcr die Verwendung mit der DAYCLI-BUFR-Vorlage zu kennen</li> <li>wis2box webapp zu verwenden, um Beispieldaten f\u00fcr AWS-Stationen zu validieren und in BUFR zu konvertieren (optional)</li> </ul>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Durch Kommas getrennte Werte (CSV) werden h\u00e4ufig verwendet, um Beobachtungs- und andere Daten in einem tabellarischen Format aufzuzeichnen.  Die meisten Datenlogger, die zur Aufzeichnung von Sensorausgaben verwendet werden, k\u00f6nnen die Beobachtungen in abgegrenzten Dateien exportieren, einschlie\u00dflich im CSV-Format. Ebenso ist es einfach, die erforderlichen Daten in CSV-formatierten Dateien zu exportieren, wenn Daten in eine Datenbank aufgenommen werden.  Um den Austausch von Daten zu erleichtern, die urspr\u00fcnglich in tabellarischen Datenformaten gespeichert wurden, wurde in der wis2box ein CSV-zu-BUFR-Konverter implementiert, der die gleiche Software wie f\u00fcr SYNOP zu BUFR verwendet.</p> <p>In dieser Sitzung lernen Sie die Verwendung des csv2bufr-Konverters in der wis2box f\u00fcr die folgenden integrierten Vorlagen kennen:</p> <ul> <li>AWS (aws-template.json): Mapping-Vorlage f\u00fcr die Konvertierung von CSV-Daten aus einer vereinfachten automatischen Wetterstationsdatei in die BUFR-Sequenz 301150, 307096\"</li> <li>DayCLI (daycli-template.json): Mapping-Vorlage f\u00fcr die Konvertierung von t\u00e4glichen Klimadaten im CSV-Format in die BUFR-Sequenz 307075</li> </ul>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#vorbereitung","title":"Vorbereitung","text":"<p>Stellen Sie sicher, dass der wis2box-Stack mit <code>python3 wis2box.py start</code> gestartet wurde</p> <p>Stellen Sie sicher, dass Sie einen Webbrowser mit der MinIO-Benutzeroberfl\u00e4che f\u00fcr Ihre Instanz ge\u00f6ffnet haben, indem Sie zu <code>http://&lt;your-host&gt;:9000</code> gehen. Wenn Sie Ihre MinIO-Anmeldedaten nicht mehr wissen, k\u00f6nnen Sie diese in der Datei <code>wis2box.env</code> im Verzeichnis <code>wis2box-1.0.0rc1</code> auf Ihrer Student-VM finden.</p> <p>Stellen Sie sicher, dass Sie MQTT Explorer ge\u00f6ffnet haben und mit Ihrem Broker verbunden sind, indem Sie die Anmeldedaten <code>everyone/everyone</code> verwenden.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#ubung-1-verwendung-von-csv2bufr-mit-der-aws-vorlage","title":"\u00dcbung 1: Verwendung von csv2bufr mit der 'AWS'-Vorlage","text":"<p>Die 'AWS'-Vorlage bietet eine vordefinierte Mapping-Vorlage zur Konvertierung von CSV-Daten von AWS-Stationen zur Unterst\u00fctzung der GBON-Berichtsanforderungen. </p> <p>Die Beschreibung der AWS-Vorlage finden Sie hier.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#uberprufen-sie-die-aws-example-eingabedaten","title":"\u00dcberpr\u00fcfen Sie die aws-example Eingabedaten","text":"<p>Laden Sie das Beispiel f\u00fcr diese \u00dcbung \u00fcber den folgenden Link herunter:</p> <p>aws-example.csv</p> <p>\u00d6ffnen Sie die heruntergeladene Datei in einem Editor und untersuchen Sie den Inhalt:</p> <p>Question</p> <p>Was f\u00e4llt Ihnen bei der Untersuchung der Datums-, Zeit- und Identifikationsfelder (WIGOS und traditionelle Kennungen) auf? Wie w\u00fcrde das heutige Datum dargestellt werden?</p> Klicken Sie, um die Antwort zu sehen <p>Jede Spalte enth\u00e4lt ein einzelnes Informationsst\u00fcck. Zum Beispiel ist das Datum in Jahr, Monat und Tag aufgeteilt, was widerspiegelt, wie die Daten in BUFR gespeichert werden. Das heutige Datum w\u00fcrde auf die Spalten \"year\", \"month\" und \"day\" aufgeteilt werden. Ebenso muss die Zeit in \"hour\" und \"minute\" und die WIGOS-Stationskennung in ihre jeweiligen Komponenten aufgeteilt werden.</p> <p>Question</p> <p>Wie werden fehlende Daten in der Datendatei kodiert?</p> Klicken Sie, um die Antwort zu sehen <p>Fehlende Daten innerhalb der Datei werden durch leere Zellen dargestellt. In einer CSV-Datei w\u00fcrde dies durch <code>,,</code> kodiert werden. Beachten Sie, dass dies eine leere Zelle ist und nicht als Zeichenkette mit L\u00e4nge Null kodiert wird, z.B. <code>,\"\",</code>.</p> <p>Fehlende Daten</p> <p>Es ist bekannt, dass Daten aus verschiedenen Gr\u00fcnden fehlen k\u00f6nnen, sei es aufgrund eines Sensorausfalls oder weil der Parameter nicht beobachtet wird. In diesen F\u00e4llen k\u00f6nnen fehlende Daten wie in der obigen Antwort kodiert werden, die anderen Daten im Bericht bleiben g\u00fcltig.</p> <p>Question</p> <p>Welche WIGOS-Stationskennungen haben die Stationen, die Daten in der Beispieldatei melden? Wie wird sie in der Eingabedatei definiert?</p> Klicken Sie, um die Antwort zu sehen <p>Die WIGOS-Stationskennung wird durch 4 separate Spalten in der Datei definiert:</p> <ul> <li>wsi_series: WIGOS-Identifikationsreihe</li> <li>wsi_issuer: WIGOS-Aussteller der Kennung</li> <li>wsi_issue_number: WIGOS-Ausgabenummer</li> <li>wsi_local: WIGOS lokale Kennung</li> </ul> <p>Die in der Beispieldatei verwendeten WIGOS-Stationskennungen sind <code>0-20000-0-60351</code>, <code>0-20000-0-60355</code> und <code>0-20000-0-60360</code>.   </p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#aktualisieren-sie-die-beispieldatei","title":"Aktualisieren Sie die Beispieldatei","text":"<p>Aktualisieren Sie die heruntergeladene Beispieldatei, um das heutige Datum und die aktuelle Uhrzeit zu verwenden, und \u00e4ndern Sie die WIGOS-Stationskennungen, um Stationen zu verwenden, die Sie in der wis2box-Webapp registriert haben.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#laden-sie-die-daten-in-minio-hoch-und-uberprufen-sie-das-ergebnis","title":"Laden Sie die Daten in MinIO hoch und \u00fcberpr\u00fcfen Sie das Ergebnis","text":"<p>Navigieren Sie zur MinIO-Benutzeroberfl\u00e4che und melden Sie sich mit den Anmeldedaten aus der Datei <code>wis2box.env</code> an.</p> <p>Navigieren Sie zu wis2box-incoming und klicken Sie auf die Schaltfl\u00e4che \"Create new path\":</p> <p></p> <p>Erstellen Sie einen neuen Ordner im MinIO-Bucket, der der dataset-id f\u00fcr den Datensatz entspricht, den Sie mit der Vorlage='weather/surface-weather-observations/synop' erstellt haben:</p> <p></p> <p>Laden Sie die heruntergeladene Beispieldatei in den von Ihnen erstellten Ordner im MinIO-Bucket hoch:</p> <p></p> <p>\u00dcberpr\u00fcfen Sie das Grafana-Dashboard unter <code>http://&lt;your-host&gt;:3000</code>, um zu sehen, ob es WARNUNGEN oder FEHLER gibt. Wenn Sie welche sehen, versuchen Sie, sie zu beheben und wiederholen Sie die \u00dcbung.</p> <p>\u00dcberpr\u00fcfen Sie den MQTT Explorer, um zu sehen, ob Sie WIS2-Datenbenachrichtigungen erhalten.</p> <p>Wenn Sie die Daten erfolgreich aufgenommen haben, sollten Sie 3 Benachrichtigungen im MQTT Explorer zum Thema <code>origin/a/wis2/&lt;centre-id&gt;/data/weather/surface-weather-observations/synop</code> f\u00fcr die 3 Stationen sehen, f\u00fcr die Sie Daten gemeldet haben:</p> <p></p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#ubung-2-verwendung-der-daycli-vorlage","title":"\u00dcbung 2 - Verwendung der 'DayCLI'-Vorlage","text":"<p>In der vorherigen \u00dcbung haben wir den Datensatz verwendet, den Sie mit Data-type='weather/surface-weather-observations/synop' erstellt haben, der die CSV-zu-BUFR-Konvertierungsvorlage auf die AWS-Vorlage vorkonfiguriert hat.</p> <p>In der n\u00e4chsten \u00dcbung werden wir die 'DayCLI'-Vorlage verwenden, um t\u00e4gliche Klimadaten in BUFR zu konvertieren.</p> <p>Die Beschreibung der DAYCLI-Vorlage finden Sie hier.</p> <p>\u00dcber die DAYCLI-Vorlage</p> <p>Bitte beachten Sie, dass die DAYCLI-BUFR-Sequenz im Laufe des Jahres 2025 aktualisiert wird, um zus\u00e4tzliche Informationen und \u00fcberarbeitete QC-Flags aufzunehmen. Die in der wis2box enthaltene DAYCLI-Vorlage wird entsprechend aktualisiert. Die WMO wird mitteilen, wann die wis2box-Software aktualisiert wird, um die neue DAYCLI-Vorlage zu integrieren, damit Benutzer ihre Systeme entsprechend aktualisieren k\u00f6nnen.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#erstellen-eines-wis2box-datensatzes-zur-veroffentlichung-von-daycli-nachrichten","title":"Erstellen eines wis2box-Datensatzes zur Ver\u00f6ffentlichung von DAYCLI-Nachrichten","text":"<p>Gehen Sie zum Dataset-Editor in der wis2box-Webapp und erstellen Sie einen neuen Datensatz. Verwenden Sie dieselbe centre-id wie in den vorherigen praktischen Sitzungen und w\u00e4hlen Sie Data Type='climate/surface-based-observations/daily':</p> <p></p> <p>Klicken Sie auf \"CONTINUE TO FORM\" und f\u00fcgen Sie eine Beschreibung f\u00fcr Ihren Datensatz hinzu, legen Sie die Bounding Box fest und geben Sie die Kontaktinformationen f\u00fcr den Datensatz an. Sobald Sie alle Abschnitte ausgef\u00fcllt haben, klicken Sie auf 'VALIDATE FORM' und \u00fcberpr\u00fcfen Sie das Formular.</p> <p>\u00dcberpr\u00fcfen Sie die Daten-Plugins f\u00fcr die Datens\u00e4tze. Klicken Sie auf \"UPDATE\" neben dem Plugin mit dem Namen \"CSV data converted to BUFR\" und Sie werden sehen, dass die Vorlage auf DayCLI eingestellt ist:</p> <p></p> <p>Schlie\u00dfen Sie die Plugin-Konfiguration und senden Sie das Formular mit dem Authentifizierungstoken, das Sie in der vorherigen praktischen Sitzung erstellt haben.</p> <p>Sie sollten jetzt einen zweiten Datensatz in der wis2box-Webapp haben, der so konfiguriert ist, dass er die DAYCLI-Vorlage f\u00fcr die Konvertierung von CSV-Daten in BUFR verwendet.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#uberprufen-sie-die-daycli-example-eingabedaten","title":"\u00dcberpr\u00fcfen Sie die daycli-example Eingabedaten","text":"<p>Laden Sie das Beispiel f\u00fcr diese \u00dcbung \u00fcber den folgenden Link herunter:</p> <p>daycli-example.csv</p> <p>\u00d6ffnen Sie die heruntergeladene Datei in einem Editor und untersuchen Sie den Inhalt:</p> <p>Question</p> <p>Welche zus\u00e4tzlichen Variablen sind in der daycli-Vorlage enthalten?</p> Klicken Sie, um die Antwort zu sehen <p>Die daycli-Vorlage enth\u00e4lt wichtige Metadaten zur Instrumentenaufstellung und Messqualit\u00e4tsklassifikationen f\u00fcr Temperatur und Feuchtigkeit, Qualit\u00e4tskontrollflags und Informationen dar\u00fcber, wie die t\u00e4gliche Durchschnittstemperatur berechnet wurde.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#aktualisieren-sie-die-beispieldatei_1","title":"Aktualisieren Sie die Beispieldatei","text":"<p>Die Beispieldatei enth\u00e4lt eine Zeile mit Daten f\u00fcr jeden Tag in einem Monat und meldet Daten f\u00fcr eine Station. Aktualisieren Sie die heruntergeladene Beispieldatei, um das heutige Datum und die aktuelle Uhrzeit zu verwenden, und \u00e4ndern Sie die WIGOS-Stationskennungen, um eine Station zu verwenden, die Sie in der wis2box-Webapp registriert haben.</p>"},{"location":"de/practical-sessions/converting-csv-data-to-bufr/#laden-sie-die-daten-in-minio-hoch-und-uberprufen-sie-das-ergebnis_1","title":"Laden Sie die Daten in MinIO hoch und \u00fcberpr\u00fcfen Sie das Ergebnis","text":"<p>Wie zuvor m\u00fcssen Sie die Daten in den 'wis2box-incoming'-Bucket in MinIO hochladen, damit sie vom csv2bufr-Konverter verarbeitet werden k\u00f6nnen. Diesmal m\u00fcssen Sie einen neuen Ordner im MinIO-Bucket erstellen, der der dataset-id f\u00fcr den Datensatz entspricht, den Sie mit der Vorlage='climate/surface-based-observations/daily' erstellt haben, die sich von der dataset-id unterscheidet, die Sie in der vorherigen \u00dcbung verwendet haben:</p> <p></p> <p>\u00dcberpr\u00fcfen Sie nach dem Hochladen der Daten, ob es keine WARNUNGEN oder FEHLER im Grafana-Dashboard gibt, und \u00fcberpr\u00fcfen Sie den MQTT Explorer, um zu sehen, ob Sie WIS2-Datenbenachrichtigungen erhalten.</p> <p>Wenn Sie die Daten erfolgreich aufgenommen haben, sollten Sie 30 Benachrichtigungen im MQTT Explorer zum Thema `origin/a/wis2//data/climate/surface-base"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/","title":"Konvertierung von SYNOP-Daten zu BUFR mit der wis2box-Webapp","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>g\u00fcltige FM-12 SYNOP-Bulletins \u00fcber die wis2box-Webanwendung zur Konvertierung in BUFR und zum Austausch \u00fcber das WIS2.0 einzureichen</li> <li>einfache Kodierungsfehler in einem FM-12 SYNOP-Bulletin vor der Formatkonvertierung und dem Austausch zu validieren, zu diagnostizieren und zu beheben</li> <li>sicherzustellen, dass die erforderlichen Stationsmetadaten in der wis2box verf\u00fcgbar sind</li> <li>erfolgreich konvertierte Bulletins zu best\u00e4tigen und zu inspizieren</li> </ul>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Um manuellen Beobachtern die direkte \u00dcbermittlung von Daten an das WIS2.0 zu erm\u00f6glichen, bietet die wis2box-Webapp ein Formular zur Konvertierung von FM-12 SYNOP-Bulletins in BUFR. Das Formular erm\u00f6glicht es Benutzern auch, einfache Kodierungsfehler im FM-12 SYNOP-Bulletin vor der Formatkonvertierung und dem Austausch zu diagnostizieren und zu beheben sowie die resultierenden BUFR-Daten zu inspizieren.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#vorbereitung","title":"Vorbereitung","text":"<p>Voraussetzungen</p> <ul> <li>Stellen Sie sicher, dass Ihre wis2box konfiguriert und gestartet wurde.</li> <li>\u00d6ffnen Sie ein Terminal und verbinden Sie sich \u00fcber SSH mit Ihrer Student-VM.</li> <li>Verbinden Sie sich mit dem MQTT-Broker Ihrer wis2box-Instanz \u00fcber MQTT Explorer.</li> <li>\u00d6ffnen Sie die wis2box-Webanwendung (<code>http://&lt;Ihr-Host-Name&gt;/wis2box-webapp</code>) und stellen Sie sicher, dass Sie angemeldet sind.</li> </ul>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#verwendung-der-wis2box-webapp-zur-konvertierung-von-fm-12-synop-zu-bufr","title":"Verwendung der wis2box-Webapp zur Konvertierung von FM-12 SYNOP zu BUFR","text":""},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#ubung-1-verwendung-der-wis2box-webapp-zur-konvertierung-von-fm-12-synop-zu-bufr","title":"\u00dcbung 1 - Verwendung der wis2box-Webapp zur Konvertierung von FM-12 SYNOP zu BUFR","text":"<p>Stellen Sie sicher, dass Sie das Auth-Token f\u00fcr \"processes/wis2box\" haben, das Sie in der vorherigen \u00dcbung generiert haben, und dass Sie mit Ihrem wis2box-Broker in MQTT Explorer verbunden sind.</p> <p>Kopieren Sie die folgende Nachricht:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n</code></pre> <p>\u00d6ffnen Sie die wis2box-Webanwendung und navigieren Sie zur synop2bufr-Seite \u00fcber die linke Navigationsleiste und fahren Sie wie folgt fort:</p> <ul> <li>F\u00fcgen Sie den kopierten Inhalt in das Texteingabefeld ein.</li> <li>W\u00e4hlen Sie Monat und Jahr \u00fcber den Datumsausw\u00e4hler, nehmen Sie f\u00fcr diese \u00dcbung den aktuellen Monat an.</li> <li>W\u00e4hlen Sie ein Thema aus dem Dropdown-Men\u00fc (die Optionen basieren auf den in der wis2box konfigurierten Datens\u00e4tzen).</li> <li>Geben Sie das \"processes/wis2box\" Auth-Token ein, das Sie zuvor generiert haben</li> <li>Stellen Sie sicher, dass \"Publish on WIS2\" eingeschaltet ist</li> <li>Klicken Sie auf \"SUBMIT\"</li> </ul> <p></p> <p>Klicken Sie auf Absenden. Sie erhalten eine Warnmeldung, da die Station nicht in der wis2box registriert ist. Gehen Sie zum Station-Editor und importieren Sie die folgende Station:</p> <pre><code>0-20000-0-15015\n</code></pre> <p>Stellen Sie sicher, dass die Station mit dem Thema verkn\u00fcpft ist, das Sie im vorherigen Schritt ausgew\u00e4hlt haben, und kehren Sie dann zur synop2bufr-Seite zur\u00fcck und wiederholen Sie den Vorgang mit denselben Daten wie zuvor.</p> <p>Question</p> <p>Wie k\u00f6nnen Sie das Ergebnis der Konvertierung von FM-12 SYNOP zu BUFR sehen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der Ergebnisbereich der Seite zeigt Warnungen, Fehler und Output-BUFR-Dateien an.</p> <p>Klicken Sie auf \"Output BUFR files\", um eine Liste der generierten Dateien zu sehen. Sie sollten eine Datei aufgelistet sehen.</p> <p>Mit der Download-Schaltfl\u00e4che k\u00f6nnen die BUFR-Daten direkt auf Ihren Computer heruntergeladen werden.</p> <p>Die Inspect-Schaltfl\u00e4che f\u00fchrt einen Prozess aus, um die Daten aus BUFR zu konvertieren und zu extrahieren.</p> <p></p> <p>Question</p> <p>Die FM-12 SYNOP-Eingabedaten enthielten nicht den Standort der Station, die H\u00f6he oder die Barometerh\u00f6he.  Best\u00e4tigen Sie, dass diese in den BUFR-Ausgabedaten enthalten sind. Woher stammen diese?</p> Klicken Sie, um die Antwort anzuzeigen <p>Wenn Sie auf die Schaltfl\u00e4che \"Inspect\" klicken, sollte ein Dialog wie unten gezeigt erscheinen.</p> <p></p> <p>Dies umfasst den auf einer Karte angezeigten Standort der Station und grundlegende Metadaten sowie die Beobachtungen in der Nachricht.</p> <p>Als Teil der Transformation von FM-12 SYNOP zu BUFR wurden der BUFR-Datei zus\u00e4tzliche Metadaten hinzugef\u00fcgt.</p> <p>Die BUFR-Datei kann auch durch Herunterladen der Datei und Validieren mit einem Tool wie dem ECMWF ecCodes BUFR-Validator inspiziert werden.</p> <p>Gehen Sie zu MQTT Explorer und \u00fcberpr\u00fcfen Sie das WIS2-Benachrichtigungsthema, um die ver\u00f6ffentlichten WIS2-Benachrichtigungen zu sehen.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#ubung-2-verstandnis-der-stationsliste","title":"\u00dcbung 2 - Verst\u00e4ndnis der Stationsliste","text":"<p>F\u00fcr diese n\u00e4chste \u00dcbung werden Sie eine Datei mit mehreren Berichten konvertieren, siehe die Daten unten:</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001=\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>Basierend auf der vorherigen \u00dcbung, schauen Sie sich die FM-12 SYNOP-Nachricht an und prognostizieren Sie, wie viele BUFR-Ausgabenachrichten generiert werden. </p> <p>Kopieren Sie nun diese Nachricht in das SYNOP-Formular und senden Sie die Daten ab.</p> <p>Entsprach die Anzahl der generierten Nachrichten Ihrer Erwartung und wenn nicht, warum nicht?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie h\u00e4tten erwarten k\u00f6nnen, dass drei BUFR-Nachrichten generiert werden, eine f\u00fcr jeden Wetterbericht. Stattdessen haben Sie jedoch 2 Warnungen und nur eine BUFR-Datei erhalten.</p> <p>Damit ein Wetterbericht in BUFR konvertiert werden kann, sind die in der Stationsliste enthaltenen grundlegenden Metadaten erforderlich. Obwohl das obige Beispiel drei Wetterberichte enth\u00e4lt, waren zwei der drei meldenden Stationen nicht in Ihrer wis2box registriert. </p> <p>Infolgedessen f\u00fchrte nur einer der drei Wetterberichte zur Generierung einer BUFR-Datei und zur Ver\u00f6ffentlichung einer WIS2-Benachrichtigung. Die anderen beiden Wetterberichte wurden ignoriert und es wurden Warnungen generiert.</p> <p>Hint</p> <p>Beachten Sie die Beziehung zwischen der WIGOS-Kennung und der traditionellen Stationskennung, die in der BUFR-Ausgabe enthalten ist. In vielen F\u00e4llen wird f\u00fcr Stationen, die zum Zeitpunkt der Migration zu WIGOS-Stationskennungen in WMO-Nr. 9 Band A aufgef\u00fchrt sind, die WIGOS-Stationskennung durch die traditionelle Stationskennung mit vorangestelltem <code>0-20000-0</code> angegeben, z.B. aus <code>15015</code> wurde <code>0-20000-0-15015</code>.</p> <p>Importieren Sie \u00fcber die Stationslistenseite die folgenden Stationen:</p> <pre><code>0-20000-0-15020\n0-20000-0-15090\n</code></pre> <p>Stellen Sie sicher, dass die Stationen mit dem Thema verkn\u00fcpft sind, das Sie in der vorherigen \u00dcbung ausgew\u00e4hlt haben, und kehren Sie dann zur synop2bufr-Seite zur\u00fcck und wiederholen Sie den Vorgang.</p> <p>Jetzt sollten drei BUFR-Dateien generiert werden und es sollten keine Warnungen oder Fehler in der Webanwendung aufgelistet sein.</p> <p>Zus\u00e4tzlich zu den grundlegenden Stationsinformationen werden weitere Metadaten wie die Stationsh\u00f6he \u00fcber dem Meeresspiegel und die Barometerh\u00f6he \u00fcber dem Meeresspiegel f\u00fcr die Kodierung in BUFR ben\u00f6tigt. Die Felder sind in den Seiten der Stationsliste und des Stationseditors enthalten.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#ubung-3-debugging","title":"\u00dcbung 3 - Debugging","text":"<p>In dieser letzten \u00dcbung werden Sie zwei der h\u00e4ufigsten Probleme identifizieren und korrigieren, die bei der Verwendung dieses Tools zur Konvertierung von FM-12 SYNOP zu BUFR auftreten.</p> <p>Beispieldaten werden im Feld unten angezeigt. Untersuchen Sie die Daten und versuchen Sie, alle m\u00f6glichen Probleme zu l\u00f6sen, bevor Sie die Daten \u00fcber die Webanwendung einreichen.</p> <p>Hint</p> <p>Sie k\u00f6nnen die Daten im Eingabefeld auf der Webapplikationsseite bearbeiten. Wenn Sie Probleme \u00fcbersehen, sollten diese erkannt und als Warnung oder Fehler hervorgehoben werden, sobald die Schaltfl\u00e4che \"Absenden\" angeklickt wurde.</p> <pre><code>AAXX 27031\n15015 02999 02501 10103 21090 39765 42952 57020 60001\n15020 02997 23104 10130 21075 30177 40377 58020 60001 81041=\n15090 02997 53102 10139 21075 30271 40364 58031 60001 82046=\n</code></pre> <p>Question</p> <p>Mit welchen Problemen haben Sie bei der Konvertierung der Daten in BUFR gerechnet und wie haben Sie diese \u00fcberwunden? Gab es Probleme, mit denen Sie nicht gerechnet haben?</p> Klicken Sie, um die Antwort anzuzeigen <p>In diesem ersten Beispiel fehlt das \"Ende des Textes\"-Symbol (=) oder Datensatztrennzeichen zwischen dem ersten und zweiten Wetterbericht. Folglich werden die Zeilen 2 und 3 als ein einziger Bericht behandelt, was zu Fehlern bei der Analyse der Nachricht f\u00fchrt.</p> <p>Das zweite Beispiel unten enth\u00e4lt mehrere h\u00e4ufige Probleme, die in FM-12 SYNOP-Berichten zu finden sind. Untersuchen Sie die Daten und versuchen Sie, die Probleme zu identifizieren, und reichen Sie dann die korrigierten Daten \u00fcber die Webanwendung ein.</p> <pre><code>AAXX 27031\n15020 02997 23104 10/30 21075 30177 40377 580200 60001 81041=\n</code></pre> <p>Question</p> <p>Welche Probleme haben Sie gefunden und wie haben Sie diese gel\u00f6st?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es gibt zwei Probleme im Wetterbericht.</p> <p>Das erste Problem in der Gruppe der vorzeichenbehafteten Lufttemperatur hat das Zehnerzeichen auf fehlend (/) gesetzt, was zu einer ung\u00fcltigen Gruppe f\u00fchrt. In diesem Beispiel wissen wir, dass die Temperatur 13,0 Grad Celsius betr\u00e4gt (aus den obigen Beispielen), so dass dieses Problem korrigiert werden kann. Im operativen Betrieb m\u00fcsste der korrekte Wert mit dem Beobachter best\u00e4tigt werden.</p> <p>Das zweite Problem tritt in Gruppe 5 auf, wo ein zus\u00e4tzliches Zeichen vorhanden ist, wobei das letzte Zeichen dupliziert ist. Dieses Problem kann durch Entfernen des zus\u00e4tzlichen Zeichens behoben werden.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#aufraumen","title":"Aufr\u00e4umen","text":"<p>W\u00e4hrend der \u00dcbungen in dieser Sitzung haben Sie mehrere Dateien in Ihre Stationsliste importiert. Navigieren Sie zur Stationslistenseite und klicken Sie auf die Papierkorbsymbole, um die Stationen zu l\u00f6schen. M\u00f6glicherweise m\u00fcssen Sie die Seite aktualisieren, damit die Stationen nach dem L\u00f6schen aus der Liste entfernt werden.</p> <p></p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr-form/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt:</p> <ul> <li>wie das synop2bufr-Tool zur Konvertierung von FM-12 SYNOP-Berichten in BUFR verwendet werden kann;</li> <li>wie man einen FM-12 SYNOP-Bericht \u00fcber die Web-App einreicht;</li> <li>wie man einfache Fehler in einem FM-12 SYNOP-Bericht diagnostiziert und korrigiert;</li> <li>die Bedeutung der Registrierung von Stationen in der wis2box (und OSCAR/Surface);</li> <li>und die Verwendung der Inspect-Schaltfl\u00e4che zur Anzeige des Inhalts von BUFR-Daten.</li> </ul>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/","title":"Konvertierung von SYNOP-Daten zu BUFR \u00fcber die Kommandozeile","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen \u00dcbung werden Sie in der Lage sein:</p> <ul> <li>das synop2bufr-Tool zu verwenden, um FM-12 SYNOP-Berichte in BUFR zu konvertieren;</li> <li>einfache Kodierungsfehler in FM-12 SYNOP-Berichten vor der Formatkonvertierung zu diagnostizieren und zu beheben;</li> </ul>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Wettermeldungen von Landstationen wurden historisch st\u00fcndlich oder zu den Haupt-  (00, 06, 12 und 18 UTC) und Zwischen-Synoptikzeiten (03, 09, 15, 21 UTC) gemeldet. Vor der Migration zu BUFR wurden diese Berichte im Klartext-Format FM-12 SYNOP kodiert. Obwohl die Migration zu BUFR bis 2012 abgeschlossen sein sollte, wird eine gro\u00dfe Anzahl von Berichten immer noch im \u00e4lteren  FM-12 SYNOP-Format ausgetauscht. Weitere Informationen zum FM-12 SYNOP-Format finden Sie im WMO-Handbuch f\u00fcr Codes,  Band I.1 (WMO-Nr. 306, Band I.1).</p> <p>WMO-Handbuch f\u00fcr Codes, Band I.1</p> <p>Um die Migration zu BUFR zu unterst\u00fctzen, wurden einige Tools zur Kodierung von FM-12 SYNOP-Berichten in BUFR entwickelt. In dieser Sitzung lernen Sie, wie Sie diese Tools verwenden k\u00f6nnen, sowie die Beziehung zwischen den Informationen in den FM-12 SYNOP-Berichten und BUFR-Nachrichten.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#vorbereitung","title":"Vorbereitung","text":"<p>Voraussetzungen</p> <ul> <li>Stellen Sie sicher, dass Ihre wis2box konfiguriert und gestartet wurde.</li> <li>Best\u00e4tigen Sie den Status, indem Sie die wis2box-API besuchen (<code>http://&lt;Ihr-Host-Name&gt;/oapi</code>) und \u00fcberpr\u00fcfen, dass die API l\u00e4uft.</li> <li>Lesen Sie unbedingt die Abschnitte synop2bufr-Grundlagen und ecCodes-Grundlagen, bevor Sie mit den \u00dcbungen beginnen.</li> </ul>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#synop2bufr-grundlagen","title":"synop2bufr-Grundlagen","text":"<p>Hier sind wichtige <code>synop2bufr</code>-Befehle und Konfigurationen:</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#transform","title":"transform","text":"<p>Die Funktion <code>transform</code> konvertiert eine SYNOP-Nachricht in BUFR:</p> <pre><code>synop2bufr data transform --metadata meine_datei.csv --output-dir ./mein_verzeichnis --year nachricht_jahr --month nachricht_monat meine_SYNOP.txt\n</code></pre> <p>Beachten Sie, dass wenn die Optionen f\u00fcr Metadaten, Ausgabeverzeichnis, Jahr und Monat nicht angegeben werden, diese ihre Standardwerte annehmen:</p> Option Standard --metadata station_list.csv --output-dir Das aktuelle Arbeitsverzeichnis. --year Das aktuelle Jahr. --month Der aktuelle Monat. <p>Note</p> <p>Bei Verwendung des Standard-Jahres und -Monats ist Vorsicht geboten, da der im Bericht angegebene Tag des Monats m\u00f6glicherweise nicht \u00fcbereinstimmt (z.B. hat der Juni keine 31 Tage).</p> <p>In den Beispielen werden Jahr und Monat nicht angegeben, Sie k\u00f6nnen also entweder selbst ein Datum festlegen oder die Standardwerte verwenden.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#eccodes-grundlagen","title":"ecCodes-Grundlagen","text":"<p>ecCodes bietet sowohl Kommandozeilentools als auch die M\u00f6glichkeit, in Ihre eigenen Anwendungen eingebettet zu werden. Im Folgenden finden Sie einige n\u00fctzliche Kommandozeilen-Dienstprogramme f\u00fcr die Arbeit mit BUFR-Daten.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#bufr_dump","title":"bufr_dump","text":"<p>Der Befehl <code>bufr_dump</code> ist ein allgemeines BUFR-Informationstool. Es hat viele Optionen, aber die folgenden werden f\u00fcr die \u00dcbungen am n\u00fctzlichsten sein:</p> <pre><code>bufr_dump -p mein_bufr.bufr4\n</code></pre> <p>Dies zeigt den BUFR-Inhalt auf Ihrem Bildschirm an. Wenn Sie sich f\u00fcr die Werte einer bestimmten Variable interessieren, verwenden Sie den Befehl <code>egrep</code>:</p> <pre><code>bufr_dump -p mein_bufr.bufr4 | egrep -i temperature\n</code></pre> <p>Dies zeigt Variablen im Zusammenhang mit Temperatur in Ihren BUFR-Daten an. Wenn Sie dies f\u00fcr mehrere Arten von Variablen tun m\u00f6chten, filtern Sie die Ausgabe mit einer Pipe (<code>|</code>):</p> <pre><code>bufr_dump -p mein_bufr.bufr4 | egrep -i 'temperature|wind'\n</code></pre>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#konvertierung-von-fm-12-synop-zu-bufr-mit-synop2bufr-uber-die-kommandozeile","title":"Konvertierung von FM-12 SYNOP zu BUFR mit synop2bufr \u00fcber die Kommandozeile","text":"<p>Die eccodes-Bibliothek und das synop2bufr-Modul sind im wis2box-api-Container installiert. Um die n\u00e4chsten \u00dcbungen durchzuf\u00fchren, kopieren wir das Verzeichnis synop2bufr-exercises in den wis2box-api-Container und f\u00fchren die \u00dcbungen von dort aus durch.</p> <pre><code>docker cp ~/exercise-materials/synop2bufr-exercises wis2box-api:/root\n</code></pre> <p>Jetzt k\u00f6nnen wir den Container betreten und die \u00dcbungen ausf\u00fchren:</p> <pre><code>docker exec -it wis2box-api /bin/bash\n</code></pre>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#ubung-1","title":"\u00dcbung 1","text":"<p>Navigieren Sie zum Verzeichnis <code>/root/synop2bufr-exercises/ex_1</code> und untersuchen Sie die SYNOP-Nachrichtendatei message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_1\nmore message.txt\n</code></pre> <p>Question</p> <p>Wie viele SYNOP-Berichte sind in dieser Datei enthalten?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es gibt 1 SYNOP-Bericht, da es nur 1 Trennzeichen (=) am Ende der Nachricht gibt.</p> <p>Untersuchen Sie die Stationsliste:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Wie viele Stationen sind in der Stationsliste aufgef\u00fchrt?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es gibt 1 Station, die station_list.csv enth\u00e4lt eine Zeile mit Stationsmetadaten.</p> <p>Question</p> <p>Versuchen Sie, <code>message.txt</code> in das BUFR-Format zu konvertieren.</p> Klicken Sie, um die Antwort anzuzeigen <p>Um die SYNOP-Nachricht in das BUFR-Format zu konvertieren, verwenden Sie den folgenden Befehl:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Tip</p> <p>Siehe den Abschnitt synop2bufr-Grundlagen.</p> <p>Untersuchen Sie die resultierenden BUFR-Daten mit <code>bufr_dump</code>.</p> <p>Question</p> <p>Finden Sie heraus, wie Sie die Breiten- und L\u00e4ngengradwerte mit denen in der Stationsliste vergleichen k\u00f6nnen.</p> Klicken Sie, um die Antwort anzuzeigen <p>Um die Breiten- und L\u00e4ngengradwerte in den BUFR-Daten mit denen in der Stationsliste zu vergleichen, verwenden Sie den folgenden Befehl:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'latitude|longitude'\n</code></pre> <p>Dies zeigt die Breiten- und L\u00e4ngengradwerte in den BUFR-Daten an.</p> <p>Tip</p> <p>Siehe den Abschnitt ecCodes-Grundlagen.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#ubung-2","title":"\u00dcbung 2","text":"<p>Navigieren Sie zum Verzeichnis <code>exercise-materials/synop2bufr-exercises/ex_2</code> und untersuchen Sie die SYNOP-Nachrichtendatei message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_2\nmore message.txt\n</code></pre> <p>Question</p> <p>Wie viele SYNOP-Berichte sind in dieser Datei enthalten?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es gibt 3 SYNOP-Berichte, da es 3 Trennzeichen (=) am Ende der Nachricht gibt.</p> <p>Untersuchen Sie die Stationsliste:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Wie viele Stationen sind in der Stationsliste aufgef\u00fchrt?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es gibt 3 Stationen, die station_list.csv enth\u00e4lt drei Zeilen mit Stationsmetadaten.</p> <p>Question</p> <p>Konvertieren Sie <code>message.txt</code> in das BUFR-Format.</p> Klicken Sie, um die Antwort anzuzeigen <p>Um die SYNOP-Nachricht in das BUFR-Format zu konvertieren, verwenden Sie den folgenden Befehl:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Question</p> <p>Wie w\u00fcrden Sie basierend auf den Ergebnissen der \u00dcbungen in dieser und der vorherigen \u00dcbung die Anzahl der resultierenden BUFR-Dateien anhand der Anzahl der SYNOP-Berichte und der in der Stationsmetadatendatei aufgef\u00fchrten Stationen vorhersagen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Um die erzeugten BUFR-Dateien zu sehen, f\u00fchren Sie den folgenden Befehl aus:</p> <pre><code>ls -l *.bufr4\n</code></pre> <p>Die Anzahl der erzeugten BUFR-Dateien entspricht der Anzahl der SYNOP-Berichte in der Nachrichtendatei.</p> <p>Untersuchen Sie die resultierenden BUFR-Daten mit <code>bufr_dump</code>.</p> <p>Question</p> <p>Wie k\u00f6nnen Sie die in den BUFR-Daten jeder erzeugten Datei kodierte WIGOS-Stations-ID \u00fcberpr\u00fcfen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Dies kann mit den folgenden Befehlen erfolgen:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15015_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15020_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <pre><code>bufr_dump -p WIGOS_0-20000-0-15090_20240921T120000.bufr4 | egrep -i 'wigos'\n</code></pre> <p>Beachten Sie, dass Sie, wenn Sie ein Verzeichnis mit nur diesen 3 BUFR-Dateien haben, Linux-Platzhalter wie folgt verwenden k\u00f6nnen:</p> <pre><code>bufr_dump -p *.bufr4 | egrep -i 'wigos'\n</code></pre>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#ubung-3","title":"\u00dcbung 3","text":"<p>Navigieren Sie zum Verzeichnis <code>exercise-materials/synop2bufr-exercises/ex_3</code> und untersuchen Sie die SYNOP-Nachrichtendatei message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_3\nmore message.txt\n</code></pre> <p>Diese SYNOP-Nachricht enth\u00e4lt nur einen l\u00e4ngeren Bericht mit mehr Abschnitten.</p> <p>Untersuchen Sie die Stationsliste:</p> <pre><code>more station_list.csv\n</code></pre> <p>Question</p> <p>Ist es problematisch, dass diese Datei mehr Stationen enth\u00e4lt als Berichte in der SYNOP-Nachricht?</p> Klicken Sie, um die Antwort anzuzeigen <p>Nein, das ist kein Problem, solange es in der Stationslistendatei eine Zeile mit einer Stations-TSI gibt, die mit der des SYNOP-Berichts \u00fcbereinstimmt, den wir konvertieren m\u00f6chten.</p> <p>Note</p> <p>Die Stationslistendatei ist eine Metadatenquelle f\u00fcr <code>synop2bufr</code>, um die Informationen bereitzustellen, die im alphanumerischen SYNOP-Bericht fehlen und im BUFR SYNOP erforderlich sind.</p> <p>Question</p> <p>Konvertieren Sie <code>message.txt</code> in das BUFR-Format.</p> Klicken Sie, um die Antwort anzuzeigen <p>Dies erfolgt mit dem Befehl <code>transform</code>, zum Beispiel:</p> <pre><code>synop2bufr data transform --metadata station_list.csv --output-dir ./ --year 2024 --month 09 message.txt\n</code></pre> <p>Untersuchen Sie die resultierenden BUFR-Daten mit <code>bufr_dump</code>.</p> <p>Question</p> <p>Finden Sie die folgenden Variablen:</p> <ul> <li>Lufttemperatur (K) des Berichts</li> <li>Gesamtbew\u00f6lkung (%) des Berichts</li> <li>Gesamtdauer des Sonnenscheins (Minuten) des Berichts</li> <li>Windgeschwindigkeit (m/s) des Berichts</li> </ul> Klicken Sie, um die Antwort anzuzeigen <p>Um die Variablen nach Schl\u00fcsselwort in den BUFR-Daten zu finden, k\u00f6nnen Sie die folgenden Befehle verwenden:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature'\n</code></pre> <p>Sie k\u00f6nnen den folgenden Befehl verwenden, um nach mehreren Schl\u00fcsselw\u00f6rtern zu suchen:</p> <pre><code>bufr_dump -p WIGOS_0-20000-0-15260_20240921T115500.bufr4 | egrep -i 'temperature|cover|sunshine|wind'\n</code></pre> <p>Tip</p> <p>Der letzte Befehl im Abschnitt ecCodes-Grundlagen k\u00f6nnte n\u00fctzlich sein.</p>"},{"location":"de/practical-sessions/converting-synop-data-to-bufr/#ubung-4","title":"\u00dcbung 4","text":"<p>Navigieren Sie zum Verzeichnis <code>exercise-materials/synop2bufr-exercises/ex_4</code> und untersuchen Sie die SYNOP-Nachrichtendatei message.txt:</p> <pre><code>cd /root/synop2bufr-exercises/ex_4\nmore message_incorrect.txt\n</code></pre> <p>!!!</p>"},{"location":"de/practical-sessions/datasets-with-access-control/","title":"Einrichtung eines empfohlenen Datensatzes mit Zugriffskontrolle","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>einen neuen Datensatz mit der Datenrichtlinie 'empfohlen' zu erstellen</li> <li>dem Datensatz ein Zugriffstoken hinzuzuf\u00fcgen</li> <li>zu \u00fcberpr\u00fcfen, dass auf den Datensatz ohne Zugriffstoken nicht zugegriffen werden kann</li> <li>das Zugriffstoken zu HTTP-Headern hinzuzuf\u00fcgen, um auf den Datensatz zuzugreifen</li> </ul>"},{"location":"de/practical-sessions/datasets-with-access-control/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Datens\u00e4tze, die nicht als 'Kern'-Datens\u00e4tze in der WMO betrachtet werden, k\u00f6nnen optional mit einer Zugriffskontrollrichtlinie konfiguriert werden. wis2box bietet einen Mechanismus, um einem Datensatz ein Zugriffstoken hinzuzuf\u00fcgen, das Benutzer daran hindert, Daten herunterzuladen, es sei denn, sie geben das Zugriffstoken in den HTTP-Headern an.</p>"},{"location":"de/practical-sessions/datasets-with-access-control/#vorbereitung","title":"Vorbereitung","text":"<p>Stellen Sie sicher, dass Sie SSH-Zugriff auf Ihre Student-VM haben und dass Ihre wis2box-Instanz l\u00e4uft.</p> <p>Stellen Sie sicher, dass Sie mit dem MQTT-Broker Ihrer wis2box-Instanz \u00fcber MQTT Explorer verbunden sind. Sie k\u00f6nnen die \u00f6ffentlichen Anmeldedaten <code>everyone/everyone</code> verwenden, um eine Verbindung zum Broker herzustellen.</p> <p>Stellen Sie sicher, dass Sie einen Webbrowser mit der wis2box-Webapp f\u00fcr Ihre Instanz ge\u00f6ffnet haben, indem Sie zu <code>http://&lt;your-host&gt;/wis2box-webapp</code> gehen.</p>"},{"location":"de/practical-sessions/datasets-with-access-control/#ubung-1-erstellen-eines-neuen-datensatzes-mit-datenrichtlinie-empfohlen","title":"\u00dcbung 1: Erstellen eines neuen Datensatzes mit Datenrichtlinie 'empfohlen'","text":"<p>Gehen Sie zur Seite 'Dataset Editor' in der wis2box-Webapp und erstellen Sie einen neuen Datensatz. Verwenden Sie dieselbe Zentrum-ID wie in den vorherigen praktischen Sitzungen und verwenden Sie die Vorlage='surface-weather-observations/synop'.</p> <p>Klicken Sie auf 'OK', um fortzufahren.</p> <p>Setzen Sie im Dataset Editor die Datenrichtlinie auf 'recommended' (beachten Sie, dass die \u00c4nderung der Datenrichtlinie die 'Topic-Hierarchie' aktualisiert). Ersetzen Sie die automatisch generierte 'Local ID' durch einen beschreibenden Namen f\u00fcr den Datensatz, z.B. 'recommended-data-with-access-control':</p> <p></p> <p>F\u00fcllen Sie weiterhin die erforderlichen Felder f\u00fcr r\u00e4umliche Eigenschaften und Kontaktinformationen aus und 'Validieren Sie das Formular', um auf Fehler zu pr\u00fcfen.</p> <p>Reichen Sie schlie\u00dflich den Datensatz ein, indem Sie das zuvor erstellte Authentifizierungstoken verwenden, und \u00fcberpr\u00fcfen Sie, ob der neue Datensatz in der wis2box-Webapp erstellt wurde.</p> <p>\u00dcberpr\u00fcfen Sie MQTT-Explorer, um zu sehen, ob Sie die WIS2-Benachrichtigungsnachricht erhalten, die den neuen Discovery-Metadatensatz zum Thema <code>origin/a/wis2/&lt;your-centre-id&gt;/metadata</code> ank\u00fcndigt.</p>"},{"location":"de/practical-sessions/datasets-with-access-control/#ubung-2-hinzufugen-eines-zugriffstokens-zum-datensatz","title":"\u00dcbung 2: Hinzuf\u00fcgen eines Zugriffstokens zum Datensatz","text":"<p>Melden Sie sich beim wis2box-Management-Container an,</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Von der Kommandozeile innerhalb des Containers k\u00f6nnen Sie einen Datensatz mit dem Befehl <code>wis2box auth add-token</code> sichern, indem Sie mit dem Flag <code>--metadata-id</code> die Metadaten-ID des Datensatzes und das Zugriffstoken als Argument angeben.</p> <p>Um beispielsweise das Zugriffstoken <code>S3cr3tT0k3n</code> zum Datensatz mit der Metadaten-ID <code>urn:wmo:md:not-my-centre:core.surface-based-observations.synop</code> hinzuzuf\u00fcgen:</p> <pre><code>wis2box auth add-token --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop S3cr3tT0k3n\n</code></pre> <p>Verlassen Sie den wis2box-Management-Container:</p> <pre><code>exit\n</code></pre>"},{"location":"de/practical-sessions/datasets-with-access-control/#ubung-3-veroffentlichen-von-daten-im-datensatz","title":"\u00dcbung 3: Ver\u00f6ffentlichen von Daten im Datensatz","text":"<p>Kopieren Sie die Datei <code>exercise-materials/access-control-exercises/aws-example2.csv</code> in das Verzeichnis, das durch <code>WIS2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code> definiert ist:</p> <pre><code>cp ~/exercise-materials/access-control-exercises/aws-example2.csv ~/wis2box-data\n</code></pre> <p>Verwenden Sie dann WinSCP oder einen Kommandozeilen-Editor, um die Datei <code>aws-example2.csv</code> zu bearbeiten und die WIGOS-Stationskennungen in den Eingabedaten zu aktualisieren, damit sie mit den Stationen in Ihrer wis2box-Instanz \u00fcbereinstimmen.</p> <p>Gehen Sie als N\u00e4chstes zum Station-Editor in der wis2box-Webapp. Aktualisieren Sie f\u00fcr jede Station, die Sie in <code>aws-example2.csv</code> verwendet haben, das Feld 'topic', damit es mit dem 'topic' des Datensatzes \u00fcbereinstimmt, den Sie in der vorherigen \u00dcbung erstellt haben.</p> <p>Diese Station wird nun mit 2 Themen verkn\u00fcpft, einem f\u00fcr den 'core'-Datensatz und einem f\u00fcr den 'recommended'-Datensatz:</p> <p></p> <p>Sie m\u00fcssen Ihr Token f\u00fcr <code>collections/stations</code> verwenden, um die aktualisierten Stationsdaten zu speichern.</p> <p>Melden Sie sich als N\u00e4chstes beim wis2box-Management-Container an:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>Von der wis2box-Kommandozeile aus k\u00f6nnen wir die Beispieldatendatei <code>aws-example2.csv</code> wie folgt in einen bestimmten Datensatz einlesen:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example2.csv --metadata-id urn:wmo:md:not-my-centre:reco.surface-based-observations.synop\n</code></pre> <p>Stellen Sie sicher, dass Sie die richtige Metadaten-ID f\u00fcr Ihren Datensatz angeben und \u00fcberpr\u00fcfen Sie, dass Sie WIS2-Datenbenachrichtigungen in MQTT Explorer erhalten, zum Thema <code>origin/a/wis2/&lt;your-centre-id&gt;/data/recommended/surface-based-observations/synop</code>.</p> <p>\u00dcberpr\u00fcfen Sie den kanonischen Link in der WIS2-Benachrichtigungsnachricht und kopieren/f\u00fcgen Sie den Link in den Browser ein, um zu versuchen, die Daten herunterzuladen.</p> <p>Sie sollten einen 403 Forbidden-Fehler sehen.</p>"},{"location":"de/practical-sessions/datasets-with-access-control/#ubung-4-hinzufugen-des-zugriffstokens-zu-http-headern-fur-den-zugriff-auf-den-datensatz","title":"\u00dcbung 4: Hinzuf\u00fcgen des Zugriffstokens zu HTTP-Headern f\u00fcr den Zugriff auf den Datensatz","text":"<p>Um zu demonstrieren, dass das Zugriffstoken erforderlich ist, um auf den Datensatz zuzugreifen, werden wir den Fehler, den Sie im Browser gesehen haben, mit der Kommandozeilenfunktion <code>wget</code> reproduzieren.</p> <p>Verwenden Sie von der Kommandozeile in Ihrer Student-VM den Befehl <code>wget</code> mit dem kanonischen Link, den Sie aus der WIS2-Benachrichtigungsnachricht kopiert haben.</p> <pre><code>wget &lt;canonical-link&gt;\n</code></pre> <p>Sie sollten sehen, dass die HTTP-Anfrage mit 401 Unauthorized zur\u00fcckkommt und die Daten nicht heruntergeladen werden.</p> <p>F\u00fcgen Sie nun das Zugriffstoken zu den HTTP-Headern hinzu, um auf den Datensatz zuzugreifen.</p> <pre><code>wget --header=\"Authorization: Bearer S3cr3tT0k3n\" &lt;canonical-link&gt;\n</code></pre> <p>Jetzt sollten die Daten erfolgreich heruntergeladen werden.</p>"},{"location":"de/practical-sessions/datasets-with-access-control/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie man:</p> <ul> <li>einen neuen Datensatz mit der Datenrichtlinie 'empfohlen' erstellt</li> <li>einem Datensatz ein Zugriffstoken hinzuf\u00fcgt</li> <li>\u00fcberpr\u00fcft, dass auf den Datensatz ohne Zugriffstoken nicht zugegriffen werden kann</li> <li>das Zugriffstoken zu HTTP-Headern hinzuf\u00fcgt, um auf den Datensatz zuzugreifen</li> </ul>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/","title":"Entdeckung von Datens\u00e4tzen aus dem WIS2 Global Discovery Catalogue","text":"<p>Lernziele!</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>pywiscat zu verwenden, um Datens\u00e4tze aus dem Global Discovery Catalogue (GDC) zu entdecken</li> </ul>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/#einfuhrung","title":"Einf\u00fchrung","text":"<p>In dieser Sitzung lernen Sie, wie Sie Daten aus dem WIS2 Global Discovery Catalogue (GDC) entdecken k\u00f6nnen.</p> <p>Derzeit sind folgende GDCs verf\u00fcgbar:</p> <ul> <li>Environment and Climate Change Canada, Meteorological Service of Canada: https://wis2-gdc.weather.gc.ca</li> <li>China Meteorological Administration: https://gdc.wis.cma.cn/api</li> <li>Deutscher Wetterdienst: https://wis2.dwd.de/gdc</li> </ul> <p>W\u00e4hrend lokaler Schulungen wird ein lokaler GDC eingerichtet, damit die Teilnehmer den GDC nach den Metadaten abfragen k\u00f6nnen, die sie von ihren wis2box-Instanzen ver\u00f6ffentlicht haben. In diesem Fall stellen die Trainer die URL zum lokalen GDC bereit.</p>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/#vorbereitung","title":"Vorbereitung","text":"<p>Note</p> <p>Bitte melden Sie sich vor dem Start an Ihrer Studenten-VM an.</p>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/#installation-von-pywiscat","title":"Installation von pywiscat","text":"<p>Verwenden Sie den Python-Paketinstaller <code>pip3</code>, um pywiscat auf Ihrer VM zu installieren: <pre><code>pip3 install pywiscat\n</code></pre></p> <p>Note</p> <p>Wenn Sie den folgenden Fehler erhalten:</p> <pre><code>WARNING: The script pywiscat is installed in '/home/username/.local/bin' which is not on PATH.\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n</code></pre> <p>F\u00fchren Sie dann den folgenden Befehl aus:</p> <pre><code>export PATH=$PATH:/home/$USER/.local/bin\n</code></pre> <p>...wobei <code>$USER</code> Ihr Benutzername auf Ihrer VM ist.</p> <p>\u00dcberpr\u00fcfen Sie, ob die Installation erfolgreich war:</p> <pre><code>pywiscat --version\n</code></pre>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/#daten-mit-pywiscat-finden","title":"Daten mit pywiscat finden","text":"<p>Standardm\u00e4\u00dfig verbindet sich pywiscat mit dem Global Discovery Catalogue von Kanada. Konfigurieren wir pywiscat so, dass es den Trainings-GDC abfragt, indem wir die Umgebungsvariable <code>PYWISCAT_GDC_URL</code> setzen:</p> <pre><code>export PYWISCAT_GDC_URL=http://&lt;lokaler-gdc-host-oder-ip&gt;\n</code></pre> <p>Verwenden wir pywiscat, um den GDC abzufragen, der im Rahmen des Trainings eingerichtet wurde.</p> <pre><code>pywiscat search --help\n</code></pre> <p>Suchen Sie nun im GDC nach allen Datens\u00e4tzen:</p> <pre><code>pywiscat search\n</code></pre> <p>Question</p> <p>Wie viele Datens\u00e4tze werden bei der Suche zur\u00fcckgegeben?</p> Klicken Sie, um die Antwort anzuzeigen <p>Die Anzahl der Datens\u00e4tze h\u00e4ngt vom GDC ab, den Sie abfragen. Bei Verwendung des lokalen Trainings-GDC sollten Sie sehen, dass die Anzahl der Datens\u00e4tze gleich der Anzahl der Datens\u00e4tze ist, die w\u00e4hrend der anderen praktischen Sitzungen in den GDC aufgenommen wurden.</p> <p>Versuchen wir, den GDC mit einem Schl\u00fcsselwort abzufragen:</p> <pre><code>pywiscat search -q observations\n</code></pre> <p>Question</p> <p>Was ist die Datenpolitik der Ergebnisse?</p> Klicken Sie, um die Antwort anzuzeigen <p>Alle zur\u00fcckgegebenen Daten sollten \"core\"-Daten angeben</p> <p>Probieren Sie weitere Abfragen mit <code>-q</code> aus</p> <p>Tip</p> <p>Das Flag <code>-q</code> erlaubt die folgende Syntax:</p> <ul> <li><code>-q synop</code>: Suche nach allen Datens\u00e4tzen mit dem Wort \"synop\"</li> <li><code>-q temp</code>: Suche nach allen Datens\u00e4tzen mit dem Wort \"temp\"</li> <li><code>-q \"observations AND fiji\"</code>: Suche nach allen Datens\u00e4tzen mit den W\u00f6rtern \"observations\" und \"fiji\"</li> <li><code>-q \"observations NOT fiji\"</code>: Suche nach allen Datens\u00e4tzen, die das Wort \"observations\", aber nicht das Wort \"fiji\" enthalten</li> <li><code>-q \"synop OR temp\"</code>: Suche nach allen Datens\u00e4tzen mit \"synop\" oder \"temp\"</li> <li><code>-q \"obs~\"</code>: Unscharfe Suche</li> </ul> <p>Bei der Suche nach Begriffen mit Leerzeichen diese in doppelte Anf\u00fchrungszeichen setzen.</p> <p>Lassen Sie uns mehr Details zu einem bestimmten Suchergebnis erhalten, an dem wir interessiert sind:</p> <pre><code>pywiscat get &lt;id&gt;\n</code></pre> <p>Tip</p> <p>Verwenden Sie den <code>id</code>-Wert aus der vorherigen Suche.</p>"},{"location":"de/practical-sessions/discovering-datasets-from-wis2-gdc/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie man:</p> <ul> <li>pywiscat verwendet, um Datens\u00e4tze aus dem WIS2 Global Discovery Catalogue zu entdecken</li> </ul>"},{"location":"de/practical-sessions/downloading-data-from-wis2/","title":"Herunterladen und Dekodieren von Daten aus WIS2","text":"<p>Lernergebnisse!</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>den \"wis2downloader\" zu verwenden, um WIS2-Datenbenachrichtigungen zu abonnieren und Daten auf Ihr lokales System herunterzuladen</li> <li>den Status der Downloads im Grafana-Dashboard anzuzeigen</li> <li>einige heruntergeladene Daten mit dem \"decode-bufr-jupyter\"-Container zu dekodieren</li> </ul>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#einfuhrung","title":"Einf\u00fchrung","text":"<p>In dieser Sitzung lernen Sie, wie Sie ein Abonnement bei einem WIS2-Broker einrichten und automatisch Daten mit dem in der wis2box enthaltenen \"wis2downloader\"-Dienst auf Ihr lokales System herunterladen k\u00f6nnen.</p> <p>\u00dcber wis2downloader</p> <p>Der wis2downloader ist auch als eigenst\u00e4ndiger Dienst verf\u00fcgbar, der auf einem anderen System als dem, das die WIS2-Benachrichtigungen ver\u00f6ffentlicht, ausgef\u00fchrt werden kann. Weitere Informationen zur Verwendung des wis2downloaders als eigenst\u00e4ndigen Dienst finden Sie unter wis2downloader.</p> <p>Wenn Sie Ihren eigenen Dienst zum Abonnieren von WIS2-Benachrichtigungen und zum Herunterladen von Daten entwickeln m\u00f6chten, k\u00f6nnen Sie den wis2downloader-Quellcode als Referenz verwenden.</p> <p>Andere</p> <p>Die folgenden Tools k\u00f6nnen auch verwendet werden, um Daten von WIS2 zu entdecken und darauf zuzugreifen:</p> <ul> <li>pywiscat bietet Suchfunktionen f\u00fcr den WIS2 Global Discovery Catalogue zur Unterst\u00fctzung der Berichterstattung und Analyse des WIS2-Katalogs und seiner zugeh\u00f6rigen Entdeckungsmetadaten</li> <li>pywis-pubsub bietet Abonnement- und Download-Funktionen f\u00fcr WMO-Daten aus WIS2-Infrastrukturdiensten</li> </ul>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#vorbereitung","title":"Vorbereitung","text":"<p>Bitte melden Sie sich vor dem Start bei Ihrer Student-VM an und stellen Sie sicher, dass Ihre wis2box-Instanz l\u00e4uft.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-1-anzeigen-des-wis2download-dashboards-in-grafana","title":"\u00dcbung 1: Anzeigen des wis2download-Dashboards in Grafana","text":"<p>\u00d6ffnen Sie einen Webbrowser und navigieren Sie zum Grafana-Dashboard f\u00fcr Ihre wis2box-Instanz, indem Sie zu <code>http://&lt;Ihr-Host&gt;:3000</code> gehen.</p> <p>Klicken Sie im linken Men\u00fc auf Dashboards und w\u00e4hlen Sie dann das wis2downloader-Dashboard aus.</p> <p>Sie sollten das folgende Dashboard sehen:</p> <p></p> <p>Dieses Dashboard basiert auf Metriken, die vom wis2downloader-Dienst ver\u00f6ffentlicht werden, und zeigt Ihnen den Status der Downloads an, die derzeit in Bearbeitung sind.</p> <p>In der oberen linken Ecke sehen Sie die Abonnements, die derzeit aktiv sind.</p> <p>Lassen Sie dieses Dashboard ge\u00f6ffnet, da Sie es in der n\u00e4chsten \u00dcbung verwenden werden, um den Download-Fortschritt zu \u00fcberwachen.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-2-uberprufen-der-wis2downloader-konfiguration","title":"\u00dcbung 2: \u00dcberpr\u00fcfen der wis2downloader-Konfiguration","text":"<p>Der vom wis2box-Stack gestartete wis2downloader-Dienst kann \u00fcber die in Ihrer wis2box.env-Datei definierten Umgebungsvariablen konfiguriert werden.</p> <p>Die folgenden Umgebungsvariablen werden vom wis2downloader verwendet:</p> <pre><code>- DOWNLOAD_BROKER_HOST: Der Hostname des MQTT-Brokers, zu dem eine Verbindung hergestellt werden soll. Standardm\u00e4\u00dfig globalbroker.meteo.fr\n- DOWNLOAD_BROKER_PORT: Der Port des MQTT-Brokers, zu dem eine Verbindung hergestellt werden soll. Standardm\u00e4\u00dfig 443 (HTTPS f\u00fcr Websockets)\n- DOWNLOAD_BROKER_USERNAME: Der Benutzername f\u00fcr die Verbindung zum MQTT-Broker. Standardm\u00e4\u00dfig everyone\n- DOWNLOAD_BROKER_PASSWORD: Das Passwort f\u00fcr die Verbindung zum MQTT-Broker. Standardm\u00e4\u00dfig everyone\n- DOWNLOAD_BROKER_TRANSPORT: websockets oder tcp, der Transportmechanismus f\u00fcr die Verbindung zum MQTT-Broker. Standardm\u00e4\u00dfig websockets,\n- DOWNLOAD_RETENTION_PERIOD_HOURS: Die Aufbewahrungsdauer in Stunden f\u00fcr die heruntergeladenen Daten. Standardm\u00e4\u00dfig 24\n- DOWNLOAD_WORKERS: Die Anzahl der zu verwendenden Download-Worker. Standardm\u00e4\u00dfig 8. Bestimmt die Anzahl der parallelen Downloads.\n- DOWNLOAD_MIN_FREE_SPACE_GB: Der minimale freie Speicherplatz in GB, der auf dem Volume, das die Downloads hostet, freigehalten werden soll. Standardm\u00e4\u00dfig 1.\n</code></pre> <p>Um die aktuelle Konfiguration des wis2downloaders zu \u00fcberpr\u00fcfen, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep DOWNLOAD\n</code></pre> <p>\u00dcberpr\u00fcfen Sie die Konfiguration des wis2downloaders</p> <p>Welcher MQTT-Broker ist standardm\u00e4\u00dfig f\u00fcr den wis2downloader eingestellt?</p> <p>Wie lange ist die standardm\u00e4\u00dfige Aufbewahrungsdauer f\u00fcr die heruntergeladenen Daten?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der standardm\u00e4\u00dfige MQTT-Broker, mit dem sich der wis2downloader verbindet, ist <code>globalbroker.meteo.fr</code>.</p> <p>Die standardm\u00e4\u00dfige Aufbewahrungsdauer f\u00fcr die heruntergeladenen Daten betr\u00e4gt 24 Stunden.</p> <p>Aktualisieren der Konfiguration des wis2downloaders</p> <p>Um die Konfiguration des wis2downloaders zu aktualisieren, k\u00f6nnen Sie die wis2box.env-Datei bearbeiten. Um die \u00c4nderungen anzuwenden, k\u00f6nnen Sie den Startbefehl f\u00fcr den wis2box-Stack erneut ausf\u00fchren:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>Sie werden sehen, dass der wis2downloader-Dienst mit der neuen Konfiguration neu gestartet wird.</p> <p>F\u00fcr diese \u00dcbung k\u00f6nnen Sie die Standardkonfiguration beibehalten.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-3-hinzufugen-von-abonnements-zum-wis2downloader","title":"\u00dcbung 3: Hinzuf\u00fcgen von Abonnements zum wis2downloader","text":"<p>Im wis2downloader-Container k\u00f6nnen Sie die Befehlszeile verwenden, um Abonnements aufzulisten, hinzuzuf\u00fcgen und zu l\u00f6schen.</p> <p>Um sich beim wis2downloader-Container anzumelden, verwenden Sie den folgenden Befehl:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>Verwenden Sie dann den folgenden Befehl, um die Abonnements aufzulisten, die derzeit aktiv sind:</p> <pre><code>wis2downloader list-subscriptions\n</code></pre> <p>Dieser Befehl gibt eine leere Liste zur\u00fcck, da derzeit keine Abonnements aktiv sind.</p> <p>F\u00fcr diese \u00dcbung abonnieren wir das Thema <code>cache/a/wis2/de-dwd-gts-to-wis2/#</code>, um Daten zu abonnieren, die vom DWD-gehosteten GTS-to-WIS2-Gateway ver\u00f6ffentlicht werden, und Benachrichtigungen vom Global Cache herunterzuladen.</p> <p>Um dieses Abonnement hinzuzuf\u00fcgen, verwenden Sie den folgenden Befehl:</p> <pre><code>wis2downloader add-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>Verlassen Sie dann den wis2downloader-Container, indem Sie <code>exit</code> eingeben:</p> <pre><code>exit\n</code></pre> <p>\u00dcberpr\u00fcfen Sie das wis2downloader-Dashboard in Grafana, um das neue Abonnement zu sehen. Warten Sie einige Minuten, und Sie sollten sehen, dass die ersten Downloads beginnen. Gehen Sie zur n\u00e4chsten \u00dcbung, sobald Sie best\u00e4tigt haben, dass die Downloads beginnen.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-4-anzeigen-der-heruntergeladenen-daten","title":"\u00dcbung 4: Anzeigen der heruntergeladenen Daten","text":"<p>Der wis2downloader-Dienst im wis2box-Stack l\u00e4dt die Daten in das Verzeichnis 'downloads' in dem Verzeichnis herunter, das Sie als WIS2BOX_HOST_DATADIR in Ihrer wis2box.env-Datei definiert haben. Um den Inhalt des Downloads-Verzeichnisses anzuzeigen, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>ls -R ~/wis2box-data/downloads\n</code></pre> <p>Beachten Sie, dass die heruntergeladenen Daten in Verzeichnissen gespeichert werden, die nach dem Thema benannt sind, unter dem die WIS2-Benachrichtigung ver\u00f6ffentlicht wurde.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-5-entfernen-von-abonnements-aus-dem-wis2downloader","title":"\u00dcbung 5: Entfernen von Abonnements aus dem wis2downloader","text":"<p>Melden Sie sich als N\u00e4chstes wieder beim wis2downloader-Container an:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>und entfernen Sie das von Ihnen erstellte Abonnement aus dem wis2downloader mit dem folgenden Befehl:</p> <pre><code>wis2downloader remove-subscription --topic cache/a/wis2/de-dwd-gts-to-wis2/#\n</code></pre> <p>Und verlassen Sie den wis2downloader-Container, indem Sie <code>exit</code> eingeben:</p> <pre><code>exit\n</code></pre> <p>\u00dcberpr\u00fcfen Sie das wis2downloader-Dashboard in Grafana, um zu sehen, dass das Abonnement entfernt wurde. Sie sollten sehen, dass die Downloads stoppen.</p>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-6-abonnieren-des-wis2training-brokers-und-einrichten-eines-neuen-abonnements","title":"\u00dcbung 6: Abonnieren des wis2training-Brokers und Einrichten eines neuen Abonnements","text":"<p>F\u00fcr die n\u00e4chste \u00dcbung werden wir den wis2training-Broker abonnieren.</p> <p>Dies zeigt, wie man einen Broker abonniert, der nicht der Standardbroker ist, und erm\u00f6glicht es Ihnen, einige Daten herunterzuladen, die vom WIS2 Training Broker ver\u00f6ffentlicht wurden.</p> <p>Bearbeiten Sie die wis2box.env-Datei und \u00e4ndern Sie DOWNLOAD_BROKER_HOST in <code>wis2training-broker.wis2dev.io</code>, DOWNLOAD_BROKER_PORT in <code>1883</code> und DOWNLOAD_BROKER_TRANSPORT in <code>tcp</code>:</p> <pre><code># downloader settings\nDOWNLOAD_BROKER_HOST=wis2training-broker.wis2dev.io\nDOWNLOAD_BROKER_PORT=1883\nDOWNLOAD_BROKER_USERNAME=everyone\nDOWNLOAD_BROKER_PASSWORD=everyone\n# download transport mechanism (tcp or websockets)\nDOWNLOAD_BROKER_TRANSPORT=tcp\n</code></pre> <p>Starten Sie dann den wis2box-Stack neu, um die \u00c4nderungen anzuwenden:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>\u00dcberpr\u00fcfen Sie die Logs des wis2downloaders, um zu sehen, ob die Verbindung zum neuen Broker erfolgreich war:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>Sie sollten die folgende Logmeldung sehen:</p> <pre><code>...\nINFO - Connecting...\nINFO - Host: wis2training-broker.wis2dev.io, port: 1883\nINFO - Connected successfully\n</code></pre> <p>Jetzt richten wir ein neues Abonnement f\u00fcr das Thema ein, um Zyklon-Track-Daten vom WIS2 Training Broker herunterzuladen.</p> <p>Melden Sie sich beim wis2downloader-Container an:</p> <pre><code>python3 wis2box-ctl.py login wis2downloader\n</code></pre> <p>Und f\u00fchren Sie den folgenden Befehl aus (kopieren und einf\u00fcgen, um Tippfehler zu vermeiden):</p> <pre><code>wis2downloader add-subscription --topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n</code></pre> <p>Verlassen Sie den wis2downloader-Container, indem Sie <code>exit</code> eingeben.</p> <p>Warten Sie, bis Sie sehen, dass die Downloads im wis2downloader-Dashboard in Grafana beginnen.</p> <p>Herunterladen von Daten vom WIS2 Training Broker</p> <p>Der WIS2 Training Broker ist ein Testbroker, der f\u00fcr Schulungszwecke verwendet wird und m\u00f6glicherweise nicht st\u00e4ndig Daten ver\u00f6ffentlicht.</p> <p>W\u00e4hrend der Pr\u00e4senzschulungen wird der lokale Trainer sicherstellen, dass der WIS2 Training Broker Daten f\u00fcr Sie zum Herunterladen ver\u00f6ffentlicht.</p> <p>Wenn Sie diese \u00dcbung au\u00dferhalb einer Schulungssitzung durchf\u00fchren, sehen Sie m\u00f6glicherweise keine heruntergeladenen Daten.</p> <p>\u00dcberpr\u00fcfen Sie, ob die Daten heruntergeladen wurden, indem Sie die wis2downloader-Logs erneut \u00fcberpr\u00fcfen:</p> <pre><code>docker logs wis2downloader\n</code></pre> <p>Sie sollten eine Logmeldung \u00e4hnlich der folgenden sehen:</p> <pre><code>[...] INFO - Message received under topic origin/a/wis2/int-wis2-training/data/core/weather/prediction/forecast/medium-range/probabilistic/trajectory\n[...] INFO - Downloaded A_JSXX05ECEP020000_C_ECMP_...\n</code></pre>"},{"location":"de/practical-sessions/downloading-data-from-wis2/#ubung-7-dekodieren-der-heruntergeladenen-daten","title":"\u00dcbung 7: Dekodieren der heruntergeladenen Daten","text":"<p>Um zu demonstrieren, wie Sie die heruntergeladenen Daten dekodieren k\u00f6nnen, starten wir einen neuen Container mit dem Image 'decode-bufr-jupyter'.</p> <p>Dieser Container startet einen Jupyter-Notebook-Server auf Ihrer Instanz, der die \"ecCodes\"-Bibliothek enth\u00e4lt, mit der Sie BUFR-Daten dekodieren k\u00f6nnen.</p> <p>Wir verwenden die Beispiel-Notebooks in <code>~/exercise-materials/notebook-examples</code>, um die heruntergeladenen Daten f\u00fcr die Zyklon-Tracks zu dekodieren.</p> <p>Um den Container zu starten, verwenden Sie den folgenden Befehl:</p> <pre><code>docker run -d --name decode-bufr-jupyter \\\n    -v ~/wis2box-data/downloads:/root/downloads \\\n    -p 8888:8888 \\\n    -e JUPYTER_TOKEN=dataismagic! \\\n    mlimper/decode-bufr-jupyter\n</code></pre> <p>\u00dcber den decode-bufr-jupyter-Container</p> <p>Der <code>decode-bufr-jupyter</code>-Container ist ein benutzerdefinierter Container, der die ecCodes-Bibliothek enth\u00e4lt und einen Jupyter-Notebook-Server ausf\u00fchrt.</p>"},{"location":"de/practical-sessions/initializing-wis2box/","title":"Initialisierung von wis2box","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>das Skript <code>wis2box-create-config.py</code> auszuf\u00fchren, um die Anfangskonfiguration zu erstellen</li> <li>wis2box zu starten und den Status seiner Komponenten zu \u00fcberpr\u00fcfen</li> <li>auf die wis2box-webapp, API, MinIO UI und das Grafana-Dashboard in einem Browser zuzugreifen</li> <li>sich mit dem lokalen wis2box-broker \u00fcber MQTT Explorer zu verbinden</li> </ul> <p>Note</p> <p>Die aktuellen Schulungsmaterialien verwenden wis2box-1.0.0rc1. </p> <p>Siehe accessing-your-student-vm f\u00fcr Anweisungen zum Herunterladen und Installieren des wis2box-Softwarepakets, wenn Sie diese Schulung au\u00dferhalb einer lokalen Schulungssitzung durchf\u00fchren.</p>"},{"location":"de/practical-sessions/initializing-wis2box/#vorbereitung","title":"Vorbereitung","text":"<p>Melden Sie sich mit Ihrem Benutzernamen und Passwort an Ihrer zugewiesenen VM an und stellen Sie sicher, dass Sie sich im Verzeichnis <code>wis2box-1.0.0rc1</code> befinden:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre>"},{"location":"de/practical-sessions/initializing-wis2box/#erstellen-der-anfangskonfiguration","title":"Erstellen der Anfangskonfiguration","text":"<p>Die Anfangskonfiguration f\u00fcr die wis2box erfordert:</p> <ul> <li>eine Umgebungsdatei <code>wis2box.env</code>, die die Konfigurationsparameter enth\u00e4lt</li> <li>ein Verzeichnis auf dem Host-Rechner, das zwischen dem Host-Rechner und den wis2box-Containern geteilt wird, definiert durch die Umgebungsvariable <code>WIS2BOX_HOST_DATADIR</code></li> </ul> <p>Das Skript <code>wis2box-create-config.py</code> kann verwendet werden, um die Anfangskonfiguration Ihrer wis2box zu erstellen. </p> <p>Es wird Ihnen eine Reihe von Fragen stellen, um Ihre Konfiguration einzurichten.</p> <p>Sie k\u00f6nnen die Konfigurationsdateien nach Abschluss des Skripts \u00fcberpr\u00fcfen und aktualisieren.</p> <p>F\u00fchren Sie das Skript wie folgt aus:</p> <pre><code>python3 wis2box-create-config.py\n</code></pre>"},{"location":"de/practical-sessions/initializing-wis2box/#wis2box-host-data-verzeichnis","title":"wis2box-host-data Verzeichnis","text":"<p>Das Skript wird Sie bitten, das Verzeichnis einzugeben, das f\u00fcr die Umgebungsvariable <code>WIS2BOX_HOST_DATADIR</code> verwendet werden soll.</p> <p>Beachten Sie, dass Sie den vollst\u00e4ndigen Pfad zu diesem Verzeichnis angeben m\u00fcssen.</p> <p>Wenn Ihr Benutzername beispielsweise <code>username</code> ist, lautet der vollst\u00e4ndige Pfad zum Verzeichnis <code>/home/username/wis2box-data</code>:</p> <pre><code>username@student-vm-username:~/wis2box-1.0.0rc1$ python3 wis2box-create-config.py\nPlease enter the directory to be used for WIS2BOX_HOST_DATADIR:\n/home/username/wis2box-data\nThe directory to be used for WIS2BOX_HOST_DATADIR will be set to:\n    /home/username/wis2box-data\nIs this correct? (y/n/exit)\ny\nThe directory /home/username/wis2box-data has been created.\n</code></pre>"},{"location":"de/practical-sessions/initializing-wis2box/#wis2box-url","title":"wis2box URL","text":"<p>Als N\u00e4chstes werden Sie aufgefordert, die URL f\u00fcr Ihre wis2box einzugeben. Dies ist die URL, die f\u00fcr den Zugriff auf die wis2box-Webanwendung, API und UI verwendet wird.</p> <p>Bitte verwenden Sie <code>http://&lt;Ihr-Hostname-oder-IP&gt;</code> als URL.</p> <pre><code>Please enter the URL of the wis2box:\n For local testing the URL is http://localhost\n To enable remote access, the URL should point to the public IP address or domain name of the server hosting the wis2box.\nhttp://username.wis2.training\nThe URL of the wis2box will be set to:\n  http://username.wis2.training\nIs this correct? (y/n/exit)\n</code></pre>"},{"location":"de/practical-sessions/initializing-wis2box/#webapp-storage-und-broker-passworter","title":"WEBAPP, STORAGE und BROKER Passw\u00f6rter","text":"<p>Sie k\u00f6nnen die Option der zuf\u00e4lligen Passwortgenerierung w\u00e4hlen, wenn Sie nach <code>WIS2BOX_WEBAPP_PASSWORD</code>, <code>WIS2BOX_STORAGE_PASSWORD</code>, <code>WIS2BOX_BROKER_PASSWORD</code> gefragt werden, oder Ihre eigenen definieren.</p> <p>Machen Sie sich keine Sorgen, diese Passw\u00f6rter zu merken, sie werden in der Datei <code>wis2box.env</code> in Ihrem wis2box-1.0.0rc1-Verzeichnis gespeichert.</p>"},{"location":"de/practical-sessions/initializing-wis2box/#uberprufung-von-wis2boxenv","title":"\u00dcberpr\u00fcfung von <code>wis2box.env</code>","text":"<p>Sobald das Skript abgeschlossen ist, \u00fcberpr\u00fcfen Sie den Inhalt der Datei <code>wis2box.env</code> in Ihrem aktuellen Verzeichnis:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env\n</code></pre> <p>Oder \u00fcberpr\u00fcfen Sie den Inhalt der Datei \u00fcber WinSCP.</p> <p>Question</p> <p>Was ist der Wert von WISBOX_BASEMAP_URL in der wis2box.env-Datei?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der Standardwert f\u00fcr WIS2BOX_BASEMAP_URL ist <code>https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png</code>.</p> <p>Diese URL verweist auf den OpenStreetMap-Tile-Server. Wenn Sie einen anderen Kartenanbieter verwenden m\u00f6chten, k\u00f6nnen Sie diese URL \u00e4ndern, um auf einen anderen Tile-Server zu verweisen.</p> <p>Question</p> <p>Was ist der Wert der Umgebungsvariable WIS2BOX_STORAGE_DATA_RETENTION_DAYS in der wis2box.env-Datei?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der Standardwert f\u00fcr WIS2BOX_STORAGE_DATA_RETENTION_DAYS betr\u00e4gt 30 Tage. Sie k\u00f6nnen diesen Wert auf eine andere Anzahl von Tagen \u00e4ndern, wenn Sie m\u00f6chten.</p> <p>Der wis2box-management-Container f\u00fchrt t\u00e4glich einen Cronjob aus, um Daten, die \u00e4lter als die durch WIS2BOX_STORAGE_DATA_RETENTION_DAYS definierte Anzahl von Tagen sind, aus dem <code>wis2box-public</code>-Bucket und dem API-Backend zu entfernen:</p> <pre><code>0 0 * * * su wis2box -c \"wis2box data clean --days=$WIS2BOX_STORAGE_DATA_RETENTION_DAYS\"\n</code></pre> <p>Note</p> <p>Die Datei <code>wis2box.env</code> enth\u00e4lt Umgebungsvariablen, die die Konfiguration Ihrer wis2box definieren. Weitere Informationen finden Sie in der wis2box-Dokumentation.</p> <p>Bearbeiten Sie die Datei <code>wis2box.env</code> nur, wenn Sie sich der \u00c4nderungen sicher sind, die Sie vornehmen. Falsche \u00c4nderungen k\u00f6nnen dazu f\u00fchren, dass Ihre wis2box nicht mehr funktioniert.</p> <p>Teilen Sie den Inhalt Ihrer <code>wis2box.env</code>-Datei mit niemandem, da sie sensible Informationen wie Passw\u00f6rter enth\u00e4lt.</p>"},{"location":"de/practical-sessions/initializing-wis2box/#wis2box-starten","title":"wis2box starten","text":"<p>Stellen Sie sicher, dass Sie sich im Verzeichnis befinden, das die Definitionsdateien des wis2box-Softwarepakets enth\u00e4lt:</p> <pre><code>cd ~/wis2box-1.0.0rc1\n</code></pre> <p>Starten Sie wis2box mit dem folgenden Befehl:</p> <pre><code>python3 wis2box-ctl.py start\n</code></pre> <p>Wenn Sie diesen Befehl zum ersten Mal ausf\u00fchren, sehen Sie die folgende Ausgabe:</p> <pre><code>No docker-compose.images-*.yml files found, creating one\nCurrent version=Undefined, latest version=1.0.0rc1\nWould you like to update ? (y/n/exit)\n</code></pre> <p>W\u00e4hlen Sie <code>y</code> und das Skript erstellt die Datei <code>docker-compose.images-1.0.0rc1.yml</code>, l\u00e4dt die erforderlichen Docker-Images herunter und startet die Dienste.</p> <p>Das Herunterladen der Images kann je nach Geschwindigkeit Ihrer Internetverbindung einige Zeit dauern. Dieser Schritt ist nur beim ersten Start von wis2box erforderlich.</p> <p>\u00dcberpr\u00fcfen Sie den Status mit dem folgenden Befehl:</p> <pre><code>python3 wis2box-ctl.py status\n</code></pre> <p>Wiederholen Sie diesen Befehl, bis alle Dienste aktiv und laufend sind.</p> <p>wis2box und Docker</p> <p>wis2box l\u00e4uft als eine Reihe von Docker-Containern, die von docker-compose verwaltet werden.</p> <p>Die Dienste sind in den verschiedenen <code>docker-compose*.yml</code> definiert, die im Verzeichnis <code>~/wis2box-1.0.0rc1/</code> zu finden sind.</p> <p>Das Python-Skript <code>wis2box-ctl.py</code> wird verwendet, um die zugrunde liegenden Docker Compose-Befehle auszuf\u00fchren, die die wis2box-Dienste steuern.</p> <p>Sie m\u00fcssen die Details der Docker-Container nicht kennen, um das wis2box-Softwarepaket auszuf\u00fchren, aber Sie k\u00f6nnen die <code>docker-compose*.yml</code>-Dateien inspizieren, um zu sehen, wie die Dienste definiert sind. Wenn Sie mehr \u00fcber Docker erfahren m\u00f6chten, finden Sie weitere Informationen in der Docker-Dokumentation.</p> <p>Um sich beim wis2box-management-Container anzumelden, verwenden Sie den folgenden Befehl:</p> <pre><code>python3 wis2box-ctl.py login\n</code></pre> <p>Innerhalb des wis2box-management-Containers k\u00f6nnen Sie verschiedene Befehle ausf\u00fchren, um Ihre wis2box zu verwalten, wie zum Beispiel:</p> <ul> <li><code>wis2box auth add-token --path processes/wis2box</code> : um ein Autorisierungstoken f\u00fcr den Endpunkt <code>processes/wis2box</code> zu erstellen</li> <li><code>wis2box data clean --days=&lt;Anzahl-der-Tage&gt;</code> : um Daten, die \u00e4lter als eine bestimmte Anzahl von Tagen sind, aus dem <code>wis2box-public</code>-Bucket zu bereinigen</li> </ul> <p>Um den Container zu verlassen und zum Host-Rechner zur\u00fcckzukehren, verwenden Sie den folgenden Befehl:</p> <pre><code>exit\n</code></pre> <p>F\u00fchren Sie den folgenden Befehl aus, um die auf Ihrem Host-Rechner laufenden Docker-Container anzuzeigen:</p> <pre><code>docker ps\n</code></pre> <p>Sie sollten die folgenden laufenden Container sehen:</p> <ul> <li>wis2box-management</li> <li>wis2box-api</li> <li>wis2box-minio</li> <li>wis2box-webapp</li> <li>wis2box-auth</li> <li>wis2box-ui</li> <li>wis2downloader</li> <li>elasticsearch</li> <li>elasticsearch-exporter</li> <li>nginx</li> <li>mosquitto</li> <li>prometheus</li> <li>grafana</li> <li>loki</li> </ul> <p>Diese Container sind Teil des wis2box-Softwarepakets und bieten die verschiedenen Dienste, die zum Betrieb der wis2box erforderlich sind.</p> <p>F\u00fchren Sie den folgenden Befehl aus, um die auf Ihrem Host-Rechner laufenden Docker-Volumes anzuzeigen:</p> <pre><code>docker volume ls\n</code></pre> <p>Sie sollten die folgenden Volumes sehen:</p> <ul> <li>wis2box_project_auth-data</li> <li>wis2box_project_es-data</li> <li>wis2box_project_htpasswd</li> <li>wis2box_project_minio-data</li> <li>wis2box_project_prometheus-data</li> <li>wis2box_project_loki-data</li> </ul> <p>Sowie einige anonyme Volumes, die von den verschiedenen Containern verwendet werden.</p> <p>Die mit <code>wis2box_project_</code> beginnenden Volumes werden verwendet, um persistente Daten f\u00fcr die verschiedenen Dienste im wis2box-Softwarepaket zu speichern.</p>"},{"location":"de/practical-sessions/initializing-wis2box/#wis2box-api","title":"wis2box API","text":"<p>Die wis2box enth\u00e4lt eine API (Application Programming Interface), die Datenzugriff und Prozesse f\u00fcr interaktive Visualisierung, Datentransformation und Ver\u00f6ffentlichung bietet.</p> <p>\u00d6ffnen Sie einen neuen Tab und navigieren Sie zur Seite <code>http://&lt;Ihr-Host&gt;/oapi</code>.</p> <p></p> <p>Dies ist die Startseite der wis2box-API (l\u00e4uft \u00fcber den wis2box-api-Container).</p> <p>Question</p> <p>Welche Sammlungen sind derzeit verf\u00fcgbar?</p> Klicken Sie, um die Antwort anzuzeigen <p>Um die derzeit \u00fcber die API verf\u00fcgbaren Sammlungen anzuzeigen, klicken Sie auf <code>View the collections in this service</code>:</p> <p></p> <p>Die folgenden Sammlungen sind derzeit verf\u00fcgbar:</p> <ul> <li>Stations</li> <li>Data notifications</li> <li>Discovery metadata</li> </ul> <p>Question</p> <p>Wie viele Datenbenachrichtigungen wurden ver\u00f6ffentlicht?</p> Klicken Sie, um die Antwort anzuzeigen <p>Klicken Sie auf \"Data notifications\" und dann auf <code>Browse through the items of \"Data Notifications\"</code>. </p> <p>Sie werden feststellen, dass auf der Seite \"No items\" steht, da noch keine Datenbenachrichtigungen ver\u00f6ffentlicht wurden.</p>"},{"location":"de/practical-sessions/initializing-wis2box/#wis2box-webapp","title":"wis2box webapp","text":"<p>\u00d6ffnen Sie einen Webbrowser und besuchen Sie die Seite <code>http://&lt;Ihr-Host&gt;/wis2box-webapp</code>.</p> <p>Sie sehen ein Popup, das nach Ihrem Benutzernamen und Passwort fragt. Verwenden Sie den Standardbenutzernamen <code>wis2box-user</code> und das in der Datei <code>wis2box.env</code> definierte <code>WIS2BOX_WEBAPP_PASSWORD</code> und klicken Sie auf \"Sign in\":</p> <p>Note</p> <p>\u00dcberpr\u00fcfen Sie Ihre wis2box.env auf den Wert Ihres WIS2BOX_WEBAPP_PASSWORD. Sie k\u00f6nnen den folgenden Befehl verwenden, um den Wert dieser Umgebungsvariable zu \u00fcberpr\u00fcfen:</p> <pre><code>cat ~/wis2box-1.0.0rc1/wis2box.env | grep WIS2BOX_WEBAPP_PASSWORD\n</code></pre> <p>Nach der Anmeldung bewegen Sie Ihre Maus zum Men\u00fc auf der linken Seite, um die in der wis2box-Webanwendung verf\u00fcgbaren Optionen zu sehen:</p> <p></p> <p>Dies ist die wis2</p>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/","title":"\u00dcberwachung von WIS2-Benachrichtigungen","text":"<p>Lernergebnisse</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>den wis2box-Workflow durch Hochladen von Daten in MinIO mit dem Befehl <code>wis2box data ingest</code> auszul\u00f6sen</li> <li>Warnungen und Fehler im Grafana-Dashboard anzuzeigen</li> <li>den Inhalt der ver\u00f6ffentlichten Daten zu \u00fcberpr\u00fcfen</li> </ul>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Das Grafana-Dashboard verwendet Daten von Prometheus und Loki, um den Status Ihrer wis2box anzuzeigen. Prometheus speichert Zeitreihendaten aus den gesammelten Metriken, w\u00e4hrend Loki die Protokolle der Container speichert, die auf Ihrer wis2box-Instanz laufen. Diese Daten erm\u00f6glichen es Ihnen zu \u00fcberpr\u00fcfen, wie viele Daten in MinIO empfangen werden und wie viele WIS2-Benachrichtigungen ver\u00f6ffentlicht werden, sowie ob Fehler in den Protokollen erkannt wurden.</p> <p>Um den Inhalt der WIS2-Benachrichtigungen zu sehen, die zu verschiedenen Themen Ihrer wis2box ver\u00f6ffentlicht werden, k\u00f6nnen Sie den Tab 'Monitor' in der wis2box-Webapp verwenden.</p>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/#vorbereitung","title":"Vorbereitung","text":"<p>In diesem Abschnitt wird der Datensatz \"surface-based-observations/synop\" verwendet, der zuvor in der praktischen Sitzung Konfigurieren von Datens\u00e4tzen in wis2box erstellt wurde.</p> <p>Melden Sie sich mit Ihrem SSH-Client (PuTTY oder einem anderen) an Ihrer Student-VM an.</p> <p>Stellen Sie sicher, dass wis2box l\u00e4uft:</p> <pre><code>cd ~/wis2box-1.0.0rc1/\npython3 wis2box-ctl.py start\npython3 wis2box-ctl.py status\n</code></pre> <p>Stellen Sie sicher, dass Sie MQTT Explorer ausf\u00fchren und mit Ihrer Instanz verbunden sind, indem Sie die \u00f6ffentlichen Anmeldedaten <code>everyone/everyone</code> mit einem Abonnement f\u00fcr das Thema <code>origin/a/wis2/#</code> verwenden.</p> <p>Stellen Sie sicher, dass Sie Zugriff auf die MinIO-Weboberfl\u00e4che haben, indem Sie zu <code>http://&lt;your-host&gt;:9000</code> gehen und angemeldet sind (mit <code>WIS2BOX_STORAGE_USERNAME</code> und <code>WIS2BOX_STORAGE_PASSWORD</code> aus Ihrer <code>wis2box.env</code>-Datei).</p> <p>Stellen Sie sicher, dass Sie einen Webbrowser mit dem Grafana-Dashboard f\u00fcr Ihre Instanz ge\u00f6ffnet haben, indem Sie zu <code>http://&lt;your-host&gt;:3000</code> gehen.</p>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/#daten-einlesen","title":"Daten einlesen","text":"<p>Bitte f\u00fchren Sie die folgenden Befehle von Ihrer SSH-Client-Sitzung aus:</p> <p>Kopieren Sie die Beispieldatei <code>aws-example.csv</code> in das Verzeichnis, das Sie als <code>WI2BOX_HOST_DATADIR</code> in Ihrer <code>wis2box.env</code>-Datei definiert haben.</p> <pre><code>cp ~/exercise-materials/monitoring-exercises/aws-example.csv ~/wis2box-data/\n</code></pre> <p>Stellen Sie sicher, dass Sie sich im Verzeichnis <code>wis2box-1.0.0rc1</code> befinden und melden Sie sich am Container wis2box-management an:</p> <pre><code>cd ~/wis2box-1.0.0rc1\npython3 wis2box-ctl.py login\n</code></pre> <p>\u00dcberpr\u00fcfen Sie, ob die Beispieldaten im Verzeichnis <code>/data/wis2box/</code> innerhalb des Containers wis2box-management verf\u00fcgbar sind:</p> <pre><code>ls -lh /data/wis2box/aws-example.csv\n</code></pre> <p>Note</p> <p>Das <code>WIS2BOX_HOST_DATADIR</code> wird als <code>/data/wis2box/</code> innerhalb des wis2box-management-Containers durch die Datei <code>docker-compose.yml</code> im Verzeichnis <code>wis2box-1.0.0rc1</code> eingebunden.</p> <p>Dies erm\u00f6glicht den Datenaustausch zwischen dem Host und dem Container.</p> <p>\u00dcbung 1: Daten mit <code>wis2box data ingest</code> einlesen</p> <p>F\u00fchren Sie den folgenden Befehl aus, um die Beispieldatei <code>aws-example.csv</code> in Ihre wis2box-Instanz einzulesen:</p> <pre><code>wis2box data ingest -p /data/wis2box/aws-example.csv --metadata-id urn:wmo:md:not-my-centre:core.surface-based-observations.synop\n</code></pre> <p>Wurden die Daten erfolgreich eingelesen? Falls nicht, was war die Fehlermeldung und wie k\u00f6nnen Sie sie beheben?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie werden folgende Ausgabe sehen:</p> <pre><code>Error: metadata_id=urn:wmo:md:not-my-centre:core.surface-based-observations.synop not found in data mappings\n</code></pre> <p>Die Fehlermeldung zeigt an, dass die von Ihnen angegebene Metadaten-ID mit keinem der Datens\u00e4tze \u00fcbereinstimmt, die Sie in Ihrer wis2box-Instanz konfiguriert haben.</p> <p>Geben Sie die richtige Metadaten-ID an, die mit dem Datensatz \u00fcbereinstimmt, den Sie in der vorherigen praktischen Sitzung erstellt haben, und wiederholen Sie den Befehl zum Einlesen der Daten, bis Sie folgende Ausgabe sehen sollten:</p> <pre><code>Processing /data/wis2box/aws-example.csv\nDone\n</code></pre> <p>Gehen Sie zur MinIO-Konsole in Ihrem Browser und \u00fcberpr\u00fcfen Sie, ob die Datei <code>aws-example.csv</code> in den Bucket <code>wis2box-incoming</code> hochgeladen wurde. Sie sollten sehen, dass es ein neues Verzeichnis mit dem Namen des Datensatzes gibt, den Sie in der Option <code>--metadata-id</code> angegeben haben:</p> <p></p> <p>Note</p> <p>Der Befehl <code>wis2box data ingest</code> hat die Datei in den Bucket <code>wis2box-incoming</code> in MinIO in ein Verzeichnis hochgeladen, das nach der von Ihnen angegebenen Metadaten-ID benannt ist.</p> <p>Gehen Sie zum Grafana-Dashboard in Ihrem Browser und \u00fcberpr\u00fcfen Sie den Status des Datenimports.</p> <p>\u00dcbung 2: \u00dcberpr\u00fcfen des Status des Datenimports</p> <p>Gehen Sie zum Grafana-Dashboard in Ihrem Browser und \u00fcberpr\u00fcfen Sie den Status des Datenimports.</p> <p>Wurden die Daten erfolgreich importiert?</p> Klicken Sie, um die Antwort anzuzeigen <p>Das Panel am unteren Rand des Grafana-Hauptdashboards meldet folgende Warnungen:    </p> <p><code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60355 not in station list; skipping</code> <code>WARNING - input=aws-example.csv warning=Station 0-20000-0-60360 not in station list; skipping</code></p> <p>Diese Warnung zeigt an, dass die Stationen nicht in der Stationsliste Ihrer wis2box definiert sind. F\u00fcr diese Station werden keine WIS2-Benachrichtigungen ver\u00f6ffentlicht, bis Sie sie zur Stationsliste hinzuf\u00fcgen und mit dem Thema f\u00fcr Ihren Datensatz verkn\u00fcpfen.</p> <p>\u00dcbung 3: Teststationen hinzuf\u00fcgen und Datenimport wiederholen</p> <p>F\u00fcgen Sie die Stationen zu Ihrer wis2box hinzu, indem Sie den Stationseditor in wis2box-webapp verwenden, und verkn\u00fcpfen Sie die Stationen mit dem Thema f\u00fcr Ihren Datensatz.</p> <p>Laden Sie nun die Beispieldatei <code>aws-example.csv</code> erneut in denselben Pfad in MinIO hoch, den Sie in der vorherigen \u00dcbung verwendet haben.</p> <p>\u00dcberpr\u00fcfen Sie das Grafana-Dashboard. Gibt es neue Fehler oder Warnungen? Wie k\u00f6nnen Sie sehen, dass die Testdaten erfolgreich importiert und ver\u00f6ffentlicht wurden?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie k\u00f6nnen die Diagramme im Grafana-Hauptdashboard \u00fcberpr\u00fcfen, um zu sehen, ob die Testdaten erfolgreich importiert und ver\u00f6ffentlicht wurden.</p> <p>Bei Erfolg sollten Sie Folgendes sehen:</p> <p></p> <p>\u00dcbung 4: MQTT-Broker auf WIS2-Benachrichtigungen \u00fcberpr\u00fcfen</p> <p>Gehen Sie zum MQTT Explorer und \u00fcberpr\u00fcfen Sie, ob Sie die WIS2-Benachrichtigungsnachricht f\u00fcr die Daten sehen k\u00f6nnen, die Sie gerade importiert haben.</p> <p>Wie viele WIS2-Datenbenachrichtigungen wurden von Ihrer wis2box ver\u00f6ffentlicht?</p> <p>Wie greifen Sie auf den Inhalt der ver\u00f6ffentlichten Daten zu?</p> Klicken Sie, um die Antwort anzuzeigen <p>Sie sollten 6 WIS2-Datenbenachrichtigungen sehen, die von Ihrer wis2box ver\u00f6ffentlicht wurden.</p> <p>Um auf den Inhalt der ver\u00f6ffentlichten Daten zuzugreifen, k\u00f6nnen Sie die Themenstruktur erweitern, um die verschiedenen Ebenen der Nachricht zu sehen, bis Sie die letzte Ebene erreichen und den Nachrichteninhalt einer der Nachrichten \u00fcberpr\u00fcfen.</p> <p>Der Nachrichteninhalt hat einen Abschnitt \"links\" mit einem Schl\u00fcssel \"rel\" von \"canonical\" und einem Schl\u00fcssel \"href\" mit der URL zum Herunterladen der Daten. Die URL hat das Format <code>http://&lt;your-host&gt;/data/...</code>. </p> <p>Beachten Sie, dass das Datenformat BUFR ist und Sie einen BUFR-Parser ben\u00f6tigen, um den Inhalt der Daten anzuzeigen. Das BUFR-Format ist ein bin\u00e4res Format, das von meteorologischen Diensten zum Datenaustausch verwendet wird. Die Daten-Plugins innerhalb von wis2box haben die Daten von CSV nach BUFR umgewandelt, bevor sie ver\u00f6ffentlicht wurden.</p>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/#anzeigen-des-inhalts-der-veroffentlichten-daten","title":"Anzeigen des Inhalts der ver\u00f6ffentlichten Daten","text":"<p>Sie k\u00f6nnen die wis2box-webapp verwenden, um den Inhalt der WIS2-Datenbenachrichtigungen anzuzeigen, die von Ihrer wis2box ver\u00f6ffentlicht wurden.</p> <p>\u00d6ffnen Sie die wis2box-webapp in Ihrem Browser, indem Sie zu <code>http://&lt;your-host&gt;/wis2box-webapp</code> navigieren und w\u00e4hlen Sie den Tab Monitoring:</p> <p></p> <p>W\u00e4hlen Sie im Monitoring-Tab Ihre Datensatz-ID aus und klicken Sie auf \"UPDATE\"</p> \u00dcbung 5: WIS2-Benachrichtigungen in der wis2box-webapp anzeigen <p>Wie viele WIS2-Datenbenachrichtigungen wurden von Ihrer wis2box ver\u00f6ffentlicht? </p> <p>Wie hoch ist die in der letzten Benachrichtigung gemeldete Lufttemperatur an der Station mit der WIGOS-Kennung=0-20000-0-60355?</p> Klicken Sie, um die Antwort anzuzeigen <p>Wenn Sie die Testdaten erfolgreich importiert haben, sollten Sie 6 WIS2-Datenbenachrichtigungen sehen, die von Ihrer wis2box ver\u00f6ffentlicht wurden.</p> <p>Um die gemessene Lufttemperatur f\u00fcr die Station mit der WIGOS-Kennung=0-20000-0-60355 zu sehen, klicken Sie auf die Schaltfl\u00e4che \"INSPECT\" neben der Datei f\u00fcr diese Station, um ein Popup-Fenster zu \u00f6ffnen, das den geparsten Inhalt der Datendatei anzeigt. Die an dieser Station gemessene Lufttemperatur betrug 25,0 Grad Celsius.</p> <p>Note</p> <p>Der wis2box-api-Container enth\u00e4lt Tools zum Parsen von BUFR-Dateien und zum Anzeigen des Inhalts in einem f\u00fcr Menschen lesbaren Format. Dies ist keine Kernanforderung f\u00fcr die WIS2.0-Implementierung, wurde aber in die wis2box aufgenommen, um Datenpublizierern bei der \u00dcberpr\u00fcfung des Inhalts der von ihnen ver\u00f6ffentlichten Daten zu helfen.</p>"},{"location":"de/practical-sessions/monitoring-wis2-notifications/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie man:</p> <ul> <li>den wis2box-Workflow durch Hochladen von Daten in MinIO mit dem Befehl <code>wis2box data ingest</code> ausl\u00f6st</li> <li>die von Ihrer wis2box ver\u00f6ffentlichten WIS2-Benachrichtigungen im Grafana-Dashboard und MQTT Explorer anzeigt</li> <li>den Inhalt der ver\u00f6ffentlichten Daten mit der wis2box-webapp \u00fcberpr\u00fcft</li> </ul>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/","title":"Abfrage von Daten \u00fcber die wis2box API","text":"<p>Lernziele</p> <p>Am Ende dieser praktischen Sitzung werden Sie in der Lage sein:</p> <ul> <li>die wis2box API zu nutzen, um Ihre Stationen abzufragen und zu filtern</li> <li>die wis2box API zu nutzen, um Ihre Daten abzufragen und zu filtern</li> </ul>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Die wis2box API bietet Entdeckungs- und Abfragezugriff in maschinenlesbarer Form auf die Daten, die in wis2box aufgenommen wurden. Die API basiert auf dem OGC API - Features Standard und wird mit pygeoapi implementiert.</p> <p>Die wis2box API bietet Zugriff auf die folgenden Sammlungen:</p> <ul> <li>Stationen</li> <li>Entdeckungsmetadaten</li> <li>Datenbenachrichtigungen</li> <li>plus eine Sammlung pro konfiguriertem Datensatz, die die Ausgabe von bufr2geojson speichert (das Plugin <code>bufr2geojson</code> muss in der Datenzuordnungskonfiguration aktiviert sein, um die Elemente in der Datensatzsammlung zu f\u00fcllen).</li> </ul> <p>In dieser praktischen Sitzung lernen Sie, wie Sie die Daten-API verwenden k\u00f6nnen, um Daten zu durchsuchen und abzufragen, die in wis2box aufgenommen wurden.</p>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#vorbereitung","title":"Vorbereitung","text":"<p>Note</p> <p>Navigieren Sie zur wis2box API-Startseite in Ihrem Webbrowser:</p> <p><code>http://&lt;your-host&gt;/oapi</code></p> <p></p>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#sammlungen-inspizieren","title":"Sammlungen inspizieren","text":"<p>Klicken Sie auf der Startseite auf den Link 'Collections'.</p> <p>Question</p> <p>Wie viele Datensatzsammlungen sehen Sie auf der resultierenden Seite? Was denken Sie, was jede Sammlung darstellt?</p> Klicken Sie, um die Antwort anzuzeigen <p>Es sollten 4 Sammlungen angezeigt werden, darunter \"Stations\", \"Discovery metadata\" und \"Data notifications\"</p>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#stationen-inspizieren","title":"Stationen inspizieren","text":"<p>Klicken Sie auf der Startseite auf den Link 'Collections' und dann auf den Link 'Stations'.</p> <p></p> <p>Klicken Sie auf den Link 'Browse' und dann auf den Link 'json'.</p> <p>Question</p> <p>Wie viele Stationen werden zur\u00fcckgegeben? Vergleichen Sie diese Zahl mit der Stationsliste unter <code>http://&lt;your-host&gt;/wis2box-webapp/station</code></p> Klicken Sie, um die Antwort anzuzeigen <p>Die Anzahl der Stationen aus der API sollte gleich der Anzahl der Stationen sein, die Sie in der wis2box-Webapp sehen.</p> <p>Question</p> <p>Wie k\u00f6nnen wir nach einer einzelnen Station suchen (z.B. <code>Balaka</code>)?</p> Klicken Sie, um die Antwort anzuzeigen <p>Fragen Sie die API mit <code>http://&lt;your-host&gt;/oapi/collections/stations/items?q=Balaka</code> ab.</p> <p>Note</p> <p>Das obige Beispiel basiert auf den Testdaten aus Malawi. Versuchen Sie, gegen die Stationen zu testen, die Sie im Rahmen der vorherigen \u00dcbungen aufgenommen haben.</p>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#beobachtungen-inspizieren","title":"Beobachtungen inspizieren","text":"<p>Note</p> <p>Das obige Beispiel basiert auf den Testdaten aus Malawi. Versuchen Sie, gegen die Beobachtungen zu testen, die Sie im Rahmen der \u00dcbungen aufgenommen haben.</p> <p>Klicken Sie auf der Startseite auf den Link 'Collections' und dann auf den Link 'Surface weather observations from Malawi'.</p> <p></p> <p>Klicken Sie auf den Link 'Queryables'.</p> <p></p> <p>Question</p> <p>Welche Abfragem\u00f6glichkeit w\u00fcrde verwendet werden, um nach Stationskennung zu filtern?</p> Klicken Sie, um die Antwort anzuzeigen <p>Der <code>wigos_station_identifer</code> ist die richtige Abfragem\u00f6glichkeit.</p> <p>Navigieren Sie zur vorherigen Seite (d.h. <code>http://&lt;your-host&gt;/oapi/collections/urn:wmo:md:mwi:mwi_met_centre:surface-weather-observations</code>)</p> <p>Klicken Sie auf den Link 'Browse'.</p> <p>Question</p> <p>Wie k\u00f6nnen wir die JSON-Antwort visualisieren?</p> Klicken Sie, um die Antwort anzuzeigen <p>Indem Sie auf den Link 'JSON' oben rechts auf der Seite klicken oder indem Sie <code>f=json</code> zur API-Anfrage im Webbrowser hinzuf\u00fcgen.</p> <p>\u00dcberpr\u00fcfen Sie die JSON-Antwort der Beobachtungen.</p> <p>Question</p> <p>Wie viele Datens\u00e4tze werden zur\u00fcckgegeben?</p> <p>Question</p> <p>Wie k\u00f6nnen wir die Antwort auf 3 Beobachtungen beschr\u00e4nken?</p> Klicken Sie, um die Antwort anzuzeigen <p>F\u00fcgen Sie <code>limit=3</code> zur API-Anfrage hinzu.</p> <p>Question</p> <p>Wie k\u00f6nnen wir die Antwort nach den neuesten Beobachtungen sortieren?</p> Klicken Sie, um die Antwort anzuzeigen <p>F\u00fcgen Sie <code>sortby=-resultTime</code> zur API-Anfrage hinzu (beachten Sie das <code>-</code>-Zeichen, um die absteigende Sortierreihenfolge anzugeben). Um nach den fr\u00fchesten Beobachtungen zu sortieren, aktualisieren Sie die Anfrage, um <code>sortby=resultTime</code> einzuschlie\u00dfen.</p> <p>Question</p> <p>Wie k\u00f6nnen wir die Beobachtungen nach einer einzelnen Station filtern?</p> Klicken Sie, um die Antwort anzuzeigen <p>F\u00fcgen Sie <code>wigos_station_identifier=&lt;WSI&gt;</code> zur API-Anfrage hinzu.</p> <p>Question</p> <p>Wie k\u00f6nnen wir die Beobachtungen als CSV erhalten?</p> Klicken Sie, um die Antwort anzuzeigen <p>F\u00fcgen Sie <code>f=csv</code> zur API-Anfrage hinzu.</p> <p>Question</p> <p>Wie k\u00f6nnen wir eine einzelne Beobachtung (ID) anzeigen?</p> Klicken Sie, um die Antwort anzuzeigen <p>Verwenden Sie die Feature-ID aus einer API-Anfrage gegen die Beobachtungen und fragen Sie die API f\u00fcr <code>http://&lt;your-host&gt;/oapi/collections/{collectionId}/items/{featureId}</code> ab, wobei <code>{collectionId}</code> der Name Ihrer Beobachtungssammlung und <code>{itemId}</code> die Kennung der einzelnen interessierenden Beobachtung ist.</p>"},{"location":"de/practical-sessions/querying-data-using-the-wis2box-api/#fazit","title":"Fazit","text":"<p>Herzlichen Gl\u00fcckwunsch!</p> <p>In dieser praktischen Sitzung haben Sie gelernt, wie man:</p> <ul> <li>die wis2box API nutzt, um Ihre Stationen abzufragen und zu filtern</li> <li>die wis2box API nutzt, um Ihre Daten abzufragen und zu filtern</li> </ul>"}]}